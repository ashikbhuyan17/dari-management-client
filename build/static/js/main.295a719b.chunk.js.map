{"version":3,"sources":["assets/global/Typography.js","assets/global/Shadows.js","assets/global/Theme-variable.js","HTTP/token.js","HTTP/url.js","views/Dashboard/Components/DashboardCards.jsx","views/Dashboard/Components/months.js","views/Dashboard/Components/DashboardSales.jsx","views/Dashboard/Components/DashboardPurchase.jsx","views/Dashboard/Components/DashboardExpense.jsx","views/Dashboard/Views/Dashboard.jsx","views/Inventory/Components/Sub-Components/Recipe/CreateRecipeModal.jsx","views/Inventory/Components/Sub-Components/Recipe/EditRecipeModal.jsx","views/Inventory/Components/Sub-Components/ProductRecipeList.jsx","views/Inventory/Components/Sub-Components/Recipe/AddRecipeItemModal.jsx","views/Inventory/Components/Sub-Components/Recipe/EditRecipeItemModal.jsx","views/Inventory/Components/Sub-Components/RecipeItemList.jsx","views/Inventory/Components/Sub-Components/ProductRecipeListTabs.jsx","views/Inventory/Views/ProductAdd.jsx","views/Inventory/Components/Sub-Components/AddCategoryModal.jsx","views/Inventory/Views/ProductCategories.jsx","views/Inventory/Components/Sub-Components/AddProductModal.jsx","views/Inventory/Components/Sub-Components/AnimalList.js","views/Inventory/Components/AllProducts.jsx","views/Inventory/Views/ProductList.jsx","views/Inventory/Components/Sub-Components/AddWarrantyModal.jsx","views/Inventory/Views/WarrantyList.jsx","views/Purchases/Components/AddPurchasForm.jsx","views/Purchases/Views/AddPurchase.jsx","views/Purchases/Components/AddPurchaseReturnFilter.jsx","views/Purchases/Views/AddPurchaseReturn.jsx","views/Purchases/Components/ViewPurchaseModal.jsx","views/Purchases/Components/EditPurchaseModal.jsx","views/Purchases/Views/PurchaseList.jsx","views/Purchases/Components/PurchaseReturnFilter.jsx","views/Purchases/Components/PurchaseReturnTable.jsx","views/Purchases/Views/PurchaseReturn.jsx","views/Reports/Components/Activity Log/ActivityLogTable.jsx","views/Reports/Views/ActivityLogReport.jsx","views/Reports/Components/Expense Report/ExpenseReportFilter.jsx","views/Reports/Components/Expense Report/ExpenseReportTable.jsx","views/Reports/Views/ExpenseReport.jsx","views/Reports/Components/Stock Adjustment Report/StockAdjustmentFilter.jsx","views/Reports/Components/Stock Adjustment Report/StockADjustmentAmounts.jsx","views/Reports/Components/Stock Adjustment Report/StockAdjustmentTable.jsx","views/Reports/Views/StockAdjustmentReport.jsx","views/Login/login.jsx","views/Purchases/Components/AddPurchaseCategoryForm.jsx","views/Purchases/Components/EditPurchaseCategoryModal.jsx","views/Purchases/Components/PurchaseCategoryList.jsx","views/Purchases/Views/AddPurchaseCategory.jsx","views/Inventory/Components/Sub-Components/AddGeneralItemModal.jsx","views/Inventory/Components/Sub-Components/EditGeneralItemModal.jsx","views/Inventory/Components/Sub-Components/IncreaseGeneralItemQuantity.jsx","views/Inventory/Components/Sub-Components/PrintGeneralItemsStock.jsx","views/Inventory/Views/GeneralItems.jsx","views/Stock-Adjustment/Components/AddRawMaterialStockAdjustment.jsx","views/Stock-Adjustment/Views/RawMaterialStockAdjustment.jsx","views/Stock-Adjustment/Components/AddGeneralItemStockAdjustment.jsx","views/Stock-Adjustment/Views/GeneralItemStockAdjustment.jsx","views/Reports/Components/Raw Material/RawMaterialStockAdjustment.jsx","views/Reports/Views/RawMaterialStockAdjustmentReport.jsx","views/Reports/Components/Raw Material/RawMaterialIncreaseStockTable.jsx","views/Reports/Views/RawMaterialIncreaseStockReport.jsx","views/Reports/Components/GeneralItem/GeneralItemStockAdjustmentTable.jsx","views/Reports/Views/GeneralItemStockAdjustmentReport.jsx","views/Reports/Components/GeneralItem/GeneralItemIncreaseStockReportTable.jsx","views/Reports/Views/GeneralItemIncreaseStockReport.jsx","views/Reports/Components/Sales Report/SalesDetails.jsx","views/Reports/Components/Items Report/ItemsReportFilter.jsx","views/Reports/Components/Items Report/ItemsReportTable.jsx","views/Reports/Views/ItemsReport.jsx","views/Inventory/Components/Sub-Components/AddProductBrandModal.jsx","views/Inventory/Components/Sub-Components/Edit.Raw.Material.Modal.jsx","views/Inventory/Components/Sub-Components/IncreaseRawMaterialQuantityModal.jsx","views/Inventory/Components/Sub-Components/PrintRawMaterialStock.jsx","views/Inventory/Views/RawMaterial.jsx","views/Reports/Components/Sales Report/SalesReportListFilter.jsx","views/Reports/Components/Sales Report/SalesReportListTable.jsx","views/Reports/Views/SalesReportList.jsx","views/Reports/Components/Sales Report/SalesItemsList.jsx","views/Reports/Components/Sales Report/SalesReportBook.jsx","views/Reports/Components/Sales Report/SalesReportFilter.jsx","views/Reports/Views/SalesReport.jsx","views/Reports/Components/Profit/ProfitReportFilter.jsx","views/Reports/Components/Profit/ProfitReportTable.jsx","views/Reports/Views/ProfitReport.jsx","views/Reports/Components/Item Sales Report/ItemSalesReportFilter.jsx","views/User Management/Components/UserCreateForm.jsx","views/User Management/Components/UserDetails.jsx","views/User Management/Components/UserEditForm.jsx","views/Reports/Components/Item Sales Report/ItemSalesReportTable.jsx","views/Reports/Views/ItemSalesReport.jsx","views/Register/Register.js","routes/Router.js","App.js","views/Spinner/Spinner.js","index.js"],"names":["typography","fontFamily","body1","fontWeight","h1","fontSize","letterSpacing","h2","h3","h4","h5","h6","buttons","textTransform","shadows","SidebarWidth","TopbarHeight","baseTheme","createTheme","direction","palette","primary","main","light","secondary","background","default","success","contrastText","danger","error","warning","text","shape","borderRadius","components","MuiCssBaseline","styleOverrides","boxSizing","html","height","width","body","margin","padding","MuiContainer","root","paddingLeft","paddingRight","maxWidth","MuiButton","boxShadow","MuiListItem","MuiCard","MuiListItemIcon","minWidth","MuiGridItem","paddingTop","mixins","toolbar","color","minHeight","status","getAccessToken","localStorage","getItem","getUrl","process","DashboardCards","useState","totalSale","setTotalSale","getMonthlyTotalSale","a","month","year","axios","get","headers","Authorization","response","data","totalsale","totalPurchase","setTotalPurchase","getMonthlyTotalPurchase","totalpurchase","totalExpense","setTotalExpense","getMonthlyTotalExpense","totalexpense","useEffect","Grid","container","spacing","item","lg","md","Card","CardContent","Number","months","DashboardSales","orderReport","setOrderSaleReport","getOrderSaleMonthlyReport","labels","map","order","orderdate","datasets","label","fill","backgroundColor","borderColor","monthYear","setMonthDate","getReport","value","filteredData","split","monthName","TextField","type","fullWidth","variant","onChange","event","target","options","scales","yAxes","ticks","beginAtZero","DashboardPurchase","purchaseReport","setPurchaseReport","getPurchaseMonthlyReport","purchase","purchasedate","bpurchaseColor","setMonthYear","DashboardExpense","expenseReport","setExpenseReport","getExpenseMonthlyReport","expense","expensedate","bexpenseColor","Dashboard","dayStart","setDayStart","displayDayStart","setDisplayDayStart","dayEnd","setDayEnd","displayDayEnd","setDisplayDayEnd","getCurrentDayInformation","console","log","length","start","end","triggerEndDay","post","Swal","fire","triggerStartDay","Button","onClick","justifyContent","alignItems","style","marginBottom","CreateRecipeModal","closeModal","product","setProduct","save","isError","errorMessage","productList","cursor","Divider","Alert","severity","FormControl","InputLabel","id","Select","labelId","MenuItem","name","endIcon","EditRecipeModal","MySwal","withReactContent","RecipeRecipeList","setProductList","recipeList","setRecipeList","getRecipeList","getProductList","selectedId","setSelectedId","React","anchorEl","setAnchorEl","handleMenuClose","editRecipeModalOpen","setEditRecipeModalOpen","closeEditRecipeModal","addRecipeModalOpen","setAddRecipeModalOpen","closeAddRecipeModal","recipeProduct","setRecipeProduct","recipeProductId","setRecipeProductId","setError","setErrorMessage","addRecipeData","icon","title","recipeEditProduct","setRecipeEditProduct","recipeEditProductId","setRecipeEditProductId","changeRecipeEditProduct","recipeProductID","filter","getRecipe","updateRecipe","patch","removeRecipe","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","isDenied","aria-controls","aria-haspopup","currentTarget","startIcon","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","horizontal","vertical","transformOrigin","Modal","aria-labelledby","aria-describedby","Autocomplete","getOptionLabel","option","renderInput","params","rows","columns","field","headerName","editable","pageSize","checkboxSelection","onRowSelected","AddRecipeItemModal","recipe","setRecipe","rawMaterialList","inputList","handleInputChange","handleRemoveClick","addNewInput","addRawMaterial","element","index","marginTop","required","rawMaterial","quantity","display","EditRecipeItemModal","setRawMaterial","setQuantity","RecipeItemList","setMaterialList","recipeItemList","setRecipeItemList","getRecipeItemList","getRawMaterialList","editRecipeItemModalOpen","setEditRecipeItemModalOpen","closeEditRecipeItemModal","addRecipeItemModalOpen","setAddRecipeItemModalOpen","closeAddRecipeItemModal","recipeItem","setRecipeItem","recipeItemId","setRecipeItemId","rawmaterial","recipeItemInputList","setRecipeItemInputList","addRecipeItemData","items","recipeItemEdit","setRecipeItemEdit","recipeItemEditId","setRecipeItemEditId","editRawMaterialName","setEditRawMaterialName","editRawMaterialId","setEditRawMaterialId","editQuantity","setEditQuantity","changeEditRecipeItem","getRecipeItem","updateRecipeItem","removeRecipeItem","rawMaterialID","e","list","splice","recipeItemID","useStyles","makeStyles","flexGrow","TabPanel","props","children","other","role","hidden","Box","p","Typography","a11yProps","ProductRecipeListTabs","setValue","activeColor","inactiveColor","classes","AppBar","classname","position","Tabs","newValue","aria-label","Tab","ProductRecipeList","AddProduct","AddCategoryModal","category","setCategory","description","setDescription","memo","ProductCategories","productCategoryList","setProductCategoryList","getProductCategoryList","categoryList","arr","person","push","slug","_id","deleteProductCategoryList","closeAddCategoryModal","addCategoryOpenModal","setAddCategoryOpenModal","postCategory","useCallback","descripton","marginLeft","freeSolo","TableContainer","component","Paper","Table","sx","size","TableHead","TableRow","TableCell","TableBody","row","border","scope","align","AddProductModal","batch_no","onFileChange","setBatch_no","id_no","setId_no","bio_flock_plant_no","setBio_flock_plant_no","weight","setWeight","setColor","gender","setGender","age","setAge","buying_price","setBuying_price","price","setPrice","purchase_date","setPurchase_date","file","setFile","sm","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","DateTimePicker","textAlign","Form","Group","controlId","Control","AnimalList","pageNum","setPageNum","numOfPages","setNumOfPages","pages","Array","v","i","getAnimal","setGetAnimal","animal_picture","getAnimalList","animal","totalPages","getCategoryList","categoryId","selling_price","Math","max","className","pageIndex","min","AllProducts","productCode","addProductModalOpen","setAddProductModalOpen","closeAddProductModal","Date","addProductData","formData","FormData","append","ProductList","AddWarrantyModal","multiline","productWarrantyList","ProductWarrantyList","selectedIdList","pushIdToSelectedList","includes","updatedList","indexId","prevIdList","handleClose","addWarrantyOpenModal","setAddWarrantyOpenModal","openAddWarrantyModal","closeAddWarrantyModal","AddPurchaseForm","useForm","register","handleSubmit","Label","placeholder","Text","AddPurchase","AddPurchaseReturnFilter","AddPurchaseReturn","ViewPurchaseModal","date","totalamount","taxperentage","taxamount","due","supplier","supplierphone","note","EditPurchaseModal","update","editDate","setEditDate","editTotalAmount","setEditTotalAmount","editSupplier","setEditSupplier","editTaxPercentage","setEditTaxPercentage","editTaxAmount","setEditTaxAmount","editSupplierPhone","setEditSupplierPhone","editCategory","changeCategory","purchaseCategoryList","editDueAmount","setEditDueAmount","editNote","setEditNote","PurchaseList","navigate","useNavigate","purchaseList","setPurchaseList","getPurchaseList","setPurchaseCategoryList","getPurchaseCategoryList","viewPurchaseModal","setViewPurchaseModal","setPurchase","closeViewPurchaseModal","editPurchaseModal","setEditPurchaseModal","closeEditPurchaseModal","setEditCategory","editCategoryId","setEditCategoryId","purchaseCategory","editData","dueamount","taxpercentage","message","purchaseData","PurchaseReturnFilter","PurchaseReturnTable","PurchaseReturn","users","ActivityLogTable","ActivityLogReport","ExpenseReportFilter","expenseReportList","ExpenseReportTable","ExpenseReport","StockAdjustmentFilter","StockAdjustmentAmounts","stockAdjustmentList","StockAdjustmentTable","StockAdjustmentReport","Copyright","Link","href","getFullYear","theme","paper","flexDirection","avatar","form","submit","Login","email","setEmail","password","setPassword","signIn","token","user","fullname","setItem","checkRoleAndRedirect","toLowerCase","Container","CssBaseline","noValidate","autoFocus","autoComplete","FormControlLabel","control","Checkbox","xs","mt","AddPurchaseCategoryForm","createCategory","errorMsg","EditPurchaseCategoryModal","PurchaseCategoryList","remove","getCategory","editCategoryModal","setEditCategoryModal","openEditCategoryModal","closeEditCategoryModal","AddPurchaseCategory","setCategoryList","setErrorMsg","removeCategory","openModal","updateCategory","AddGeneralItemModal","unitList","setUnit","unitName","setName","currentStock","setCurrentStock","stockAlert","setStockAlert","stockAlertQuantity","setStockAlertQuantity","unit","EditGeneralItemModal","key","IncreaseGeneralItemQuantityModal","PrintGeneralItemsStock","componentRef","useRef","textDecoration","trigger","content","current","ref","instock","GeneralItems","generalItemList","setGeneralItemList","filteredGeneralItemList","setFilteredGeneralItemList","setUnitList","getProductGeneralItemList","getUnitList","addBrandOpenModal","setAddBrandOpenModal","openAddBrandModal","closeAddBrandModal","unitId","setUnitId","changeUnit","postGeneralItem","isStockAlert","currentstock","stockalert","stockalertquantity","editUnit","setEditUnit","editUnitId","setEditUnitId","editName","setEditName","editCurrentStock","setEditCurrentStock","editStockAlert","setEditStockAlert","editStockAlertQuantity","setEditStockAlertQuantity","changeEditUnit","editGeneralItemOpenModal","setEditGeneralItemOpenModal","openEditGeneralItemModal","closeEditGeneralItemModal","getGeneralItem","updateGeneralItem","removeGeneralItem","generalItemToBeIncreasedQuantity","setGeneralItemToBeIncreasedQuantity","increaseGeneralItemOpenModal","setIncreaseGeneralItemOpenModal","openIncreaseGeneralItemModal","closeIncreaseGeneralItemModal","addStock","reference","goToStockAdjustment","searchQuery","setSearchQuery","isToPrint","setIsToPrint","searchGeneralItems","query","reg","RegExp","join","filteredGeneralItems","match","IncreaseGeneralItemQuantity","AddRawMaterialAdjustmentForm","setRawMaterialList","setIsError","setDate","rawMaterialId","setRawMaterialId","reason","setReason","saveStockAdjustment","changeRawMaterial","RawMaterialStockAdjustment","AddGeneralItemStockAdjustmentForm","getGeneralItemList","generalItem","setGeneralItem","generalItemId","setGeneralItemId","generalitem","changeGeneralItem","GeneralItemStockAdjustment","AddGeneralItemStockAdjustment","RawMaterialStockAdjustmentTable","setStockAdjustmentList","getStockAdjustmentList","RawMaterialStockAdjustmentReport","RawMaterialStockIncreaseReportTable","stockIncreaseReportList","setStockIncreaseReportList","getStockIncreaseReportList","RawMaterialIncreaseStockReport","GeneralItemStockAdjustmentTable","GeneralItemStockAdjustmentReport","GeneralItemStockIncreaseReportTable","GeneralItemIncreaseStockAdjustmentReport","SalesDetails","useParams","setOrder","getOrderDetails","goBack","overflowY","Avatar","backgroundPosition","backgroundRepeat","backgroundSize","src","alignItem","table","waiter","customer","customerPhone","orderDate","guestNumber","paymentStatus","float","orderTime","borderTop","borderBottom","subtotal","grossTotal","vat","vatAmount","grandTotal","paidAmount","dueAmount","ItemsReportFilter","getItemListByMonth","getItemListByDate","getItemListByYear","setMonth","setYear","changeMonth","values","changeYear","dates","getRecordByDate","ItemsReportTable","overflowX","ItemsReport","itemList","setItemList","day","AddProductBrandModal","EditRawMaterialModal","IncreaseRawMaterialQuantityModal","PrintRawMaterialStock","RawMaterials","filteredRawMaterialList","setFilteredRawMaterialList","getProductRawMaterialList","postRawMaterial","editRawMaterialOpenModal","setEditRawMaterialOpenModal","openEditRawMaterialModal","closeEditRawMaterialModal","getRawMaterial","updateRawMaterial","removeRawMaterial","rawMaterialToBeIncreasedQuantity","setRawMaterialToBeIncreasedQuantity","increaseRawMaterialOpenModal","setIncreaseRawMaterialOpenModal","openIncreaseRawMaterialModal","closeIncreaseRawMaterialModal","searchRawMaterials","filteredRawMaterials","SalesReportListFilter","getOrderList","getOrderListByDate","getOrderListByYear","filterByPayment","filterToken","d","paymentType","setPaymentType","changePaymentType","setToken","searchToken","SalesReportListTable","checkItems","getDetails","disableSelectionOnClick","SalesReportList","orderList","setOrderList","allOrderList","setAllOrderList","filterPaymentTypes","SalesItemsList","orderid","setItems","getOrderItems","SalesReportBook","reports","grossamount","vatamount","grandtotal","cash","card","complimentary","complimentaryOrDueFor","billprintby","totalGross","totalVat","totalCash","totalCard","totalDue","totalComplimentary","SalesReportFilter","getReportByDate","getReportByMonth","getReportWithDate","SalesReport","getDate","getMonth","selectedDate","setSelectedDate","reportList","setReportList","ProfitReportFilter","getProfitByYear","getProfitByMonth","ProfitReportTable","profit","profitIncludingDueOrComplimentary","profitExcludingDueOrComplimentary","totalPurchaseExpense","ProfitReport","profitList","setProfitList","ItemSalesReportFilter","ItemSalesReportTable","totalquantitysold","ItemSalesReport","getReportByYear","Register","firstName","setFirstName","lastName","setLastName","contactNumber","setContactNumber","FullLayout","lazy","ThemeRoutes","path","to","exact","RawMaterial","require","config","App","routing","useRoutes","Themeroutes","ThemeProvider","Spinner","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.295a719b.chunk.js","sourcesContent":["const typography = {\r\n  fontFamily: \"'DM Sans', sans-serif\",\r\n  body1: {\r\n    fontWeight: 400, // or 'bold'\r\n  },\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 30,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 21,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  buttons: {\r\n    textTransform: \"none\",\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","const shadows = [\r\n    'none',\r\n    '0px 2px 3px rgba(0,0,0,0.10)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n    '1px 2px 10px rgba(0,0,0,0.08)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n  ];\r\n\r\n  export default shadows;","import { createTheme } from \"@material-ui/core/styles\";\r\nimport typography from \"./Typography\";\r\nimport shadows from \"./Shadows\";\r\n\r\n// ##############################\r\n\r\n// // // Global Variables\r\n// ##############################\r\n\r\nconst SidebarWidth = 265;\r\nconst TopbarHeight = 70;\r\n\r\nconst baseTheme = createTheme({\r\n  direction: \"ltr\",\r\n  palette: {\r\n    primary: {\r\n      main: \"#1a97f5\",\r\n      light: \"#e6f4ff\",\r\n    },\r\n    secondary: {\r\n      main: \"#1e4db7\",\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n    success: {\r\n      main: \"#39cb7f\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    danger: {\r\n      main: \"#fc4b6c\",\r\n    },\r\n    error: {\r\n      main: \"#fc4b6c\",\r\n    },\r\n    warning: {\r\n      main: \"#fdd43f\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    text: {\r\n      secondary: \"#777e89\",\r\n      danger: \"#fc4b6c\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 5,\r\n  },\r\n\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        \"*\": {\r\n          boxSizing: \"border-box\",\r\n        },\r\n        html: {\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        },\r\n        body: {\r\n          height: \"100%\",\r\n          margin: 0,\r\n          padding: 0,\r\n        },\r\n        \"#root\": {\r\n          height: \"100%\",\r\n        },\r\n      },\r\n    },\r\n    MuiContainer: {\r\n      styleOverrides: {\r\n        root: {\r\n          paddingLeft: \"15px !important\",\r\n          paddingRight: \"15px !important\",\r\n          maxWidth: \"1600px\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: \"none\",\r\n          boxShadow: \"none\",\r\n          \"&:hover\": {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiListItem: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: \"9px\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: \"20px\",\r\n          padding: \"14px\",\r\n          margin: \"15px\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiListItemIcon: {\r\n      styleOverrides: {\r\n        root: {\r\n          minWidth: \"40px\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiGridItem: {\r\n      styleOverrides: {\r\n        root: {\r\n          paddingTop: \"30px\",\r\n          paddingLeft: \"30px !important\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      color: \"#949db2\",\r\n      \"@media(min-width:1280px)\": {\r\n        minHeight: TopbarHeight,\r\n        padding: \"0 30px\",\r\n      },\r\n      \"@media(max-width:1280px)\": {\r\n        minHeight: \"64px\",\r\n      },\r\n    },\r\n  },\r\n  status: {\r\n    danger: \"#e53e3e\",\r\n  },\r\n  typography,\r\n  shadows,\r\n});\r\n\r\nexport { TopbarHeight, SidebarWidth, baseTheme };\r\n","export const getAccessToken = ()=>{\r\n    return localStorage.getItem(\"accessToken\");\r\n}\r\nexport const setAccessToken = (token)=>{\r\n    return localStorage.setItem(\"accessToken\",token);\r\n}","\r\nconst getUrl = ()=>{\r\n    return process.env.REACT_APP_API;\r\n}\r\n\r\nexport default getUrl;","import { Card, CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport getUrl from '../../../HTTP/url';\r\nconst DashboardCards = ()=>{\r\n    const [totalSale,setTotalSale] = useState();\r\n    const getMonthlyTotalSale = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/order/monthly/total/sale?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setTotalSale(data[0].totalsale);\r\n      }\r\n    }\r\n    const [totalPurchase,setTotalPurchase] = useState();\r\n    const getMonthlyTotalPurchase = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/purchase/monthly/total?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setTotalPurchase(data[0].totalpurchase);\r\n      }\r\n    }\r\n    const [totalExpense,setTotalExpense] = useState();\r\n    const getMonthlyTotalExpense = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/expense/monthly/total?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setTotalExpense(data[0].totalexpense);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n        getMonthlyTotalSale();\r\n        getMonthlyTotalPurchase();\r\n        getMonthlyTotalExpense();\r\n    },[])\r\n    return (\r\n        <>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid item lg={4} md={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <h5>TOTAL PURCHASE</h5>\r\n                            <h5>BDT {totalPurchase}</h5>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item lg={4} md={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <h5>TOTAL SALES</h5>\r\n                            <h5>BDT {totalSale}</h5>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item lg={4} md={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <h5>EXPENSE</h5>\r\n                            <h5>BDT {totalExpense}</h5>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item lg={4} md={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <h5>PROFIT</h5>\r\n                            <h5>BDT {Number(totalSale) - (Number(totalExpense)+Number(totalPurchase))}</h5>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardCards;","const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\nexport default months;","import { Card, TextField } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Line } from 'react-chartjs-2'\r\nimport React, { useEffect, useState } from 'react';\r\nimport getUrl from '../../../HTTP/url';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport months from './months';\r\nconst DashboardSales = ()=>{\r\n    const [orderReport,setOrderSaleReport] = useState([]);\r\n    const getOrderSaleMonthlyReport = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/order/monthly/report?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setOrderSaleReport(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getOrderSaleMonthlyReport();\r\n    },[])\r\n    const data = {\r\n      labels: orderReport.map((order)=>{return order.orderdate}),\r\n      datasets: [\r\n        {\r\n          label: 'Sales In BDT',\r\n          data: orderReport.map((order)=>{return order.totalsale}),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    const [monthYear,setMonthDate] = useState(\"\");\r\n    const getReport = async(value)=>{\r\n        setMonthDate(value);\r\n        const filteredData = value.split(\"-\");\r\n        const monthName = months[filteredData[1]-1];\r\n        await getOrderSaleMonthlyReport(monthName,filteredData[0]);\r\n    }\r\n    return (\r\n        <>\r\n            <Grid \r\n            container\r\n            spacing=\"2\">\r\n                <Grid \r\n                item lg={12} md={12}>\r\n                    <Card>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                          <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          spacing=\"2\">\r\n                            <Grid \r\n                              item lg={3} md={3}>\r\n                                    <h2>Monthly Sales Report</h2>\r\n                              </Grid>\r\n                              <Grid \r\n                              item lg={3} md={3}>\r\n                                    <TextField\r\n                                    type=\"month\"\r\n                                    label=\"Month\"\r\n                                    fullWidth\r\n                                    variant=\"filled\"\r\n                                    value={monthYear}\r\n                                    onChange={(event)=>{getReport(event.target.value)}}\r\n                                    />\r\n                              </Grid>\r\n                          </Grid>\r\n                      </Grid>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                            <Line data={data} options={options} />\r\n                      </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardSales;","import { Card, TextField } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Line } from 'react-chartjs-2'\r\nimport React, { useEffect, useState } from 'react';\r\nimport getUrl from '../../../HTTP/url';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport months from './months';\r\nconst DashboardPurchase = ()=>{\r\n    const [purchaseReport,setPurchaseReport] = useState([]);\r\n    const getPurchaseMonthlyReport = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/purchase/monthly/report?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setPurchaseReport(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getPurchaseMonthlyReport();\r\n    },[])\r\n    const data = {\r\n      labels: purchaseReport.map((purchase)=>{return purchase.purchasedate}),\r\n      datasets: [\r\n        {\r\n          label: 'Monthly Purchase In BDT',\r\n          data: purchaseReport.map((purchase)=>{return purchase.totalpurchase}),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          bpurchaseColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    const [monthYear,setMonthYear] = useState(\"\");\r\n    const getReport = async(value)=>{\r\n        setMonthYear(value);\r\n        const filteredData = value.split(\"-\");\r\n        const monthName = months[filteredData[1]-1];\r\n        await getPurchaseMonthlyReport(monthName,filteredData[0]);\r\n    }\r\n    return (\r\n        <>\r\n            <Grid \r\n            container\r\n            spacing=\"2\">\r\n                <Grid \r\n                item lg={12} md={12}>\r\n                    <Card>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                          <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          spacing=\"2\">\r\n                            <Grid \r\n                              item lg={3} md={3}>\r\n                                    <h2>Monthly Purchase Report</h2>\r\n                              </Grid>\r\n                              <Grid \r\n                              item lg={3} md={3}>\r\n                                    <TextField\r\n                                    type=\"month\"\r\n                                    label=\"Month\"\r\n                                    fullWidth\r\n                                    variant=\"filled\"\r\n                                    value={monthYear}\r\n                                    onChange={(event)=>{getReport(event.target.value)}}\r\n                                    />\r\n                              </Grid>\r\n                          </Grid>\r\n                      </Grid>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                            <Line data={data} options={options} />\r\n                      </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardPurchase;","import { Card, TextField } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Line } from 'react-chartjs-2'\r\nimport React, { useEffect, useState } from 'react';\r\nimport getUrl from '../../../HTTP/url';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport months from './months';\r\nconst DashboardExpense = ()=>{\r\n    const [expenseReport,setExpenseReport] = useState([]);\r\n    const getExpenseMonthlyReport = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/expense/monthly/report?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setExpenseReport(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getExpenseMonthlyReport();\r\n    },[])\r\n    const data = {\r\n      labels: expenseReport.map((expense)=>{return expense.expensedate}),\r\n      datasets: [\r\n        {\r\n          label: 'Monthly Expense In BDT',\r\n          data: expenseReport.map((expense)=>{return expense.totalexpense}),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          bexpenseColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    const [monthYear,setMonthYear] = useState(\"\");\r\n    const getReport = async(value)=>{\r\n        setMonthYear(value);\r\n        const filteredData = value.split(\"-\");\r\n        const monthName = months[filteredData[1]-1];\r\n        await getExpenseMonthlyReport(monthName,filteredData[0]);\r\n    }\r\n    return (\r\n        <>\r\n            <Grid \r\n            container\r\n            spacing=\"2\">\r\n                <Grid \r\n                item lg={12} md={12}>\r\n                    <Card>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                          <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          spacing=\"2\">\r\n                            <Grid \r\n                              item lg={3} md={3}>\r\n                                    <h2>Monthly Expense Report</h2>\r\n                              </Grid>\r\n                              <Grid \r\n                              item lg={3} md={3}>\r\n                                    <TextField\r\n                                    type=\"month\"\r\n                                    label=\"Month\"\r\n                                    fullWidth\r\n                                    variant=\"filled\"\r\n                                    value={monthYear}\r\n                                    onChange={(event)=>{getReport(event.target.value)}}\r\n                                    />\r\n                              </Grid>\r\n                          </Grid>\r\n                      </Grid>\r\n                      <Grid \r\n                      item lg={12} md={12}>\r\n                            <Line data={data} options={options} />\r\n                      </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardExpense;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport DashboardCards from \"../Components/DashboardCards\";\r\nimport DashboardSales from \"../Components/DashboardSales\";\r\nimport DashboardPurchase from \"../Components/DashboardPurchase\";\r\nimport DashboardExpense from \"../Components/DashboardExpense\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport Swal from \"sweetalert2\";\r\n// import socketIOClient from \"socket.io-client\";\r\n// const socket = socketIOClient(\"http://localhost:4000\");\r\n// console.log(socket);\r\nconst Dashboard = () => {\r\n  const [dayStart, setDayStart] = useState(false);\r\n  const [displayDayStart, setDisplayDayStart] = useState(true);\r\n  const [dayEnd, setDayEnd] = useState(false);\r\n  const [displayDayEnd, setDisplayDayEnd] = useState(false);\r\n\r\n  const getCurrentDayInformation = async () => {\r\n    const response = await axios.get(`${getUrl()}/day`, {\r\n      headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n    });\r\n    if (response.status === 200) {\r\n      const { data } = response;\r\n      console.log(data);\r\n      console.log(dayStart);\r\n      if (data.length > 0) {\r\n        if (data[0].start === true) {\r\n          setDisplayDayStart(false);\r\n          setDisplayDayEnd(true);\r\n          setDayStart(true);\r\n          setDayEnd(false);\r\n        } else if (data[0].end === true) {\r\n          setDisplayDayStart(false);\r\n          setDisplayDayEnd(false);\r\n          setDayEnd(true);\r\n          setDayStart(false);\r\n        }\r\n      } else {\r\n        setDayStart(false);\r\n        setDayEnd(false);\r\n      }\r\n    }\r\n  };\r\n  const triggerEndDay = async () => {\r\n    const response = await axios.post(`${getUrl()}/day/end`, {\r\n      headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n    });\r\n    if (response.status === 201) {\r\n      setDayStart(false);\r\n      setDayEnd(true);\r\n      setDayStart(false);\r\n      setDayEnd(false);\r\n      Swal.fire(\"Day has end!\", \"Hope, you had a nice day\", \"success\");\r\n    }\r\n  };\r\n  const triggerStartDay = async () => {\r\n    const response = await axios.post(`${getUrl()}/day/start`, {\r\n      headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n    });\r\n    if (response.status === 201) {\r\n      setDisplayDayEnd(true);\r\n      setDisplayDayStart(false);\r\n      setDayStart(true);\r\n      setDayEnd(false);\r\n      Swal.fire(\"Day has started!\", \"Have a nice day\", \"success\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getCurrentDayInformation();\r\n    // socket.on(\"startDay\", () => {\r\n    //   getCurrentDayInformation();\r\n    // });\r\n    // socket.on(\"endDay\", () => {\r\n    //   console.log(\"Day Ended\");\r\n    //   getCurrentDayInformation();\r\n    // });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {displayDayStart === true && (\r\n        <Button onClick={triggerStartDay} variant=\"contained\" color=\"primary\">\r\n          Start Day\r\n        </Button>\r\n      )}\r\n      {displayDayEnd === true && (\r\n        <Button onClick={triggerEndDay} variant=\"contained\" color=\"warning\">\r\n          End Day\r\n        </Button>\r\n      )}\r\n      {dayEnd === true && (\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing=\"1\"\r\n        >\r\n          <Grid style={{ marginBottom: \"15px\" }} item lg={12} md={12}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item lg={6} md={6}>\r\n                <h2>Welcome Mr./Mrs {localStorage.getItem(\"username\")}</h2>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <DashboardCards />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <DashboardSales />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <DashboardPurchase />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <DashboardExpense />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button, Alert, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst CreateRecipeModal = ({closeModal,product,setProduct,save,isError,errorMessage,productList}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Create Product Recipe</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    {isError?(\r\n                    <Grid item lg={12} md={12} style={{ marginBottom:\"15px\" }}>\r\n                        <Alert severity=\"warning\" variant=\"filled\">\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    </Grid>):(<></>)}\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Product</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={product}\r\n                            onChange={(event)=>setProduct(event.target.value)}\r\n                            label=\"Select Product\"\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem> */}\r\n                            {productList.map((product)=>{\r\n                              return (<MenuItem key={product.id} value={product.name}>{product.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={save}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default CreateRecipeModal;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst EditRecipeModal = ({closeModal,product,setProduct,save,productList}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Edit Product Recipe</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Product</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={product}\r\n                            onChange={(event)=>setProduct(event.target.value)}\r\n                            label=\"Select Product\"\r\n                          >\r\n                            {productList.map((product)=>{\r\n                              return (<MenuItem key={product.id} value={product.name}>{product.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={save}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default EditRecipeModal;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport CreateRecipeModal from \"./Recipe/CreateRecipeModal\";\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nimport EditRecipeModal from \"./Recipe/EditRecipeModal\";\r\nconst MySwal = withReactContent(Swal)\r\nexport const recipeList = [];\r\nconst RecipeRecipeList = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'product',\r\n        headerName: 'Name',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n    ];\r\n  \r\n  const [productList,setProductList] = useState([]);\r\n  const [recipeList,setRecipeList] = useState([]);\r\n  const getRecipeList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/recipe/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status===200){\r\n      const {data} = response;\r\n      setRecipeList(data);\r\n    }\r\n  }\r\n  const getProductList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/product/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status===200){\r\n      const {data} = response;\r\n      setProductList(data);\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    getProductList();\r\n    getRecipeList();\r\n  },[]);\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [editRecipeModalOpen,setEditRecipeModalOpen] = useState(false);\r\n  const closeEditRecipeModal = ()=>{\r\n    setEditRecipeModalOpen(false);\r\n  }\r\n  const openEditRecipeModalOpen = ()=>{\r\n    setEditRecipeModalOpen(true);\r\n  }\r\n  const [addRecipeModalOpen,setAddRecipeModalOpen] = useState(false);\r\n  const closeAddRecipeModal = ()=>{\r\n    setAddRecipeModalOpen(false);\r\n  }\r\n  const openAddRecipeModal = ()=>{\r\n    setAddRecipeModalOpen(true);\r\n  }\r\n  const [recipeProduct,setRecipeProduct] = useState(\"\");\r\n  const [recipeProductId,setRecipeProductId] = useState(null);\r\n  const changeRecipeProduct = (value)=>{\r\n    const recipeProductID = productList.filter((product)=>{return value === product.name});\r\n    setRecipeProduct(value);\r\n    setRecipeProductId(recipeProductID[0].id);\r\n  }\r\n  const [error,setError] = useState(false);\r\n  const [errorMessage,setErrorMessage] = useState(\"\");\r\n  const addRecipeData = async()=>{\r\n    if(recipeProductId === null){\r\n      setError(true);\r\n      setErrorMessage('Please Fill all the fields');\r\n    }\r\n    else{\r\n      setError(false);\r\n      const data = {\r\n        product: Number(recipeProductId)\r\n      }\r\n      const response = await axios.post(`${getUrl()}/recipe`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 201){\r\n        closeAddRecipeModal();\r\n        setRecipeProduct(\"\");\r\n        setRecipeProductId(null);\r\n        getRecipeList();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const [recipeEditProduct,setRecipeEditProduct] = useState(\"\");\r\n  const [recipeEditProductId,setRecipeEditProductId] = useState(\"\");\r\n  const changeRecipeEditProduct = (value)=>{\r\n    const recipeProductID = productList.filter((product)=>{return value === product.name});\r\n    setRecipeEditProduct(value);\r\n    setRecipeEditProductId(recipeProductID[0].id);\r\n  }\r\n  const getRecipe = async()=>{\r\n    if(!selectedId){}\r\n    else{\r\n      handleMenuClose();\r\n      const response = await axios.get(`${getUrl()}/recipe/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 200){\r\n        const {data} = response;\r\n        changeRecipeEditProduct(data.name);\r\n        openEditRecipeModalOpen();\r\n      }\r\n    }\r\n  }\r\n  const updateRecipe = async()=>{\r\n    const data = {\r\n      product: Number(recipeEditProductId)\r\n    }\r\n    const response = await axios.patch(`${getUrl()}/recipe/${selectedId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status === 200){\r\n      closeEditRecipeModal();\r\n      MySwal.fire({\r\n        icon: 'success',\r\n        title: 'Great...',\r\n        text: `${response.data}`,\r\n      });\r\n      getRecipeList();\r\n    }\r\n  }\r\n  const removeRecipe = async()=>{\r\n    handleMenuClose();\r\n    MySwal.fire({\r\n      title: 'Do you want to remove?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Remove',\r\n      cancelButtonText: `Keep`,\r\n    }).then(async(result) => {\r\n      if (result.isConfirmed) {\r\n        const response = await axios.delete(`${getUrl()}/recipe/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Great...',\r\n            text: `${response.data}`,\r\n          });\r\n          getRecipeList();\r\n        }\r\n      } else if (result.isDenied) {}\r\n    })\r\n  }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container \r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleMenuClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            <MenuItem onClick={getRecipe}>Edit</MenuItem>\r\n                            <MenuItem onClick={removeRecipe}>Delete</MenuItem>\r\n                            {/* Edit recipe modal */}\r\n                            <Modal\r\n                                open={editRecipeModalOpen}\r\n                                onClose={closeEditRecipeModal}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                                >\r\n                                <EditRecipeModal\r\n                                      save={updateRecipe}\r\n                                      product={recipeEditProduct}\r\n                                      setProduct={changeRecipeEditProduct}\r\n                                      productList = {productList}\r\n                                      closeModal={closeEditRecipeModal}/>\r\n                            </Modal>\r\n                        </Menu>\r\n                </Grid>\r\n                <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={openAddRecipeModal}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    {/* Add recipe modal */}\r\n                    <Modal\r\n                        open={addRecipeModalOpen}\r\n                        onClose={closeAddRecipeModal}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                        <CreateRecipeModal\r\n                            isError={error}\r\n                            errorMessage={errorMessage} \r\n                            save={addRecipeData}\r\n                            product={recipeProduct}\r\n                            setProduct={changeRecipeProduct}\r\n                            productList = {productList}\r\n                            closeModal={closeAddRecipeModal}/>\r\n                    </Modal>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <Autocomplete\r\n                        fullWidth\r\n                        id=\"combo-box-demo\"\r\n                        options={[]}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderInput={(params) => <TextField  {...params} label=\"Search Supplier\" variant=\"outlined\" />}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        {recipeList.length>0 && \r\n          <Grid item lg={12} md={12}>\r\n              <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                      rows={recipeList}\r\n                      columns={columns}\r\n                      pageSize={5}\r\n                      checkboxSelection\r\n                      onRowSelected={onSelect}\r\n                  />\r\n              </div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RecipeRecipeList;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button, Alert, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst AddRecipeItemModal = ({closeModal,recipe,setRecipe,isError,errorMessage,\r\n    recipeList,rawMaterialList,inputList,\r\n    handleInputChange,\r\n    handleRemoveClick,\r\n    addNewInput,addRawMaterial}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Add Recipe Item</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    {isError?(\r\n                    <Grid item lg={12} md={12} style={{ marginBottom:\"15px\" }}>\r\n                        <Alert severity=\"warning\" variant=\"filled\">\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    </Grid>):(<></>)}\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"3\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Product</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={recipe}\r\n                            onChange={(event)=>setRecipe(event.target.value)}\r\n                            label=\"Select Product\"\r\n                          >\r\n                            {recipeList.map((recipe)=>{\r\n                              return (<MenuItem key={recipe.id} value={recipe.product}>{recipe.product}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                     <br />\r\n                     <Grid item lg={12} md={12}>\r\n                    {\r\n                      inputList.map((element,index)=>{\r\n                        return (\r\n                        <Grid key={index}>\r\n                          <Grid style={{ marginTop: \"12px\" }}\r\n                            item lg={12} md={12}>\r\n                                <FormControl \r\n                                fullWidth\r\n                                variant=\"outlined\">\r\n                                  <InputLabel id=\"demo-simple-select-outlined-label\">Select Raw Material</InputLabel>\r\n                                  <Select\r\n                                    required\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    value={element.rawMaterial}\r\n                                    onChange={(event)=>handleInputChange(event,index)}\r\n                                    label=\"Select Raw Material\"\r\n                                    name=\"rawmaterial\"\r\n                                  >\r\n                                    {rawMaterialList.map((rawMaterial)=>{\r\n                                      return (<MenuItem key={rawMaterial.id} value={rawMaterial.name}>{rawMaterial.name}</MenuItem>)\r\n                                    })}\r\n                                  </Select>\r\n                              </FormControl>\r\n                            </Grid>\r\n                            <br />\r\n                            <Grid style={{ marginTop: \"12px\" }} item lg={12} md={12}>\r\n                              {index ? \r\n                              (\r\n                                <Grid \r\n                                container\r\n                                direction=\"row\"\r\n                                spacing=\"1\">\r\n                                  <Grid item lg={10} md={10}>\r\n                                    <TextField\r\n                                        name=\"quantity\"\r\n                                        required\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={element.quantity}\r\n                                        onChange={(event)=>{handleInputChange(event,index)}}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Raw Material Quantity\"\r\n                                      />\r\n                                  </Grid>\r\n                                  <Grid item lg={2} md={2}\r\n                                  style={{ display:\"flex\",justifyContent:\"center\",alignItems:\"center\" }}>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      onClick={handleRemoveClick}\r\n                                      variant=\"contained\"\r\n                                      color=\"error\"\r\n                                      endIcon={<RemoveIcon/>}\r\n                                    >\r\n                                      Remove\r\n                                    </Button>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                ):\r\n                              (<>\r\n                                <TextField\r\n                                    name=\"quantity\"\r\n                                    required\r\n                                    fullWidth\r\n                                    type=\"number\"\r\n                                    value={element.quantity}\r\n                                    onChange={(event)=>{handleInputChange(event,index)}}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Raw Material Quantity\"\r\n                                  />\r\n                              </>)}\r\n                            </Grid>\r\n                        </Grid>)\r\n                      })\r\n                    }\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={addRawMaterial}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                  <Grid item lg={6} md={6}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={addNewInput}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<AddIcon/>}\r\n                      >\r\n                        Add More\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default AddRecipeItemModal;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button,FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { TextField } from \"@material-ui/core\";\r\nconst EditRecipeItemModal = ({save,rawMaterial,setRawMaterial,quantity,setQuantity,recipe,\r\n    setRecipe,recipeList,closeModal,rawMaterialList}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Edit Recipe Item</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"3\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Product</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={recipe}\r\n                            onChange={(event)=>setRecipe(event.target.value)}\r\n                            label=\"Select Product\"\r\n                          >\r\n                            {recipeList.map((recipe)=>{\r\n                              return (<MenuItem key={recipe.id} value={recipe.product}>{recipe.product}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                     <br />\r\n                     <Grid style={{ marginTop: \"12px\" }}\r\n                        item lg={12} md={12}>\r\n                            <FormControl \r\n                            fullWidth\r\n                            variant=\"outlined\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Select Raw Material</InputLabel>\r\n                                <Select\r\n                                required\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                value={rawMaterial}\r\n                                onChange={(event)=>setRawMaterial(event.target.value)}\r\n                                label=\"Select Raw Material\"\r\n                                name=\"rawmaterial\"\r\n                                >\r\n                                {rawMaterialList.map((rawMaterial)=>{\r\n                                    return (<MenuItem key={rawMaterial.id} value={rawMaterial.name}>{rawMaterial.name}</MenuItem>)\r\n                                })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid item lg={12} md={12}>\r\n                                <TextField\r\n                                    name=\"quantity\"\r\n                                    required\r\n                                    fullWidth\r\n                                    type=\"number\"\r\n                                    value={quantity}\r\n                                    onChange={(event)=>{setQuantity(event.target.value)}}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Raw Material Quantity\"\r\n                                    />\r\n                        </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={save}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default EditRecipeItemModal;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport getUrl from \"../../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport AddRecipeItemModal from \"./Recipe/AddRecipeItemModal\";\r\nimport EditRecipeItemModal from \"./Recipe/EditRecipeItemModal\";\r\nconst MySwal = withReactContent(Swal)\r\nconst RecipeItemList = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'product',\r\n        headerName: 'Product',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'quantity',\r\n        headerName: 'Quantity',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'rawmaterial',\r\n        headerName: 'Raw Material',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n    ];\r\n  \r\n  const [recipeList,setRecipeList] = useState([]);\r\n  const [rawMaterialList,setMaterialList] = useState([]);\r\n  const [recipeItemList,setRecipeItemList] = useState([]);\r\n  const getRecipeItemList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/recipe/recipeitem/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status===200){\r\n      const {data} = response;\r\n      setRecipeItemList(data);\r\n    }\r\n  }\r\n  const getRecipeList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/recipe/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status===200){\r\n        const {data} = response;\r\n      setRecipeList(data);\r\n    }\r\n  }\r\n  const getRawMaterialList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/raw-material/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status===200){\r\n      const {data} = response;\r\n      setMaterialList(data);\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    getRecipeList();\r\n    getRecipeItemList();\r\n    getRawMaterialList();\r\n  },[]);\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [editRecipeItemModalOpen,setEditRecipeItemModalOpen] = useState(false);\r\n  const closeEditRecipeItemModal = ()=>{\r\n    setEditRecipeItemModalOpen(false);\r\n  }\r\n  const openEditRecipeItemModalOpen = ()=>{\r\n    setEditRecipeItemModalOpen(true);\r\n  }\r\n  const [addRecipeItemModalOpen,setAddRecipeItemModalOpen] = useState(false);\r\n  const closeAddRecipeItemModal = ()=>{\r\n    setAddRecipeItemModalOpen(false);\r\n  }\r\n  const openAddRecipeItemModal = ()=>{\r\n    setAddRecipeItemModalOpen(true);\r\n  }\r\n  const [recipeItem,setRecipeItem] = useState(\"\");\r\n  const [recipeItemId,setRecipeItemId] = useState(null);\r\n  const changeRecipeItem = (value)=>{\r\n    const recipeItemID = recipeList.filter((recipe)=>{return value === recipe.product});\r\n    setRecipeItem(value);\r\n    setRecipeItemId(recipeItemID[0].id);\r\n  }\r\n  const [error,setError] = useState(false);\r\n  const [errorMessage,setErrorMessage] = useState(\"\");\r\n  const [recipeItemInputList, setRecipeItemInputList] = useState([{ rawmaterial: 0,quantity: 0 }]);\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    let data;\r\n    if(name === \"rawmaterial\"){\r\n      const rawMaterialID = rawMaterialList.filter((rawmaterial)=>{return value === rawmaterial.name});\r\n      data = rawMaterialID[0].id;\r\n    }else{\r\n      data = value\r\n    }\r\n    const list = [...recipeItemInputList];\r\n    list[index][name] = data;\r\n    setRecipeItemInputList(list);\r\n  };\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...recipeItemInputList];\r\n    list.splice(index, 1);\r\n    setRecipeItemInputList(list);\r\n  };\r\n  \r\n  // handle click event of the Add button\r\n  const addNewInput = () => {\r\n    setRecipeItemInputList([...recipeItemInputList, { rawmaterial: 0,quantity: 0 }]);\r\n  };\r\n  const addRecipeItemData = async()=>{\r\n    if(recipeItemId === null || recipeItemInputList.length === 0){\r\n      setError(true);\r\n      setErrorMessage('Please Fill all the fields');\r\n    }\r\n    else{\r\n      setError(false);\r\n      const data = {\r\n        recipe: Number(recipeItemId),\r\n        items: recipeItemInputList\r\n      }\r\n      const response = await axios.post(`${getUrl()}/recipe/item`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 201){\r\n        closeAddRecipeItemModal();\r\n        setRecipeItem(\"\");\r\n        setRecipeItemId(null);\r\n        setRecipeItemInputList([{ rawmaterial: 0,quantity: 0 }]);\r\n        getRecipeItemList();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const [recipeItemEdit,setRecipeItemEdit] = useState(\"\");\r\n  const [recipeItemEditId,setRecipeItemEditId] = useState(null);\r\n  const changeEditRawMaterial = (value)=>{\r\n    const rawMaterialID = rawMaterialList.filter((rawmaterial)=>{return value === rawmaterial.name});\r\n    setEditRawMaterialName(value);\r\n    setEditRawMaterialId(rawMaterialID[0].id);\r\n  }\r\n  const [editRawMaterialName,setEditRawMaterialName] = useState(\"\");\r\n  const [editRawMaterialId,setEditRawMaterialId] = useState(null);\r\n  const [editQuantity,setEditQuantity] = useState(null);\r\n  const changeEditRecipeItem = (value)=>{\r\n    const recipeItem = recipeList.filter((item)=>{return value === item.product});\r\n    setRecipeItemEdit(value);\r\n    setRecipeItemEditId(recipeItem[0].id);\r\n  }\r\n  const getRecipeItem = async()=>{\r\n    if(!selectedId){\r\n      handleMenuClose();\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Sorry...',\r\n        text: `Please Select An Item First!`,\r\n      });\r\n    }\r\n    else{\r\n      handleMenuClose();\r\n      const response = await axios.get(`${getUrl()}/recipe/item/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 200){\r\n        const {data} = response;\r\n        console.log(data);\r\n        setRecipeItemEditId(data[0].id);\r\n        setEditQuantity(data[0].quantity);\r\n        changeEditRecipeItem(data[0].product);\r\n        openEditRecipeItemModalOpen();\r\n      }\r\n    }\r\n  }\r\n  const updateRecipeItem = async()=>{\r\n    handleMenuClose();\r\n    const data = {\r\n      recipe: Number(recipeItemEditId),\r\n      rawmaterial: Number(editRawMaterialId),\r\n      quantity: Number(editQuantity)\r\n    }\r\n    const response = await axios.patch(`${getUrl()}/recipe/recipeitem/${selectedId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n    if(response.status === 200){\r\n      closeEditRecipeItemModal();\r\n      MySwal.fire({\r\n        icon: 'success',\r\n        title: 'Great...',\r\n        text: `${response.data}`,\r\n      });\r\n      getRecipeItemList();\r\n    }\r\n  }\r\n  const removeRecipeItem = async()=>{\r\n    handleMenuClose();\r\n    MySwal.fire({\r\n      title: 'Do you want to remove?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Remove',\r\n      cancelButtonText: `Keep`,\r\n    }).then(async(result) => {\r\n      if (result.isConfirmed) {\r\n        const response = await axios.delete(`${getUrl()}/recipe/item/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Great...',\r\n            text: `${response.data}`,\r\n          });\r\n          getRecipeItemList();\r\n        }\r\n      } else if (result.isDenied) {}\r\n    })\r\n  }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container \r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleMenuClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            <MenuItem onClick={getRecipeItem}>Edit</MenuItem>\r\n                            <MenuItem onClick={removeRecipeItem}>Delete</MenuItem>\r\n                            {/* Edit recipeItem modal */}\r\n                            <Modal\r\n                                open={editRecipeItemModalOpen}\r\n                                onClose={closeEditRecipeItemModal}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                                >\r\n                                <EditRecipeItemModal\r\n                                      save={updateRecipeItem}\r\n                                      rawMaterial={editRawMaterialName}\r\n                                      setRawMaterial={changeEditRawMaterial}\r\n                                      rawMaterialList = {rawMaterialList}\r\n                                      quantity={editQuantity}\r\n                                      setQuantity={setEditQuantity}\r\n                                      recipe={recipeItemEdit}\r\n                                      setRecipe={changeEditRecipeItem}\r\n                                      recipeList = {recipeList}\r\n                                      closeModal={closeEditRecipeItemModal}/>\r\n                            </Modal>\r\n                        </Menu>\r\n                </Grid>\r\n                <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={openAddRecipeItemModal}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    {/* Add recipeItem modal */}\r\n                    <Modal\r\n                        open={addRecipeItemModalOpen}\r\n                        onClose={closeAddRecipeItemModal}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                        <AddRecipeItemModal\r\n                            addRawMaterial={addRecipeItemData}\r\n                            inputList={recipeItemInputList}\r\n                            handleInputChange={handleInputChange}\r\n                            handleRemoveClick={handleRemoveClick}\r\n                            addNewInput={addNewInput}\r\n                            isError={error}\r\n                            errorMessage={errorMessage} \r\n                            recipe={recipeItem}\r\n                            setRecipe={changeRecipeItem}\r\n                            recipeList = {recipeList}\r\n                            rawMaterialList={rawMaterialList}\r\n                            closeModal={closeAddRecipeItemModal}/>\r\n                    </Modal>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <Autocomplete\r\n                        fullWidth\r\n                        id=\"combo-box-demo\"\r\n                        options={[]}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderInput={(params) => <TextField  {...params} label=\"Search Supplier\" variant=\"outlined\" />}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        {recipeItemList.length>0 && \r\n          <Grid item lg={12} md={12}>\r\n              <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                      rows={recipeItemList}\r\n                      columns={columns}\r\n                      pageSize={5}\r\n                      checkboxSelection\r\n                      onRowSelected={onSelect}\r\n                  />\r\n              </div>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RecipeItemList;\r\n","import { Typography } from '@material-ui/core';\r\nimport { AppBar } from '@material-ui/core';\r\nimport { Tab } from '@material-ui/core';\r\nimport { Box } from '@material-ui/core';\r\nimport { Tabs } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ProductRecipeList from './ProductRecipeList';\r\nimport RecipeItemList from './RecipeItemList';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"red\",\r\n    },\r\n  });\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\nconst ProductRecipeListTabs = ()=>{\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const activeColor = \"#000\";\r\n    const inactiveColor = \"rgba(0,0,0,0.5)\";\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar \r\n            classname={classes.root}\r\n            position=\"static\">\r\n                <Tabs \r\n                value={value} \r\n                onChange={handleChange} \r\n                aria-label=\"simple tabs example\">\r\n                    <Tab \r\n                        style={{ color: value === 0? activeColor: inactiveColor }}\r\n                        label=\"Recipe List\" {...a11yProps(0)} />\r\n                    <Tab \r\n                        style={{ color: value === 1? activeColor: inactiveColor }}\r\n                        label=\"Recipe Items\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n               <ProductRecipeList/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <RecipeItemList/>\r\n            </TabPanel>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductRecipeListTabs;","import { Typography } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ProductRecipeListTabs from '../Components/Sub-Components/ProductRecipeListTabs';\r\n\r\n\r\nconst AddProduct = ()=>{\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Typography variant=\"h2\">\r\n                    Recipe List\r\n                </Typography>\r\n                <Grid item lg={12} md={12}>\r\n                    <ProductRecipeListTabs/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, Alert } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst AddCategoryModal = ({closeModal,category,setCategory,description,setDescription,save,isError,errorMessage}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Add Category</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    {isError?(\r\n                    <Grid item lg={12} md={12} style={{ marginBottom:\"15px\" }}>\r\n                        <Alert severity=\"warning\" variant=\"filled\">\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    </Grid>):(<></>)}\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={category}\r\n                            onChange={(event)=>{setCategory(event.target.value)}}\r\n                            variant=\"outlined\"\r\n                            label=\"Category Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                {/* <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            multiline\r\n                            fullWidth\r\n                            value = {description}\r\n                            onChange={(event)=>{setDescription(event.target.value)}}\r\n                            rows={8}\r\n                            variant=\"outlined\"\r\n                            label=\"Description\"\r\n                            />\r\n                     </Grid>\r\n                </Grid> */}\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        fullWidth\r\n                        onClick={save}\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddCategoryModal);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Grid, Button, MenuItem, Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete, TextField } from \"@material-ui/core\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Modal } from \"@material-ui/core\";\r\nimport AddCategoryModal from \"../Components/Sub-Components/AddCategoryModal\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport EditCategoryModal from \"../Components/Sub-Components/EditCategoryModal\";\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst ProductCategories = () => {\r\n\r\n\r\n  const [productCategoryList, setProductCategoryList] = useState();\r\n  console.log('productCategoryList', productCategoryList)\r\n  const a = productCategoryList?.map(data => console.log(data.label))\r\n  const getProductCategoryList = async () => {\r\n    const response = await axios.get(`https://immense-badlands-33128.herokuapp.com/api/category/getCategory`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n    console.log(\"getProductCategoryList\", response)\r\n    if (response.status === 200) {\r\n      console.log(response.data.categoryList)\r\n      const value = response.data.categoryList.map(data => console.log(data.name))\r\n      console.log(\"value\", value)\r\n\r\n      var arr = [\r\n      ]\r\n      var result = response.data.categoryList.map(person => (arr.push({ label: person.name, value: person.slug, id: person._id })));\r\n      setProductCategoryList(arr)\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const deleteProductCategoryList = async (id) => {\r\n    console.log(id)\r\n    const response = await axios.delete(`https://immense-badlands-33128.herokuapp.com/api/category/deleteCategory/${id}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n    console.log(\"getProductCategoryList\", response)\r\n    if (response.status === 200) {\r\n      closeAddCategoryModal();\r\n      MySwal.fire({\r\n        icon: 'success',\r\n        title: 'Delete Success...',\r\n        // text: `${response.name}`,\r\n      });\r\n      setCategory(\"\");\r\n      // setDescription(\"\");\r\n      getProductCategoryList();\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getProductCategoryList();\r\n  }, [])\r\n\r\n  const [selectedId, setSelectedId] = useState();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [addCategoryOpenModal, setAddCategoryOpenModal] = useState(false);\r\n  const openAddCategoryModal = () => {\r\n    setAddCategoryOpenModal(true);\r\n  }\r\n  const closeAddCategoryModal = () => {\r\n    setAddCategoryOpenModal(false);\r\n  }\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const postCategory = useCallback(async () => {\r\n    if (category === \"\") {\r\n      setError(true);\r\n      setErrorMessage('Please Fill All The fields');\r\n    }\r\n    else {\r\n      setError(false);\r\n      const data = {\r\n        name: category,\r\n      }\r\n      const response = await axios.post(`https://immense-badlands-33128.herokuapp.com/api/category/create`, data, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n      if (response.status === 201) {\r\n        closeAddCategoryModal();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          // text: `${response.name}`,\r\n        });\r\n        setCategory(\"\");\r\n        // setDescription(\"\");\r\n        getProductCategoryList();\r\n      }\r\n    }\r\n  }, [category, description])\r\n\r\n\r\n  // const [editCategoryOpenModal, setEditCategoryOpenModal] = useState(false);\r\n  // const openEditCategoryModal = () => {\r\n  //   setEditCategoryOpenModal(true);\r\n  // }\r\n  // const closeEditCategoryModal = () => {\r\n  //   setEditCategoryOpenModal(false);\r\n  // }\r\n  // const [editCategory, setEditCategory] = useState(\"\");\r\n  // const [editDescription, setEditDescription] = useState(\"\");\r\n  // const getCategory = async () => {\r\n  //   if (!selectedId) {\r\n  //     MySwal.fire({\r\n  //       icon: 'success',\r\n  //       title: 'Great...',\r\n  //       text: `Please Select an item`,\r\n  //     });\r\n  //   }\r\n  //   else {\r\n  //     handleMenuClose();\r\n  //     const response = await axios.get(`${getUrl()}/category/${selectedId}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n  //     if (response.status === 200) {\r\n  //       const { data } = response;\r\n  //       setEditDescription(data.description);\r\n  //       setEditCategory(data.name);\r\n  //       openEditCategoryModal();\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n  // updateCategory\r\n\r\n  // const updateCategory = useCallback(async () => {\r\n  //   const data = {\r\n  //     name: editCategory,\r\n  //     description: editDescription\r\n  //   }\r\n  //   const response = await axios.patch(`${getUrl()}/category/${selectedId}`, data, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n  //   if (response.status === 200) {\r\n  //     closeEditCategoryModal();\r\n  //     MySwal.fire({\r\n  //       icon: 'success',\r\n  //       title: 'Great...',\r\n  //       text: `${response.data}`,\r\n  //     });\r\n  //     getProductCategoryList();\r\n  //   }\r\n  // }, [selectedId, editCategory, editDescription])\r\n\r\n\r\n  // removeCategory\r\n\r\n  // const removeCategory = async () => {\r\n  //   handleMenuClose();\r\n  //   MySwal.fire({\r\n  //     title: 'Do you want to remove?',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: 'Remove',\r\n  //     cancelButtonText: `Keep`,\r\n  //   }).then(async (result) => {\r\n  //     if (result.isConfirmed) {\r\n  //       const response = await axios.delete(`${getUrl()}/category/${selectedId}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n\r\n  //       if (response.status === 200) {\r\n  //         MySwal.fire({\r\n  //           icon: 'success',\r\n  //           title: 'Great...',\r\n  //           text: `${response.data}`,\r\n  //         });\r\n  //         getProductCategoryList();\r\n  //       }\r\n  //     } else if (result.isDenied) { }\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing=\"1\">\r\n        <Grid\r\n          style={{ marginBottom: \"15px\" }}\r\n          item\r\n          lg={12} md={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n            <Grid item lg={6} md={6}>\r\n              <h2>Product Categories</h2>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n            <Grid item lg={3} md={3}>\r\n              <Button\r\n                onClick={openAddCategoryModal}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                color=\"success\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                startIcon={<AddBoxIcon />}\r\n              >\r\n                Add\r\n              </Button>\r\n\r\n              {/* add product variation modal */}\r\n              <Modal\r\n                open={addCategoryOpenModal}\r\n                onClose={closeAddCategoryModal}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n              >\r\n                <AddCategoryModal\r\n                  isError={error}\r\n                  errorMessage={errorMessage}\r\n                  category={category}\r\n                  setCategory={setCategory}\r\n                  descripton={description}\r\n                  setDescription={setDescription}\r\n                  save={postCategory}\r\n                  closeModal={closeAddCategoryModal} />\r\n              </Modal>\r\n            </Grid>\r\n            <Grid item lg={4} md={4} style={{ marginLeft: '30px', padding: '0px' }}>\r\n              <Autocomplete\r\n                id=\"free-solo-demo\"\r\n                freeSolo\r\n                // options={productCategoryList.map((option) => option.title)}\r\n                options={productCategoryList?.map((option) => option.label)}\r\n                renderInput={(params) => <TextField {...params} label=\"category list\" />}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* {\r\n          productCategoryList.length >0 && \r\n            <Grid item lg={12} md={12}>\r\n              <div style={{ height: 400, width: '100%' }}>\r\n                  <DataGrid\r\n                      rows={productCategoryList}\r\n                      columns={columns}\r\n                      pageSize={5}\r\n                      checkboxSelection\r\n                      onRowSelected={onSelect}\r\n                  />\r\n              </div>\r\n          </Grid>\r\n        } */}\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper} style={{ marginTop: '50px' }}>\r\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Category Name</TableCell>\r\n              <TableCell>Slug</TableCell>\r\n\r\n              <TableCell>Action</TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {productCategoryList?.map((row) => (\r\n              <TableRow\r\n                key={row.label}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.label}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.value}\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ width: '150px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <Button variant=\"outlined\">Edit</Button>\r\n                    <Button variant=\"outlined\" onClick={() => deleteProductCategoryList(row.id)}>\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n                {/* <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCategories;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from \"axios\";\r\n\r\nimport Stack from '@mui/material/Stack';\r\n// import TextField from '@mui/material/TextField';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\r\n\r\n\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nconst AddProductModal = ({\r\n  closeModal,\r\n\r\n\r\n  isError,\r\n  errorMessage,\r\n  save,\r\n\r\n  category,\r\n  setCategory,\r\n\r\n  onFileChange,\r\n\r\n  batch_no,\r\n  setBatch_no,\r\n\r\n  id_no,\r\n  setId_no,\r\n\r\n  bio_flock_plant_no,\r\n  setBio_flock_plant_no,\r\n\r\n  weight,\r\n  setWeight,\r\n\r\n  color,\r\n  setColor,\r\n\r\n  gender,\r\n  setGender,\r\n\r\n  age,\r\n  setAge,\r\n\r\n  quantity,\r\n  setQuantity,\r\n\r\n  buying_price,\r\n  setBuying_price,\r\n\r\n  price,\r\n  setPrice,\r\n\r\n  purchase_date,\r\n  setPurchase_date,\r\n\r\n\r\n  file,\r\n  setFile\r\n\r\n}) => {\r\n  // const [value, setValue] = React.useState(new Date());\r\n  const handleChange = (newValue) => {\r\n    setPurchase_date(newValue);\r\n  };\r\n\r\n\r\n  const [productCategoryList, setProductCategoryList] = useState();\r\n  // console.log('productCategoryList', productCategoryList)\r\n  // const a = productCategoryList?.map(data => console.log(data.label))\r\n  const getProductCategoryList = async () => {\r\n    const response = await axios.get(`https://immense-badlands-33128.herokuapp.com/api/category/getCategory`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n    // console.log(\"getProductCategoryList\", response)\r\n    if (response.status === 200) {\r\n      // console.log(response.data.categoryList)\r\n      // const value = response.data.categoryList.map(data => console.log(data.name))\r\n      // console.log(\"value\", value)\r\n\r\n      var arr = [\r\n      ]\r\n      var result = response.data.categoryList.map(person => (arr.push({ label: person._id, value: person.slug, id: person._id })));\r\n      setProductCategoryList(arr)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getProductCategoryList();\r\n  }, [])\r\n\r\n\r\n  // const [category, setCategory] = useState('')\r\n  // console.log(\"category\", category);\r\n\r\n  // const [file, setFile] = useState('')\r\n  // const onFileChange = (event) => {\r\n  //   // Update the state\r\n  //   console.log(\"file\", event)\r\n  //   console.log(\"file\", event.target.files[0].name)\r\n\r\n  //   setFile(event.target.files[0]);\r\n\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3} />\r\n        <Grid item lg={6} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <h1>Add Animal</h1>\r\n                </Grid>\r\n                <Grid item lg={3} md={3} />\r\n                <Grid item lg={2} md={2} />\r\n                <Grid item lg={1} md={1}>\r\n                  <h5>\r\n                    <CloseIcon\r\n                      color=\"error\"\r\n                      onClick={closeModal}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </h5>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                {isError ? (\r\n                  <Grid item lg={12} md={12} style={{ marginBottom: \"15px\" }}>\r\n                    <Alert severity=\"warning\" variant=\"filled\">\r\n                      {errorMessage}\r\n                    </Alert>\r\n                  </Grid>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Grid>\r\n              <br />\r\n\r\n              {/* category */}\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={12} md={6} sm={6}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      Select Category\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      value={category}\r\n                      onChange={(event) => setCategory(event.target.value)}\r\n                      label=\"Select Category\"\r\n                    >\r\n                      {productCategoryList?.map((category) => {\r\n                        return (\r\n                          <MenuItem key={category.label} value={category.id}>\r\n                            {category.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n\r\n              {/* batch_no  id_no*/}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={batch_no}\r\n                    onChange={(event) => {\r\n                      setBatch_no(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"batch_no\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={id_no}\r\n                    onChange={(event) => {\r\n                      setId_no(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"id_no\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n              {/* setBio_flock_plant_no setPurchase_date  */}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={bio_flock_plant_no}\r\n                    onChange={(event) => {\r\n                      setBio_flock_plant_no(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"bio_flock_plant_no\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <Stack spacing={3}>\r\n\r\n                      <DateTimePicker\r\n                        label=\"Date&Time picker\"\r\n                        value={purchase_date}\r\n                        onChange={handleChange}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </Stack>\r\n                  </LocalizationProvider>\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n\r\n              {/* image weight */}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6} style={{ border: '1px solid #dae0eb', padding: '0px', marginTop: '5px', textAlign: 'center', }}>\r\n                  <Form.Group controlId=\"formFile\" style={{ paddingTop: '20px' }}>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      value={file}\r\n                      // onChange={onFileChange}\r\n                      onChange={(event) => {\r\n                        setFile(event.target.value);\r\n                      }}\r\n\r\n                    />\r\n                  </Form.Group>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={weight}\r\n                    onChange={(event) => {\r\n                      setWeight(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"weight\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n\r\n              {/* color gender */}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={color}\r\n                    onChange={(event) => {\r\n                      setColor(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"color\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={gender}\r\n                    onChange={(event) => {\r\n                      setGender(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"gender\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n\r\n              {/* age quantity */}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={age}\r\n                    onChange={(event) => {\r\n                      setAge(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"age\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={quantity}\r\n                    onChange={(event) => {\r\n                      setQuantity(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"quantity\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n              {/* buying_price selling_price */}\r\n              <Grid\r\n                container spacing={2}\r\n              >\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={buying_price}\r\n                    onChange={(event) => {\r\n                      setBuying_price(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"buying_price\"\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={price}\r\n                    onChange={(event) => {\r\n                      setPrice(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"selling_price\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n\r\n\r\n\r\n              {/* <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={12} md={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={productCode}\r\n                    onChange={(event) => {\r\n                      setProductCode(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"Product Code\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={12} md={12}>\r\n                  <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      onChange={onFileChange}\r\n\r\n                    />\r\n                  </Form.Group>\r\n                </Grid>\r\n              </Grid> */}\r\n\r\n\r\n\r\n\r\n              {/* <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={12} md={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    value={price}\r\n                    onChange={(event) => {\r\n                      setPrice(event.target.value);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    label=\"Selling Price\"\r\n                  />\r\n                </Grid>\r\n              </Grid> */}\r\n            </CardContent>\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing=\"1\"\r\n              >\r\n                <Grid item lg={12} md={12}>\r\n                  <Button\r\n                    fullWidth\r\n                    onClick={save}\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    endIcon={<SaveOutlinedIcon />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddProductModal);\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getAccessToken } from '../../../../HTTP/token';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Grid, Button, MenuItem, Menu, Autocomplete, TextField, FormControl, InputLabel, Select } from \"@material-ui/core\";\r\nimport { Typography } from '@material-ui/core';\r\nimport './AnimalList.css'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport Swal from 'sweetalert2'\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// import {\r\n//     Card,\r\n//     CardContent,\r\n//     Divider,\r\n//     Grid,\r\n//     TextField,\r\n//     Button,\r\n//     FormControl,\r\n//     InputLabel,\r\n//     Select,\r\n//     MenuItem,\r\n//     Alert,\r\n//   } from \"@material-ui/core\";\r\n\r\nconst AnimalList = () => {\r\n    const [pageNum, setPageNum] = useState(0)\r\n    const [numOfPages, setNumOfPages] = useState(0)\r\n\r\n    const pages = new Array(numOfPages).fill(null).map((v, i) => i)\r\n    console.log('pages', pages);\r\n    const [getAnimal, setGetAnimal] = useState()\r\n    console.log(\"🚀 ~ file: AnimalList.js ~ line 40 ~ AnimalList ~ getAnimal\", getAnimal)\r\n    console.log(\"🚀  getAnimal\", getAnimal?.animal_picture)\r\n\r\n    const getAnimalList = async () => {\r\n        const response = await axios.get(`https://immense-badlands-33128.herokuapp.com/api/animal/getAnimal?page=${pageNum}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n        if (response.status === 200) {\r\n            setGetAnimal(response.data.animal)\r\n            setNumOfPages(response?.data?.totalPages)\r\n        }\r\n    }\r\n\r\n\r\n    const gotoNext = () => {\r\n        setPageNum(Math.min(numOfPages - 1, pageNum + 1))\r\n    }\r\n\r\n    const gotoPrevious = () => {\r\n        setPageNum(Math.max(0, pageNum - 1))\r\n    }\r\n\r\n    const [addCategoryOpenModal, setAddCategoryOpenModal] = useState(false);\r\n    const closeAddCategoryModal = () => {\r\n        setAddCategoryOpenModal(false);\r\n    }\r\n    const deleteProductCategoryList = async (id) => {\r\n        console.log(id)\r\n        const response = await axios.delete(`https://immense-badlands-33128.herokuapp.com/api/animal/deleteAnimal/${id}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n        if (response.status === 200) {\r\n            closeAddCategoryModal();\r\n            MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Delete Success...',\r\n            });\r\n            getAnimalList();\r\n        }\r\n    }\r\n\r\n\r\n    // const [category, setCategory] = useState()\r\n    // console.log('setCategory', category)\r\n\r\n    const getCategoryList = async (categoryId) => {\r\n        // console.log('categoryId', categoryId);\r\n        const response = await axios.get(`https://immense-badlands-33128.herokuapp.com/api/animal/getCategory/${categoryId}`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n        // console.log('getCategoryList', response);\r\n        if (response.status === 200) {\r\n            setGetAnimal(response.data.animal)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('productCategoryList', productCategoryList)\r\n    const [productCategoryList, setProductCategoryList] = useState();\r\n    const getProductCategoryList = async () => {\r\n        const response = await axios.get(`https://immense-badlands-33128.herokuapp.com/api/category/getCategory`, { headers: { Authorization: `Bearer ${getAccessToken()}` } });\r\n        if (response.status === 200) {\r\n\r\n            var arr = [\r\n            ]\r\n            var result = response.data.categoryList.map(person => (arr.push({ label: person.name, value: person.slug, id: person._id })));\r\n            setProductCategoryList(arr)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getAnimalList()\r\n        getProductCategoryList()\r\n        getCategoryList()\r\n    }, [pageNum])\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <Typography variant=\"h2\" style={{ marginTop: '50px' }}>\r\n                Product List\r\n            </Typography> */}\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing=\"2\">\r\n\r\n                {/* <Grid item lg={3} md={3}>\r\n                    <Typography variant=\"h2\">\r\n                        Product List\r\n                    </Typography>\r\n                </Grid> */}\r\n                {/* category */}\r\n\r\n                <Grid item lg={6} md={6} sm={6} style={{ marginTop: '25px' }}>\r\n                    <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Select Category\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            // value={category}\r\n                            onChange={(event) => getCategoryList(event.target.value)}\r\n                            // onClick={getCategoryList}\r\n                            label=\"Select Category\"\r\n                        >\r\n                            {productCategoryList?.map((category) => {\r\n                                return (\r\n                                    <MenuItem key={category.label} value={category.id}>\r\n                                        {category.value}\r\n                                    </MenuItem>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <TableContainer component={Paper} style={{ marginTop: '30px' }}>\r\n                <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Category</TableCell>\r\n                            <TableCell>Batch No</TableCell>\r\n                            <TableCell>Id No</TableCell>\r\n                            <TableCell>Image</TableCell>\r\n\r\n                            <TableCell>BioFlock_plantNo</TableCell>\r\n                            <TableCell>Weight</TableCell>\r\n                            <TableCell>Color</TableCell>\r\n                            <TableCell>Gender</TableCell>\r\n\r\n                            <TableCell>Age</TableCell>\r\n                            <TableCell>Quantity</TableCell>\r\n                            <TableCell>Buying Price</TableCell>\r\n                            <TableCell>Selling Price</TableCell>\r\n\r\n\r\n\r\n                            <TableCell>Action</TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {getAnimal?.map((row) => (\r\n                            <TableRow\r\n                                key={row.batch_no}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\"> {row?.category?.name}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\"> {row?.batch_no}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.id_no}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.id_no}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.bio_flock_plant_no}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.weight}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.color}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.gender}</TableCell>\r\n\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.age}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.quantity}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.buying_price}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row?.selling_price}</TableCell>\r\n\r\n\r\n                                <TableCell align=\"right\" style={{ width: '150px' }}>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <Button variant=\"outlined\">Edit</Button>\r\n                                        <Button variant=\"outlined\" onClick={() => deleteProductCategoryList(row._id)}>\r\n                                            Delete\r\n                                        </Button>\r\n                                    </div>\r\n                                </TableCell>\r\n                                {/* <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n\r\n            <div style={{ textAlign: 'center', marginTop: '30px' }}>\r\n                <button onClick={gotoPrevious} className='preNext'>Previous</button>\r\n                {\r\n                    pages?.map((pageIndex) => {\r\n                        return (<button key={pageIndex} className='paginationBtn' onClick={() => setPageNum(pageIndex)}>{pageIndex + 1}</button>)\r\n                    })\r\n                }\r\n                <button onClick={gotoNext} className='preNext'>Next</button>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AnimalList;","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Grid, Button, MenuItem, Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport AddProductModal from \"./Sub-Components/AddProductModal\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport EditProductModal from \"./Sub-Components/EditProductModal\";\r\nimport AnimalList from \"./Sub-Components/AnimalList\";\r\nconst MySwal = withReactContent(Swal);\r\nexport const productList = [];\r\nconst AllProducts = () => {\r\n\r\n\r\n\r\n\r\n\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [productCode, setProductCode] = useState(\"\");\r\n\r\n  const [addProductModalOpen, setAddProductModalOpen] = useState(false);\r\n  const closeAddProductModal = () => {\r\n    setAddProductModalOpen(false);\r\n  };\r\n  const openAddProductModal = () => {\r\n    setAddProductModalOpen(true);\r\n  };\r\n\r\n  const [batch_no, setBatch_no] = useState(\"\");\r\n  const [id_no, setId_no] = useState(\"\");\r\n  const [bio_flock_plant_no, setBio_flock_plant_no] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [buying_price, setBuying_price] = useState(\"\");\r\n  const [purchase_date, setPurchase_date] = useState(new Date());\r\n\r\n\r\n\r\n\r\n  const [category, setCategory] = useState('')\r\n  console.log(category)\r\n  const [price, setPrice] = useState(null);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  console.log('file', file)\r\n\r\n  // const onFileChange = (event) => {\r\n  //   // Update the state\r\n  //   console.log(\"file\", event)\r\n  //   console.log(\"file\", event.target.files[0].name)\r\n\r\n  //   setFile(event.target.files[0].name);\r\n\r\n  // };\r\n  const addProductData = useCallback(async () => {\r\n    if (category == null) {\r\n      setError(true);\r\n      setErrorMessage(\"Please Fill all the fields\");\r\n    } else {\r\n      setError(false);\r\n      let data = {\r\n        category,\r\n        productCode,\r\n        file,\r\n        batch_no,\r\n        id_no,\r\n        bio_flock_plant_no,\r\n        weight,\r\n        color,\r\n        gender,\r\n        age,\r\n        quantity,\r\n        selling_price: price,\r\n        buying_price,\r\n        purchase_date\r\n      };\r\n      console.log(\"data\", data)\r\n\r\n      let formData = new FormData();\r\n      // formData.append('animalPicture', file);\r\n      formData.append('category', category);\r\n      formData.append('batch_no', batch_no);\r\n      formData.append('id_no', id_no);\r\n      formData.append('bio_flock_plant_no', bio_flock_plant_no);\r\n      formData.append('weight', weight);\r\n      formData.append('color', color);\r\n      formData.append('gender', gender);\r\n      formData.append('age', age);\r\n      formData.append('quantity', quantity);\r\n      formData.append('selling_price', price);\r\n      formData.append('buying_price', buying_price);\r\n      formData.append('purchase_date', purchase_date);\r\n\r\n\r\n\r\n\r\n\r\n      console.log('form data', formData)\r\n\r\n\r\n      const response = await axios.post(`https://immense-badlands-33128.herokuapp.com/api/animal/create`, formData, {\r\n        headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n      });\r\n      if (response.status === 201) {\r\n        closeAddProductModal();\r\n        // getProductList();\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Great...\",\r\n          // text: `${response.data}`,\r\n        });\r\n        // setTimeout(() => {\r\n        //   window.location.reload()\r\n        // }, 2000);\r\n      }\r\n    }\r\n  }, [price, category]);\r\n\r\n\r\n\r\n  // const [productEditCategory, setProductEditCategory] = useState(\"\");\r\n  // const [productEditCategoryId, setProductEditCategoryId] = useState(\"\");\r\n  // const changeProductEditCategory = (value) => {\r\n  //   const productCategoryID = categoryList.filter((category) => {\r\n  //     return value === category.name;\r\n  //   });\r\n  //   setProductEditCategory(value);\r\n  //   setProductEditCategoryId(productCategoryID[0].id);\r\n  // };\r\n  // const [editName, setEditName] = useState(\"\");\r\n  // const [editPrice, setEditPrice] = useState(null);\r\n  // const getProduct = async () => {\r\n  //   if (!selectedId) {\r\n  //   } else {\r\n  //     handleMenuClose();\r\n  //     const response = await axios.get(`${getUrl()}/product/${selectedId}`, {\r\n  //       headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n  //     });\r\n  //     if (response.status === 200) {\r\n  //       const { data } = response;\r\n  //       setEditName(data[0].product);\r\n  //       setEditPrice(data[0].price);\r\n  //       changeProductEditCategory(data[0].category);\r\n  //       setEditProductCode(data[0].productcode);\r\n  //       openEditProductModalOpen();\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n\r\n  // const updateProduct = useCallback(async () => {\r\n  //   const data = {\r\n  //     name: editName,\r\n  //     category: Number(productEditCategoryId),\r\n  //     sellingprice: Number(editPrice),\r\n  //     productCode: editProductCode,\r\n  //   };\r\n  //   const response = await axios.patch(\r\n  //     `${getUrl()}/product/${selectedId}`,\r\n  //     data,\r\n  //     { headers: { Authorization: `Bearer ${getAccessToken()}` } }\r\n  //   );\r\n  //   if (response.status === 200) {\r\n  //     closeEditProductModal();\r\n  //     MySwal.fire({\r\n  //       icon: \"success\",\r\n  //       title: \"Great...\",\r\n  //       text: `${response.data}`,\r\n  //     });\r\n  //     getProductList();\r\n  //   }\r\n  // }, [editName, productEditCategoryId, editPrice, selectedId, editProductCode]);\r\n  // const removeProduct = async () => {\r\n  //   handleMenuClose();\r\n  //   MySwal.fire({\r\n  //     title: \"Do you want to remove?\",\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: \"Remove\",\r\n  //     cancelButtonText: `Keep`,\r\n  //   }).then(async (result) => {\r\n  //     if (result.isConfirmed) {\r\n  //       const response = await axios.delete(\r\n  //         `${getUrl()}/product/${selectedId}`,\r\n  //         { headers: { Authorization: `Bearer ${getAccessToken()}` } }\r\n  //       );\r\n  //       if (response.status === 200) {\r\n  //         MySwal.fire({\r\n  //           icon: \"success\",\r\n  //           title: \"Great...\",\r\n  //           text: `${response.data}`,\r\n  //         });\r\n  //         getProductList();\r\n  //       }\r\n  //     } else if (result.isDenied) {\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Grid item lg={3} md={3}>\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={openAddProductModal}\r\n          fullWidth\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Create Animal\r\n        </Button>\r\n        {/* Add product modal */}\r\n        <Modal\r\n          open={addProductModalOpen}\r\n          onClose={closeAddProductModal}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <AddProductModal\r\n            isError={error}\r\n            errorMessage={errorMessage}\r\n            save={addProductData}\r\n\r\n            file={file}\r\n            setFile={setFile}\r\n\r\n            category={category}\r\n            setCategory={setCategory}\r\n\r\n            closeModal={closeAddProductModal}\r\n\r\n            // onFileChange={onFileChange}\r\n\r\n            batch_no={batch_no}\r\n            setBatch_no={setBatch_no}\r\n\r\n            id_no={id_no}\r\n            setId_no={setId_no}\r\n\r\n            bio_flock_plant_no={bio_flock_plant_no}\r\n            setBio_flock_plant_no={setBio_flock_plant_no}\r\n\r\n            weight={weight}\r\n            setWeight={setWeight}\r\n\r\n\r\n            color={color}\r\n            setColor={setColor}\r\n\r\n            gender={gender}\r\n            setGender={setGender}\r\n\r\n            age={age}\r\n            setAge={setAge}\r\n\r\n            quantity={quantity}\r\n            setQuantity={setQuantity}\r\n\r\n            buying_price={buying_price}\r\n            setBuying_price={setBuying_price}\r\n\r\n            price={price}\r\n            setPrice={setPrice}\r\n\r\n            purchase_date={purchase_date}\r\n            setPurchase_date={setPurchase_date}\r\n\r\n\r\n\r\n          />\r\n        </Modal>\r\n      </Grid>\r\n\r\n      <AnimalList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProducts;\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AllProducts from '../Components/AllProducts';\r\n\r\n\r\nconst ProductList = () => {\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <AllProducts />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductList;","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, Select } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nconst AddWarrantyModal = ({closeModal}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Add Warranty</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            multiline\r\n                            fullWidth\r\n                            rows={8}\r\n                            variant=\"outlined\"\r\n                            label=\"Description\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={4} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            label=\"Duration\"\r\n                            />\r\n                     </Grid>\r\n                     <Grid item lg={8} md={8}>\r\n                        <FormControl \r\n                            fullWidth\r\n                            variant=\"outlined\">\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Warranty Type</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            // value={age}\r\n                            // onChange={handleChange}\r\n                            label=\"Warranty Type\"\r\n                            >\r\n                            <MenuItem value=\"\">\r\n                                <em>Please Select</em>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"Days\">Days</MenuItem>\r\n                            <MenuItem value=\"Months\">Months</MenuItem>\r\n                            <MenuItem value=\"Years\">Years</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default AddWarrantyModal;\r\n","import React,{useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Modal } from \"@material-ui/core\";\r\nimport AddWarrantyModal from \"../Components/Sub-Components/AddWarrantyModal\";\r\nexport const productWarrantyList = [\r\n  \r\n]\r\nconst ProductWarrantyList = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'description',\r\n        headerName: 'Warranty Description',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'duration',\r\n        headerName: 'Warranty Duration',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    pushIdToSelectedList(id);\r\n  }\r\n  const [selectedIdList,setSelectedId] = useState([]);\r\n  const pushIdToSelectedList = (id)=>{\r\n      const includes = selectedIdList.includes(id);\r\n      if(includes) {\r\n        const updatedList = selectedIdList.filter((indexId)=> {return id!==indexId});\r\n        setSelectedId(updatedList);\r\n      }else{\r\n          setSelectedId(prevIdList=>[...prevIdList,id]);\r\n      }\r\n  }\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [addWarrantyOpenModal,setAddWarrantyOpenModal] = useState(false);\r\n  const openAddWarrantyModal = ()=>{\r\n    setAddWarrantyOpenModal(true);\r\n  }\r\n  const closeAddWarrantyModal = ()=>{\r\n    setAddWarrantyOpenModal(false);\r\n  }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Product Warranties</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    \r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            <MenuItem onClick={openAddWarrantyModal}>Edit</MenuItem>\r\n                            <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                        </Menu>\r\n\r\n                </Grid>\r\n                <Grid item lg={3} md={3}>\r\n                  <Button\r\n                      onClick={openAddWarrantyModal}\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<AddBoxIcon/>}\r\n                      >\r\n                          Add\r\n                      </Button>\r\n                  \r\n                  {/* add product variation modal */}\r\n                  <Modal\r\n                        open={addWarrantyOpenModal}\r\n                        onClose={closeAddWarrantyModal}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                        <AddWarrantyModal \r\n                          closeModal={closeAddWarrantyModal}/>\r\n                    </Modal>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  <Autocomplete\r\n                        fullWidth\r\n                        id=\"combo-box-demo\"\r\n                        options={productWarrantyList}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderInput={(params) => <TextField  {...params} label=\"Search Warranty\" variant=\"outlined\" />}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item lg={12} md={12}>\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={productWarrantyList}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    onRowSelected={onSelect}\r\n                />\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductWarrantyList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport Form from 'react-bootstrap/Form'\r\nconst AddPurchaseForm = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPurchaseForm;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddPurchaseForm from \"../Components/AddPurchasForm\";\r\n\r\nconst AddPurchase = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Add Purchase</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <AddPurchaseForm/>\r\n              </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default AddPurchase;\r\n","import { Autocomplete, Card, InputLabel, Select } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nconst AddPurchaseReturnFilter = ()=>{\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid \r\n                    container\r\n                    spacing=\"2\">\r\n                        <Grid item lg={3} md={3}>\r\n                            <Autocomplete\r\n                                fullWidth\r\n                                id=\"combo-box-demo\"\r\n                                // options={supplierList}\r\n                                getOptionLabel={(option) => option.name}\r\n                                renderInput={(params) => <TextField  {...params} label=\"Suplliers\" variant=\"outlined\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3}>\r\n                            <FormControl \r\n                                fullWidth \r\n                                variant=\"outlined\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Purchase Status</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    // value={age}\r\n                                    // onChange={handleChange}\r\n                                    label=\"Purchase Status\"\r\n                                >\r\n                                <MenuItem value=\"All\">All</MenuItem>\r\n                                <MenuItem value=\"Recieved\">Recieved</MenuItem>\r\n                                <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                                <MenuItem value=\"Ordered\">Ordered</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                id=\"outlined-basic\" \r\n                                label=\"Reference No\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"date\"\r\n                                id=\"outlined-basic\" \r\n                                label=\"Date\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    spacing=\"2\">\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"file\"\r\n                                id=\"outlined-basic\" \r\n                                // label=\"Pay Term Value\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={9} md={9}/>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPurchaseReturnFilter;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddPurchaseReturnFilter from \"../Components/AddPurchaseReturnFilter\";\r\n\r\nconst AddPurchaseReturn = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Add Purchase Return</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <AddPurchaseReturnFilter/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default AddPurchaseReturn;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nconst ViewPurchaseModal = ({closeModal,data}) => {\r\n  return (\r\n        <Grid container>\r\n          <Grid item lg={3} md={3}/>\r\n          <Grid item lg={6} md={6}>\r\n          <Card>\r\n              <CardContent>\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"2\">\r\n                    <Grid item lg={6} md={6}>\r\n                      <h1>View Purchase Details</h1>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3}/>\r\n                    <Grid item lg={2} md={2}/>\r\n                    <Grid item lg={1} md={1}>\r\n                      <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                      <Grid item lg={4} md={4}>\r\n                        <span>Date: <strong>{data.date}</strong></span>\r\n                      </Grid>\r\n                      <Grid item lg={4} md={4}>\r\n                        <span>Total Purchase Amount: <strong>BDT {data.totalamount}</strong></span>\r\n                      </Grid>\r\n                      <Grid item lg={4} md={4}>\r\n                        <span>Tax Percentage: <strong>{data.taxperentage} %</strong></span>\r\n                      </Grid>\r\n                  </Grid>\r\n                  <br />\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                      <Grid item lg={4} md={4}>\r\n                        <span>Tax Amount: <strong>BDT {data.taxamount}</strong></span>\r\n                      </Grid>\r\n                      <Grid item lg={4} md={4}>\r\n                        <span>Due Amount: <strong>BDT {data.due}</strong></span>\r\n                      </Grid>\r\n                      <Grid item lg={4} md={4}/>\r\n                  </Grid>\r\n                  <br />\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                    <Grid item lg={4} md={4}>\r\n                        <span>Supplier: <strong>{data.supplier}</strong></span>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4}>\r\n                        <span>Supplier Phone: <strong>{data.supplierphone}</strong></span>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4}></Grid>\r\n                  </Grid>\r\n                  <br />\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <h5>Additional Note</h5>\r\n                        <p>{data.note}</p>\r\n                      </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                  <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={4} md={4}/>\r\n                    <Grid item lg={3} md={3}/>\r\n                    <Grid item lg={2} md={2}/>\r\n                    <Grid item lg={2} md={2}>\r\n                        <Button\r\n                            fullWidth\r\n                            onClick={closeModal}\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            endIcon={<CloseOutlinedIcon/>}\r\n                          >\r\n                            Close\r\n                          </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n          </Card>\r\n          </Grid>\r\n          <Grid item lg={3} md={3}/>\r\n        </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewPurchaseModal;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nconst EditPurchaseModal = ({closeModal,data,update}) => {\r\n  return (\r\n        <Grid container>\r\n          <Grid item lg={3} md={3}/>\r\n          <Grid item lg={6} md={6}>\r\n          <Card>\r\n              <CardContent>\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"2\">\r\n                    <Grid item lg={6} md={6}>\r\n                      <h1>Edit Purchase Details</h1>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3}/>\r\n                    <Grid item lg={2} md={2}/>\r\n                    <Grid item lg={1} md={1}>\r\n                      <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                type=\"date\"\r\n                                fullWidth\r\n                                value={data.editDate}\r\n                                onChange={(event)=>data.setEditDate(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Date\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"number\"\r\n                                value={data.editTotalAmount}\r\n                                onChange={(event)=>data.setEditTotalAmount(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Total Amount\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={data.editSupplier}\r\n                                onChange={(event)=>data.setEditSupplier(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Supplier\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                    fullWidth\r\n                                    value={data.editTaxPercentage}\r\n                                    onChange={(event)=>data.setEditTaxPercentage(event.target.value)}\r\n                                    type=\"number\"\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Tax Percentage\" \r\n                                    variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"number\"\r\n                                value={data.editTaxAmount}\r\n                                onChange={(event)=>data.setEditTaxAmount(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Tax Amount\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={data.editSupplierPhone}\r\n                                onChange={(event)=>data.setEditSupplierPhone(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Supplier Phone\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <FormControl \r\n                            variant=\"outlined\" \r\n                            fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Select Category</InputLabel>\r\n                                <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"Select Category\"\r\n                                value={data.editCategory}\r\n                                onChange={(event)=>data.changeCategory(event.target.value)}\r\n                                >\r\n                                    {\r\n                                        data.purchaseCategoryList.map((category)=>{\r\n                                            return (<MenuItem value={category.name}>{category.name}</MenuItem>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={data.editDueAmount}\r\n                                onChange={(event)=>data.setEditDueAmount(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Due Amount\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                multiline\r\n                                rows={6}\r\n                                value={data.editNote}\r\n                                onChange={(event)=>data.setEditNote(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Additional Notes\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                  <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={4} md={4}/>\r\n                    <Grid item lg={3} md={3}>\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={update}\r\n                            variant=\"contained\">Save</Button>\r\n                    </Grid>\r\n                    <Grid item lg={2} md={2}/>\r\n                    <Grid item lg={3} md={3}>\r\n                        <Button\r\n                            fullWidth\r\n                            onClick={closeModal}\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            endIcon={<CloseOutlinedIcon/>}\r\n                          >\r\n                            Close\r\n                          </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n          </Card>\r\n          </Grid>\r\n          <Grid item lg={3} md={3}/>\r\n        </Grid>\r\n  );\r\n};\r\n\r\nexport default EditPurchaseModal;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu, Card } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport ViewPurchaseModal from \"../Components/ViewPurchaseModal\";\r\nimport EditPurchaseModal from \"../Components/EditPurchaseModal\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst PurchaseList = () => {\r\n    const navigate = useNavigate();\r\n    const [purchaseList,setPurchaseList] = useState([]);\r\n    const getPurchaseList = async()=>{\r\n        const response = await axios.get(`${getUrl()}/purchase/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n          setPurchaseList(response.data);\r\n        }\r\n    }\r\n    const [purchaseCategoryList,setPurchaseCategoryList] = useState([]);\r\n    const getPurchaseCategoryList = async()=>{\r\n        const response = await axios.get(`${getUrl()}/purchase-category/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n          setPurchaseCategoryList(response.data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n      getPurchaseList();\r\n      getPurchaseCategoryList();\r\n    },[])\r\n    const columns = [\r\n      {\r\n        field: 'date',\r\n        headerName: 'Date',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'category',\r\n        headerName: 'Category',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'supplier',\r\n        headerName: 'Supplier',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'supplierphone',\r\n        headerName: 'Supplier Phone',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'totalamount',\r\n        headerName: 'Total Amount',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'taxpercentage',\r\n        headerName: 'Tax Percentage',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'taxamount',\r\n        headerName: 'Tax Amount',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'dueamount',\r\n        headerName: 'Due Amount',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'note',\r\n        headerName: 'Additional Note',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [viewPurchaseModal,setViewPurchaseModal] = useState(false);\r\n  const [purchase,setPurchase] = useState({date:\"\",supplier:\"\",supplierphone:\"\",totalamount:0,taxperentage:0,taxamount:0,due:0,note:\"\"})\r\n  const openViewPurchaseModal = ()=>{\r\n    handleClose();\r\n    const purchaseData = purchaseList.filter((purchase)=>{return selectedId === purchase.id});\r\n    setPurchase({date:purchaseData[0].date,supplier:purchaseData[0].supplier,supplierphone:purchaseData[0].supplierphone,\r\n      totalamount:purchaseData[0].totalamount,taxperentage:purchaseData[0].taxpercentage,taxamount:purchaseData[0].taxamount,\r\n      due:purchaseData[0].dueamount,note:purchaseData[0].note});\r\n    setViewPurchaseModal(true);\r\n  }\r\n  const closeViewPurchaseModal = ()=>{\r\n    setViewPurchaseModal(false);\r\n  }\r\n  const [editPurchaseModal,setEditPurchaseModal] = useState(false);\r\n  const openEditPurchaseModal = ()=>{\r\n    handleClose();\r\n    const purchaseData = purchaseList.filter((purchase)=>{return selectedId === purchase.id});\r\n    setEditDate(purchaseData[0].date);\r\n    setEditSupplier(purchaseData[0].supplier);\r\n    setEditSupplierPhone(purchaseData[0].supplierphone);\r\n    setEditTotalAmount(purchaseData[0].totalamount);\r\n    setEditTaxPercentage(purchaseData[0].taxpercentage);\r\n    setEditTaxAmount(purchaseData[0].taxamount);\r\n    setEditDueAmount(purchaseData[0].dueamount);\r\n    setEditNote(purchaseData[0].note);\r\n    setEditCategory(purchaseData[0].category);\r\n    setEditPurchaseModal(true);\r\n  }\r\n  const closeEditPurchaseModal = ()=>{\r\n    setEditPurchaseModal(false);\r\n  }\r\n  const [editDate,setEditDate] = useState(\"\");\r\n  const [editSupplier,setEditSupplier] = useState(\"\");\r\n  const [editSupplierPhone,setEditSupplierPhone] = useState(\"\");\r\n  const [editTotalAmount,setEditTotalAmount] = useState(0);\r\n  const [editTaxPercentage,setEditTaxPercentage] = useState(0);\r\n  const [editTaxAmount,setEditTaxAmount] = useState(0);\r\n  const [editDueAmount,setEditDueAmount] = useState(0);\r\n  const [editNote,setEditNote] = useState(\"\");\r\n  const [editCategory,setEditCategory] = useState(\"\");\r\n  const [editCategoryId,setEditCategoryId] = useState(null);\r\n  const changeCategory = async(value)=>{\r\n    const purchaseCategory = purchaseCategoryList.filter((category)=>{return value === category.name});\r\n    setEditCategory(value);\r\n    setEditCategoryId(purchaseCategory[0].id);\r\n  }\r\n  const editData = {\r\n    editDate,setEditDate,editSupplier,setEditSupplier,editSupplierPhone,\r\n    setEditSupplierPhone,editTotalAmount,setEditTotalAmount,editTaxPercentage,\r\n    setEditTaxPercentage,editTaxAmount,setEditTaxAmount,editDueAmount,\r\n    setEditDueAmount,editNote,setEditNote,editCategory,purchaseCategoryList,changeCategory\r\n  }\r\n  const resetData = ()=>{\r\n    setEditDate(\"\");\r\n    setEditSupplier(\"\");\r\n    setEditSupplierPhone(\"\");\r\n    setEditTotalAmount(0);\r\n    setEditDueAmount(0);\r\n    setEditTaxPercentage(0);\r\n    setEditTaxAmount(0);\r\n    setEditCategory(\"\");\r\n    setEditCategoryId(null);\r\n    setEditNote(\"\");\r\n}\r\n  const update = async()=>{\r\n    const data = {\r\n        purchasedate: editDate,\r\n        note: editNote,\r\n        totalamount: Number(editTotalAmount),\r\n        dueamount: Number(editDueAmount),\r\n        supplier: editSupplier,\r\n        supplierphone: editSupplierPhone,\r\n        taxpercentage: Number(editTaxPercentage),\r\n        taxamount: Number(editTaxAmount),\r\n        category:Number(editCategoryId)\r\n    }\r\n    try{\r\n        const response = await axios.patch(`${getUrl()}/purchase/${selectedId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        \r\n        if(response.status === 200){\r\n            resetData();\r\n            closeEditPurchaseModal();\r\n            getPurchaseList();\r\n            MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Great...',\r\n                text: `${response.data}`,\r\n            });\r\n        }\r\n    }\r\n    catch(error){\r\n      closeEditPurchaseModal();\r\n        MySwal.fire({\r\n            icon: 'error',\r\n            text: `${error.message}`,\r\n        });\r\n    }\r\n  }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Purchase List</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid  \r\n                style={{ display:\"flex\",alignItems: \"center\",justifyContent:\"center\" }}\r\n                item lg={3} md={3}>\r\n                    <Button\r\n                      fullWidth\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenu}\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<EditIcon/>}\r\n                      >\r\n                          Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            <MenuItem onClick={openViewPurchaseModal}>View</MenuItem>\r\n                            <MenuItem onClick={openEditPurchaseModal}>Edit</MenuItem>\r\n\r\n                            {/* View Purchase modal */}\r\n                            <Modal\r\n                                  open={viewPurchaseModal}\r\n                                  onClose={closeViewPurchaseModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <ViewPurchaseModal \r\n                                    data={purchase}\r\n                                    closeModal={closeViewPurchaseModal}/>\r\n                              </Modal>\r\n                            {/* Edit Purchase modal */}\r\n                            <Modal\r\n                                  open={editPurchaseModal}\r\n                                  onClose={closeEditPurchaseModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <EditPurchaseModal \r\n                                    update={update}\r\n                                    data={editData}\r\n                                    closeModal={closeEditPurchaseModal}/>\r\n                              </Modal>\r\n                        </Menu>\r\n\r\n                </Grid>\r\n                <Grid \r\n                style={{ display:\"flex\",alignItems: \"center\",justifyContent:\"center\" }}\r\n                item lg={3} md={3}>\r\n                  <Button\r\n                    fullWidth\r\n                      onClick={()=>{return navigate('/purchase/create')}}\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<AddBoxIcon/>}\r\n                      >\r\n                          Add\r\n                      </Button>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                  {/* <Autocomplete\r\n                        fullWidth\r\n                        id=\"combo-box-demo\"\r\n                        options={purchaseList}\r\n                        getOptionLabel={(option) => option.referenceno}\r\n                        renderInput={(params) => <TextField  {...params} label=\"Search Purchase\" variant=\"outlined\" />}\r\n                        /> */}\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n              {purchaseList.length>0 && \r\n              <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                  <div style={{ height: 400, width: '100%' }}>\r\n                      <DataGrid\r\n                          rows={purchaseList}\r\n                          columns={columns}\r\n                          pageSize={5}\r\n                          checkboxSelection\r\n                          onRowSelected={onSelect}\r\n                      />\r\n                  </div>\r\n              </Grid>\r\n            </Grid>}\r\n            </Card>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default PurchaseList;\r\n","import { Card, Select } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nconst PurchaseReturnFilter = ()=>{\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid \r\n                    container\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <FormControl \r\n                                fullWidth \r\n                                variant=\"outlined\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Business Location</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    // value={age}\r\n                                    // onChange={handleChange}\r\n                                    label=\"Business Location\"\r\n                                >\r\n                                <MenuItem value=\"All\">All</MenuItem>\r\n                                <MenuItem value=\"Shop1\">Shop 1</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"2\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                        fullWidth\r\n                                        type=\"date\"\r\n                                        id=\"outlined-basic\" \r\n                                        label=\"Start Date\" \r\n                                        variant=\"outlined\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                        fullWidth\r\n                                        type=\"date\"\r\n                                        id=\"outlined-basic\" \r\n                                        label=\"Start Date\" \r\n                                        variant=\"outlined\" />\r\n                                </Grid>\r\n                            </Grid>    \r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseReturnFilter;","import { Card} from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst PurchaseReturnTable = ()=>{\r\n    const productPurchaseList = [];\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120 },\r\n        {\r\n          field: 'date',\r\n          headerName: 'Date',\r\n          width: 180,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'referenceno',\r\n          headerName: 'Reference No',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'location',\r\n          headerName: 'Business Location',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'supllier',\r\n          headerName: 'Supllier',\r\n          width: 190,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'parentpurchase',\r\n          headerName: 'Parent Purchase',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'paymentstatus',\r\n          headerName: 'Payment Status',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'grandtotal',\r\n          headerName: 'Grand Total',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n        {\r\n          field: 'paymentdue',\r\n          headerName: 'Payment Due',\r\n          width: 220,\r\n          editable: true,\r\n        },\r\n      ];\r\n      const navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                        <Grid container>\r\n                            <Grid item lg={6} md={6}>\r\n                                <h2>All Purchase Returns</h2>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6}>\r\n                                <Grid \r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"flex-end\">\r\n                                    <Grid item lg={6} md={6}/>\r\n                                    <Grid item lg={6} md={6}>\r\n                                        <Button\r\n                                        aria-controls=\"simple-menu\" \r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={()=>{return navigate('/purchase/return/create')}}\r\n                                        color=\"primary\" \r\n                                        variant=\"contained\"\r\n                                        startIcon={<AddBoxIcon/>}\r\n                                        >\r\n                                            Add\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item lg={12} md={12}>\r\n                                <div style={{ height: 400, width: '100%' }}>\r\n                                    <DataGrid\r\n                                        rows={productPurchaseList}\r\n                                        columns={columns}\r\n                                        pageSize={5}\r\n                                        checkboxSelection\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseReturnTable;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PurchaseReturnFilter from \"../Components/PurchaseReturnFilter\";\r\nimport PurchaseReturnTable from \"../Components/PurchaseReturnTable\";\r\n\r\nconst PurchaseReturn = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Purchase Return</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <PurchaseReturnFilter/>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <PurchaseReturnTable/>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default PurchaseReturn;\r\n","import React,{useState} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nconst users = []\r\nconst ActivityLogTable = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'date',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'subjecttype',\r\n        headerName: 'Subject Type',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'by',\r\n        headerName: 'By',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    pushIdToSelectedList(id);\r\n  }\r\n  const [selectedIdList,setSelectedId] = useState([]);\r\n  const pushIdToSelectedList = (id)=>{\r\n      const includes = selectedIdList.includes(id);\r\n      if(includes) {\r\n        const updatedList = selectedIdList.filter((indexId)=> {return id!==indexId});\r\n        setSelectedId(updatedList);\r\n      }else{\r\n          setSelectedId(prevIdList=>[...prevIdList,id]);\r\n      }\r\n  }\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>Activity Log</h2>\r\n                <Grid container>\r\n                    <Grid item lg={12} md={12}>\r\n                        <Autocomplete\r\n                            fullWidth\r\n                            id=\"combo-box-demo\"\r\n                            options={users}\r\n                            getOptionLabel={(option) => option.name}\r\n                            renderInput={(params) => <TextField  {...params} label=\"Search Users\" variant=\"outlined\" />}\r\n                            />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={users}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        checkboxSelection\r\n                        onRowSelected={onSelect}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default ActivityLogTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ActivityLogTable from \"../Components/Activity Log/ActivityLogTable\";\r\n\r\nconst ActivityLogReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={12} md={12}>\r\n                    <ActivityLogTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ActivityLogReport;\r\n","import { Card, InputLabel, Select, Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nconst ExpenseReportFilter = ()=>{\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={4} md={4}>\r\n                            <FormControl \r\n                                    fullWidth \r\n                                    variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Business Location</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        // value={age}\r\n                                        // onChange={handleChange}\r\n                                        label=\"Business Location\"\r\n                                    >\r\n                                        <MenuItem value=\"All\">All</MenuItem>\r\n                                        <MenuItem value=\"Shop1\">Shop 1</MenuItem>\r\n                                        <MenuItem value=\"Shop2\">Shop 2</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <FormControl \r\n                                    fullWidth \r\n                                    variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        // value={age}\r\n                                        // onChange={handleChange}\r\n                                        label=\"Category\"\r\n                                    >\r\n                                    <MenuItem value=\"All\">All</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"2\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    type=\"date\"\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Start Date\" \r\n                                    variant=\"outlined\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    type=\"date\"\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"End Date\" \r\n                                    variant=\"outlined\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenseReportFilter;","import React,{useState} from \"react\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nexport const expenseReportList = []\r\nconst ExpenseReportTable = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'category',\r\n        headerName: 'Expense Categories',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'totalexpense',\r\n        headerName: 'Total Expense',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    pushIdToSelectedList(id);\r\n  }\r\n  const [selectedIdList,setSelectedId] = useState([]);\r\n  const pushIdToSelectedList = (id)=>{\r\n      const includes = selectedIdList.includes(id);\r\n      if(includes) {\r\n        const updatedList = selectedIdList.filter((indexId)=> {return id!==indexId});\r\n        setSelectedId(updatedList);\r\n      }else{\r\n          setSelectedId(prevIdList=>[...prevIdList,id]);\r\n      }\r\n  }\r\n  return (\r\n      <Card>\r\n          <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <Autocomplete\r\n                        fullWidth\r\n                        id=\"combo-box-demo\"\r\n                        options={expenseReportList}\r\n                        getOptionLabel={(option) => option.category}\r\n                        renderInput={(params) => <TextField  {...params} label=\"Search Expense Category\" variant=\"outlined\" />}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item lg={12} md={12}>\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={expenseReportList}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    onRowSelected={onSelect}\r\n                />\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseReportTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ExpenseReportFilter from \"../Components/Expense Report/ExpenseReportFilter\";\r\nimport ExpenseReportTable from \"../Components/Expense Report/ExpenseReportTable\";\r\n\r\nconst ExpenseReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Expense Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <ExpenseReportFilter/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <ExpenseReportTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ExpenseReport;\r\n","import {  Card, InputLabel, Select, Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nconst StockAdjustmentFilter = ()=>{\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <FormControl \r\n                                    fullWidth \r\n                                    variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Business Location</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        // value={age}\r\n                                        // onChange={handleChange}\r\n                                        label=\"Business Location\"\r\n                                    >\r\n                                    <MenuItem value=\"All\">All</MenuItem>\r\n                                    <MenuItem value=\"Shop1\">Shop 1</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockAdjustmentFilter;","import React from \"react\";\r\nimport { Grid,Card, } from \"@material-ui/core\";\r\nconst StockAdjustmentAmounts = () => {\r\n  return (\r\n        <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid container >\r\n                <Grid  item lg={6} md={6}>\r\n                    <Card>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p><strong>Total Normal:</strong></p>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p>$ 255,986.00</p>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p><strong>Total Abnormal:</strong></p>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p>$ 255,986.00</p>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p><strong>Total Stock Adjustment:</strong></p>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p>$ 255,986.00</p>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item lg={6} md={6}>\r\n                    <Card>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <Grid container>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p><strong>Total Amount Recovered:</strong></p>\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <p>$ 1,538.75</p>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default StockAdjustmentAmounts;\r\n","import React,{useState} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nconst stockAdjustmentList = []\r\nconst StockAdjustmentTable = () => {\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'date',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'referenceno',\r\n        headerName: 'Reference No',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'adjustmenttype',\r\n        headerName: 'Adjustment Type',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'location',\r\n        headerName: 'Location',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'totalamount',\r\n        headerName: 'Total Amount',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'totalamountrecovered',\r\n        headerName: 'Total Amount Recovered',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'reason',\r\n        headerName: 'Reason',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'addedby',\r\n        headerName: 'Added By',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    pushIdToSelectedList(id);\r\n  }\r\n  const [selectedIdList,setSelectedId] = useState([]);\r\n  const pushIdToSelectedList = (id)=>{\r\n      const includes = selectedIdList.includes(id);\r\n      if(includes) {\r\n        const updatedList = selectedIdList.filter((indexId)=> {return id!==indexId});\r\n        setSelectedId(updatedList);\r\n      }else{\r\n          setSelectedId(prevIdList=>[...prevIdList,id]);\r\n      }\r\n  }\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>Stock Adjustments</h2>\r\n                <Grid container>\r\n                    <Grid item lg={12} md={12}>\r\n                        <Autocomplete\r\n                            fullWidth\r\n                            id=\"combo-box-demo\"\r\n                            options={stockAdjustmentList}\r\n                            getOptionLabel={(option) => option.name}\r\n                            renderInput={(params) => <TextField  {...params} label=\"Search Stock ADjustments\" variant=\"outlined\" />}\r\n                            />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={stockAdjustmentList}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        checkboxSelection\r\n                        onRowSelected={onSelect}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default StockAdjustmentTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport StockAdjustmentFilter from \"../Components/Stock Adjustment Report/StockAdjustmentFilter\";\r\nimport StockAdjustmentAmounts from \"../Components/Stock Adjustment Report/StockADjustmentAmounts\";\r\nimport StockAdjustmentTable from \"../Components/Stock Adjustment Report/StockAdjustmentTable\";\r\n\r\nconst StockAdjustmentReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Stock Adjustment Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <StockAdjustmentFilter/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <StockAdjustmentAmounts/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <StockAdjustmentTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default StockAdjustmentReport;\r\n","\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport getUrl from '../../HTTP/url';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://somikoronits.com/\">\r\n        Somikoron It Services\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: '64px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: '8px',\r\n    backgroundColor: '#f48fb1',\r\n    width: \"260px !important\",\r\n    height: \"260px !important\"\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: '8px',\r\n  },\r\n  submit: {\r\n    margin: '24px 0px 16px',\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  // const url = `${getUrl()}/user/signin`;\r\n  const url = `https://immense-badlands-33128.herokuapp.com/api/signin`;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const signIn = async () => {\r\n    const data = {\r\n      email,\r\n      password\r\n    }\r\n    try {\r\n      const response = await axios.post(url, data);\r\n      // console.log(\"response\", response)\r\n      // console.log(\"response\", response.data.user.role)\r\n\r\n      if (response.status === 200) {\r\n        const { token } = response.data;\r\n        const { role, fullname } = response.data.user\r\n        localStorage.setItem(\"accessToken\", token);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"username\", fullname);\r\n        // navigate('/dashboards/home');\r\n        await checkRoleAndRedirect(role);\r\n        // if(role === 'admin' || role ==='Admin'){\r\n        //   navigate('/dashboards/home');\r\n        // }\r\n      }\r\n    }\r\n    catch (error) {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Opps...',\r\n        text: `You might have given wrong credentials`,\r\n      });\r\n    }\r\n\r\n  }\r\n  const checkRoleAndRedirect = async (role) => {\r\n    if (role.toLowerCase() === 'admin' || role.toLowerCase() === 'cashier' || role.toLowerCase() === \"accountant\"\r\n      || role.toLowerCase() === \"stockmanager\") {\r\n      navigate('/dashboards/home');\r\n    } else if (role.toLowerCase() === 'waiter') {\r\n      navigate('/pos');\r\n    }\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper} style={{ marginTop: '200px' }}>\r\n        {/* <Avatar \r\n        className={classes.avatar}>\r\n          <img src=\"https://res.cloudinary.com/chiranswe/image/upload/v1633716259/desha_logo-removebg-preview_xf8sec.png\" alt=\"\" />\r\n        </Avatar> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Email Address\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signIn}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport { Alert, Button, Card } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nconst AddPurchaseCategoryForm = ({category,setCategory,createCategory,isError,errorMsg})=>{\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    {isError ? \r\n                    (<Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <Alert severity=\"error\">\r\n                                {errorMsg}\r\n                            </Alert>\r\n                        </Grid>\r\n                    </Grid>) :(<></>)}\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                id=\"outlined-basic\" \r\n                                value={category}\r\n                                onChange={(event)=>setCategory(event.target.value)}\r\n                                label=\"Purchase Category Name\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <Button\r\n                            fullWidth\r\n                            onClick={createCategory}\r\n                            color=\"success\"\r\n                            variant=\"contained\">Create</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPurchaseCategoryForm;","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nconst EditPurchaseCategoryModal = ({closeModal,update,setCategory,category}) => {\r\n  return (\r\n        <Grid container>\r\n          <Grid item lg={3} md={3}/>\r\n          <Grid item lg={6} md={6}>\r\n          <Card>\r\n              <CardContent>\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"2\">\r\n                    <Grid item lg={6} md={6}>\r\n                      <h1>Edit Purchase Category</h1>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3}/>\r\n                    <Grid item lg={2} md={2}/>\r\n                    <Grid item lg={1} md={1}>\r\n                      <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                  <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                          value={category}\r\n                          onChange={(event)=>setCategory(event.target.value)}\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          label=\"Customer Table Number\"\r\n                        />\r\n                      </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n              <Divider/>\r\n              <CardContent>\r\n                  <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={4} md={4}/>\r\n                    <Grid item lg={3} md={3}/>\r\n                    <Grid item lg={2} md={2}>\r\n                        <Button\r\n                          fullWidth\r\n                          onClick={()=>update(closeModal)}\r\n                          variant=\"contained\"\r\n                          color=\"success\"\r\n                          endIcon={<SaveOutlinedIcon/>}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item lg={2} md={2}>\r\n                        <Button\r\n                            fullWidth\r\n                            onClick={closeModal}\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            endIcon={<CloseOutlinedIcon/>}\r\n                          >\r\n                            Close\r\n                          </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n          </Card>\r\n          </Grid>\r\n          <Grid item lg={3} md={3}/>\r\n        </Grid>\r\n  );\r\n};\r\n\r\nexport default EditPurchaseCategoryModal;\r\n","import React,{useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu, Card, Modal } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Autocomplete,TextField } from \"@material-ui/core\";\r\nimport EditPurchaseCategoryModal from \"./EditPurchaseCategoryModal\";\r\nconst PurchaseCategoryList = ({data,remove,getCategory,update,editCategory,setCategory}) => {\r\n    const columns = [\r\n      {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [editCategoryModal,setEditCategoryModal] = useState(false);\r\n  const openEditCategoryModal = ()=>{\r\n    setEditCategoryModal(true);\r\n  }\r\n  const closeEditCategoryModal = ()=>{\r\n    setEditCategoryModal(false);\r\n  }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid  \r\n                style={{ display:\"flex\",alignItems: \"center\",justifyContent:\"center\" }}\r\n                item lg={3} md={3}>\r\n                    <Button\r\n                      fullWidth\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenu}\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<EditIcon/>}\r\n                      >\r\n                          Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            <MenuItem onClick={()=>getCategory(handleClose,openEditCategoryModal,selectedId)}>Edit</MenuItem>\r\n                            <MenuItem onClick={()=>remove(handleClose,selectedId)}>Delete</MenuItem>\r\n                            <Modal\r\n                                open={editCategoryModal}\r\n                                onClose={closeEditCategoryModal}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                                >\r\n                                <EditPurchaseCategoryModal \r\n                                update={update}\r\n                                setCategory={setCategory}\r\n                                category={editCategory}\r\n                                closeModal={closeEditCategoryModal}/>\r\n                                </Modal>\r\n                        </Menu>\r\n\r\n                </Grid>\r\n                <Grid item lg={9} md={9}>\r\n                    <Autocomplete\r\n                            fullWidth\r\n                            id=\"combo-box-demo\"\r\n                            options={data}\r\n                            getOptionLabel={(option) => option.name}\r\n                            renderInput={(params) => <TextField  {...params} label=\"Search Purchase Category\" variant=\"outlined\" />}\r\n                            />\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n                    <Grid item lg={12} md={12}>\r\n                      <div style={{ height: 400, width: '100%' }}>\r\n                          <DataGrid\r\n                              rows={data}\r\n                              columns={columns}\r\n                              pageSize={5}\r\n                              checkboxSelection\r\n                              onRowSelected={onSelect}\r\n                          />\r\n                      </div>\r\n                  </Grid>\r\n            </Grid>\r\n            </Card>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default PurchaseCategoryList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddPurchaseCategoryForm from \"../Components/AddPurchaseCategoryForm\";\r\nimport PurchaseCategoryList from \"../Components/PurchaseCategoryList\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst AddPurchaseCategory = () => {\r\n    const [categoryList,setCategoryList] = useState([]);\r\n    const getCategoryList = async()=>{\r\n        const response = await axios.get(`${getUrl()}/purchase-category/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n            setCategoryList(response.data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getCategoryList();\r\n    },[])\r\n    const [category,setCategory] = useState(\"\");\r\n    const [isError,setError] = useState(false);\r\n    const [errorMsg,setErrorMsg] = useState(\"\");\r\n    const changeCategoryValue = (value)=>{\r\n        if(value !==\"\"){\r\n            setError(false);\r\n            setCategory(value);\r\n        }else{setCategory(value)};\r\n    }\r\n    const createCategory = async()=>{\r\n        if(category === \"\"){\r\n            setError(true);\r\n            setErrorMsg(\"Please Fill All The Fields\");\r\n        }else{\r\n            const data = {\r\n                name: category\r\n            }\r\n            try{\r\n                const response = await axios.post(`${getUrl()}/purchase-category`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n                if(response.status === 201){\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Great...',\r\n                        text: `${response.data}`,\r\n                    });\r\n                    getCategoryList();\r\n                    setCategory(\"\");\r\n                }\r\n            }catch(error){\r\n                MySwal.fire({\r\n                    icon: 'error',\r\n                    text: `${error.message}`,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const removeCategory = async(handleMenuClose,selectedId)=>{\r\n        if(selectedId === null) {\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Sorry...',\r\n                text: `But you must select an id first`,\r\n            });\r\n        }else{\r\n            handleMenuClose();\r\n            MySwal.fire({\r\n            title: 'Do you want to remove?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Remove',\r\n            cancelButtonText: `Keep`,\r\n            }).then(async(result) => {\r\n            if (result.isConfirmed) {\r\n                try{\r\n                    const response = await axios.delete(`${getUrl()}/purchase-category/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n\r\n                    if(response.status === 200){\r\n                        MySwal.fire({\r\n                            icon: 'success',\r\n                            title: 'Great...',\r\n                            text: `${response.data}`,\r\n                        });\r\n                        getCategoryList();\r\n                    }\r\n                }catch(error){\r\n                    MySwal.fire({\r\n                        icon: 'error',\r\n                        text: `${error.message}`,\r\n                    });\r\n                }\r\n            } else if (result.isDenied) {}\r\n            })\r\n        }\r\n    }\r\n    const [editCategory,setEditCategory] = useState(\"\")\r\n    const [editCategoryId,setEditCategoryId] = useState(null)\r\n    const getCategory = async(handleClose,openModal,id)=>{\r\n        handleClose();\r\n        openModal();\r\n        try{\r\n            const response = await axios.get(`${getUrl()}/purchase-category/${id}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n\r\n            if(response.status === 200){\r\n                const {data} = response;\r\n                setEditCategory(data.name);\r\n                setEditCategoryId(data.id);\r\n            }\r\n        }catch(error){\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                text: `${error.message}`,\r\n            });\r\n        }\r\n    }\r\n    const updateCategory = async(closeModal)=>{\r\n        const data = {\r\n            name: editCategory\r\n        }\r\n        try{\r\n            const response = await axios.patch(`${getUrl()}/purchase-category/${editCategoryId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n            \r\n            if(response.status === 200){\r\n                MySwal.fire({\r\n                    icon: 'success',\r\n                    title: 'Great...',\r\n                    text: `${response.data}`,\r\n                });\r\n                closeModal();\r\n                getCategoryList();\r\n            }\r\n        }catch(error){\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                text: `${error.message}`,\r\n            });\r\n        }\r\n    }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Create Purchase Category</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                <AddPurchaseCategoryForm\r\n                isError={isError}\r\n                errorMsg={errorMsg}\r\n                category={category}\r\n                setCategory={changeCategoryValue}\r\n                createCategory={createCategory}/>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container>\r\n              <Grid item lg={12} md={12}>\r\n                {categoryList.length>0 && \r\n                <PurchaseCategoryList \r\n                data={categoryList} \r\n                remove={removeCategory} \r\n                getCategory={getCategory}\r\n                editCategory={editCategory}\r\n                setCategory={setEditCategory}\r\n                update={updateCategory}\r\n                />}\r\n              </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default AddPurchaseCategory;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, FormControl, InputLabel, Select,MenuItem, Alert } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst AddGeneralItemModal = ({closeModal,unitList,setUnit,\r\n                              unitName,name,setName,currentStock,\r\n                              setCurrentStock,save,isError,\r\n                              errorMessage,stockAlert,\r\n                              setStockAlert,\r\n                              stockAlertQuantity,\r\n                              setStockAlertQuantity}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Add General Item</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  {isError?\r\n                    (<Grid item lg={12} md={12} style={{ marginBottom:\"15px\" }}>\r\n                          <Alert severity=\"warning\" variant=\"filled\">\r\n                              {errorMessage}\r\n                          </Alert>\r\n                      </Grid>):(<></>)}\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={name}\r\n                            onChange={(event)=>setName(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Unit</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={unitName}\r\n                            onChange={setUnit}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem> */}\r\n                            {unitList.map((unit)=>{\r\n                              return (<MenuItem key={unit.id} value={unit.name}>{unit.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={currentStock}\r\n                            onChange={(event)=>setCurrentStock(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Current Stock\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Stock Alert</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={stockAlert}\r\n                            onChange={(event)=>setStockAlert(event.target.value)}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"No\">No</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={stockAlertQuantity}\r\n                            onChange={(event)=>setStockAlertQuantity(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Stock Alert Quantity\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddGeneralItemModal);\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, FormControl, InputLabel, Select,MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst EditGeneralItemModal = ({closeModal,unitList,setUnit,\r\n                              unitName,name,setName,currentStock,\r\n                              setCurrentStock,save,stockAlert,\r\n                              setStockAlert,\r\n                              stockAlertQuantity,\r\n                              setStockAlertQuantity}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Edit General Item</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={name}\r\n                            onChange={(event)=>setName(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Unit</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={unitName}\r\n                            onChange={setUnit}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem> */}\r\n                            {unitList.map((unit)=>{\r\n                              return (<MenuItem key={unit.key} value={unit.name}>{unit.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={currentStock}\r\n                            onChange={(event)=>setCurrentStock(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Current Stock\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Stock Alert</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={stockAlert}\r\n                            onChange={(event)=>setStockAlert(event.target.value)}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"No\">No</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={stockAlertQuantity}\r\n                            onChange={(event)=>setStockAlertQuantity(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Stock Alert Quantity\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditGeneralItemModal);\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button} from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst IncreaseGeneralItemQuantityModal = ({closeModal,quantity,setQuantity,save}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Increase General Item Quantity</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={quantity}\r\n                            type=\"number\"\r\n                            onChange={(event)=>setQuantity(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Add Quantity\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default IncreaseGeneralItemQuantityModal;\r\n","import React, { useRef } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst PrintGeneralItemsStock = ({data}) => {\r\n    const componentRef = useRef();\r\n    const headers = [\r\n        {label: \"Item Name\",key:\"name\"},\r\n        {label: \"Current Stock\",key:\"instock\"},\r\n        {label: \"Unit\",key:\"unit\"},\r\n    ]\r\n  return (\r\n      <Card>\r\n        <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid item lg={6} md={6}>\r\n            <CSVLink \r\n            data={data}\r\n            headers={headers} \r\n            style={{ textDecoration:\"none\" }}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    // onClick={exportToExcel}\r\n                    >\r\n                        Download as excel\r\n                    </Button>\r\n            </CSVLink>\r\n            </Grid>\r\n            <Grid item lg={6} md={6}>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        // endIcon={<SaveOutlinedIcon/>}\r\n                        >\r\n                        Print\r\n                        </Button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n            </Grid>\r\n            <Grid \r\n            item lg={12} md={12}>\r\n                <Grid \r\n                style={{ marginTop: \"15px\" }}\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <div ref={componentRef}>\r\n                            <table border=\"1px\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Serial</td>\r\n                                        <td>General Item</td>\r\n                                        <td>Current Stock</td>\r\n                                        <td>Unit</td>\r\n                                    </tr>\r\n                                    {data.map((rawmaterial,index)=>{\r\n                                        return (\r\n                                        <tr key={rawmaterial.id}>\r\n                                            <td>{Number(index)+1}</td>\r\n                                            <td>{rawmaterial.name}</td>\r\n                                            <td>{rawmaterial.instock}</td>\r\n                                            <td>{rawmaterial.unit}</td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default PrintGeneralItemsStock;\r\n","import React,{useCallback, useEffect, useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Modal } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport AddGeneralItemModal from \"../Components/Sub-Components/AddGeneralItemModal\";\r\nimport EditGeneralItemModal from \"../Components/Sub-Components/EditGeneralItemModal\";\r\nimport IncreaseGeneralItemQuantityModal from \"../Components/Sub-Components/IncreaseGeneralItemQuantity\";\r\nimport { useNavigate } from \"react-router\";\r\nimport PrintGeneralItemsStock from \"../Components/Sub-Components/PrintGeneralItemsStock\";\r\nconst MySwal = withReactContent(Swal)\r\nconst GeneralItems = () => {\r\n    const columns = [\r\n      {\r\n        field: 'name',\r\n        headerName: 'Item',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'instock',\r\n        headerName: 'Current Stock',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n    ];\r\n    const [generalItemList,setGeneralItemList] = useState([]);\r\n    const [filteredGeneralItemList,setFilteredGeneralItemList] = useState([]);\r\n    const [unitList,setUnitList] = useState([]);\r\n    const getProductGeneralItemList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/general-item/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setGeneralItemList(data);\r\n        setFilteredGeneralItemList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getProductGeneralItemList();\r\n      getUnitList();\r\n    },[])\r\n  const onSelect = (event)=>{\r\n      const {data} = event;\r\n      const {id} = data;\r\n      setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [addBrandOpenModal,setAddBrandOpenModal] = useState(false);\r\n  const getUnitList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/unit/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setUnitList(data);\r\n      }\r\n  }\r\n  const openAddBrandModal = async()=>{\r\n    setAddBrandOpenModal(true);\r\n    setError(false);\r\n    setUnit(\"\");\r\n    setName(\"\");\r\n    setCurrentStock(0);\r\n    setStockAlert(\"\")\r\n    setStockAlertQuantity(0);\r\n  }\r\n  const closeAddBrandModal = useCallback(()=>{\r\n    setAddBrandOpenModal(false);\r\n  },[]);\r\n  const [unit,setUnit] = useState(\"\");\r\n  const [unitId,setUnitId] = useState(null);\r\n  const [name,setName] = useState(\"\");\r\n  const [currentStock,setCurrentStock] = useState(0);\r\n  const [stockAlert,setStockAlert] = useState(\"\");\r\n  const [stockAlertQuantity,setStockAlertQuantity] = useState(0);\r\n  const changeUnit = useCallback((event)=>{\r\n    const value = event.target.value;\r\n    const unitId = unitList.filter((unit)=>{return value === unit.name});\r\n    setUnitId(unitId[0].id);\r\n    setUnit(value);\r\n  },[unitList]);\r\n  const [error,setError] = useState(false);\r\n  const [errorMessage,setErrorMessage] = useState(\"\");\r\n  const postGeneralItem = async ()=>{\r\n    if(unitId === null || name === \"\" || currentStock === 0 ){\r\n      setError(true);\r\n      setErrorMessage('Please Fill All The fields');\r\n    }\r\n    else{\r\n      setError(false);\r\n      const isStockAlert = stockAlert === \"\" ? false : stockAlert === \"Yes\" ? true : false;\r\n      const data = {\r\n          name: name,\r\n          unit: Number(unitId),\r\n          currentstock:Number(currentStock),\r\n          stockalert: Boolean(isStockAlert),\r\n          stockalertquantity:Number(stockAlertQuantity)\r\n      }\r\n      const response = await axios.post(`${getUrl()}/general-item`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 201){\r\n        closeAddBrandModal();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n        setUnit(\"\");\r\n        setName(\"\");\r\n        setUnitId(null);\r\n        setCurrentStock(0);\r\n        setStockAlert(\"\")\r\n        setStockAlertQuantity(0);\r\n        getProductGeneralItemList();\r\n        closeAddBrandModal();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  };\r\n  const [editUnit,setEditUnit] = useState(\"\");\r\n  const [editUnitId,setEditUnitId] = useState(null);\r\n  const [editName,setEditName] = useState(\"\");\r\n  const [editCurrentStock,setEditCurrentStock] = useState(0);\r\n  const [editStockAlert,setEditStockAlert] = useState(\"\");\r\n  const [editStockAlertQuantity,setEditStockAlertQuantity] = useState(0);\r\n  const changeEditUnit = useCallback((event)=>{\r\n    const value = event.target.value;\r\n    const unitId = unitList.filter((unit)=>{return value === unit.name});\r\n    setEditUnitId(unitId[0].id);\r\n    setEditUnit(value);\r\n  },[unitList]);\r\n  const [editGeneralItemOpenModal,setEditGeneralItemOpenModal] = useState(false);\r\n  const openEditGeneralItemModal = async()=>{\r\n      setEditGeneralItemOpenModal(true);\r\n  }\r\n  const closeEditGeneralItemModal = useCallback(()=>{\r\n    setEditGeneralItemOpenModal(false);\r\n  },[]);\r\n  const getGeneralItem = async()=>{\r\n    if(!selectedId){}\r\n    else{\r\n      handleMenuClose();\r\n      const response = await axios.get(`${getUrl()}/general-item/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      \r\n      if(response.status === 200){\r\n        const data = response.data;\r\n        const unitId = unitList.filter((unit)=>{return data[0].unit === unit.name});\r\n        const stockAlert = data[0].stockalert ? \"Yes\" : \"No\";\r\n        openEditGeneralItemModal();\r\n        setEditUnitId(unitId[0].id);\r\n        setEditUnit(data[0].unit);\r\n        setEditName(data[0].name);\r\n        setEditCurrentStock(data[0].instock);\r\n        setEditStockAlert(stockAlert);\r\n        setEditStockAlertQuantity(data[0].stockalertquantity);\r\n        // setEditVatPercentage(Number(data.value));\r\n      }\r\n    }\r\n  }\r\n    const updateGeneralItem = useCallback(async()=>{\r\n      const stockAlert = editStockAlert === \"Yes\" ? true : false;\r\n      const data = {\r\n        name: editName,\r\n        unit: Number(editUnitId),\r\n        currentstock: Number(editCurrentStock),\r\n        stockalert:Boolean(stockAlert),\r\n        stockalertquantity:Number(editStockAlertQuantity)\r\n      }\r\n      const response = await axios.patch(`${getUrl()}/general-item/${selectedId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 200){\r\n        closeEditGeneralItemModal();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n        getProductGeneralItemList();\r\n      }\r\n    },[selectedId,editName,editUnitId,editCurrentStock,closeEditGeneralItemModal,editStockAlert,editStockAlertQuantity])\r\n    const removeGeneralItem = useCallback(async()=>{\r\n      handleMenuClose();\r\n      if(selectedId.length === 0) {\r\n        MySwal.fire({\r\n          icon:'error',\r\n          title:'Sorry!',\r\n          text: 'Maybe you forgot to select item'\r\n        })\r\n      }else{\r\n        MySwal.fire({\r\n          title: 'Do you want to remove?',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Remove',\r\n          cancelButtonText: `Keep`,\r\n        }).then(async(result) => {\r\n          if (result.isConfirmed) {\r\n            const response = await axios.delete(`${getUrl()}/general-item/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n  \r\n            if(response.status === 200){\r\n              MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Great...',\r\n                text: `${response.data}`,\r\n              });\r\n              getProductGeneralItemList();\r\n            }\r\n          } else if (result.isDenied) {}\r\n        })\r\n      }\r\n    },[selectedId]);\r\n    const [generalItemToBeIncreasedQuantity,setGeneralItemToBeIncreasedQuantity] = useState(0);\r\n    const [increaseGeneralItemOpenModal,setIncreaseGeneralItemOpenModal] = useState(false);\r\n    const openIncreaseGeneralItemModal = async()=>{\r\n        handleMenuClose();\r\n        setGeneralItemToBeIncreasedQuantity(0);\r\n        setIncreaseGeneralItemOpenModal(true);\r\n    }\r\n    const closeIncreaseGeneralItemModal = useCallback(()=>{\r\n      setIncreaseGeneralItemOpenModal(false);\r\n    },[]);\r\n    const addStock = useCallback(async()=>{\r\n      if(selectedId.length === 0) {\r\n        MySwal.fire({\r\n          icon:'error',\r\n          title:'Sorry!',\r\n          text: 'Maybe you forgot to select item'\r\n        })\r\n      }else{\r\n        closeIncreaseGeneralItemModal();\r\n        if(generalItemToBeIncreasedQuantity === 0){\r\n          MySwal.fire({\r\n            icon:'error',\r\n            title:'Sorry!',\r\n            text: 'Quantity must be more than 0'\r\n          })\r\n        }\r\n        else{\r\n          MySwal.fire({\r\n            title: 'Do you want to increase stock?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Increase',\r\n            cancelButtonText: `Keep`,\r\n          }).then(async(result) => {\r\n            if (result.isConfirmed) {\r\n              const data = {\r\n                reference: Number(selectedId),\r\n                quantity: Number(generalItemToBeIncreasedQuantity)\r\n              }\r\n              const response = await axios.post(`${getUrl()}/general-item/increase/stock`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n              \r\n              if(response.status === 201){\r\n                MySwal.fire({\r\n                  icon: 'success',\r\n                  title: 'Great...',\r\n                  text: `${response.data}`,\r\n                });\r\n                getProductGeneralItemList();\r\n              }\r\n            } else if (result.isDenied) {}\r\n          })\r\n        }\r\n      }\r\n    },[selectedId,generalItemToBeIncreasedQuantity,closeIncreaseGeneralItemModal]);\r\n    const navigate = useNavigate();\r\n    const goToStockAdjustment = async()=>{\r\n      navigate('/stock-adjustment/general-item');\r\n    }\r\n    const [searchQuery,setSearchQuery] = useState(\"\");\r\n    const [isToPrint,setIsToPrint] = useState(false);\r\n    const searchGeneralItems = async(query)=>{\r\n      if(query === \"\" || query.length === 0){\r\n        setFilteredGeneralItemList(generalItemList);\r\n        setSearchQuery(\"\");\r\n      }else{\r\n        const reg = new RegExp(query.split('').join('.*'), 'i');\r\n        const filteredGeneralItems = generalItemList.filter((item)=>item.name.toLowerCase().match(reg));\r\n        setFilteredGeneralItemList(filteredGeneralItems);\r\n        setSearchQuery(query);\r\n      }\r\n    }\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>General Items</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                {isToPrint === true?(<></>): localStorage.getItem(\"role\").toLowerCase() === \"admin\" || \r\n                localStorage.getItem(\"role\").toLowerCase() === \"accountant\" ?\r\n                (<>\r\n                  <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleMenuClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            {localStorage.getItem(\"role\").toLowerCase() === \"admin\" ? (\r\n                              <div>\r\n                                <MenuItem onClick={getGeneralItem}>Edit</MenuItem>\r\n                                <MenuItem onClick={removeGeneralItem}>Delete</MenuItem>\r\n                              </div>):(<MenuItem></MenuItem>)}\r\n                              {localStorage.getItem(\"role\").toLowerCase() === \"admin\" || \r\n                              localStorage.getItem(\"role\").toLowerCase() === \"accountant\"? (\r\n                              <div>\r\n                                <MenuItem onClick={openIncreaseGeneralItemModal}>Increase Stock</MenuItem>\r\n                                <MenuItem onClick={goToStockAdjustment}>Stock Adjustment</MenuItem>\r\n                              </div>):(<MenuItem></MenuItem>)}\r\n                            {/* edit product raw material */}\r\n                            <Modal\r\n                                  open={editGeneralItemOpenModal} \r\n                                  onClose={closeEditGeneralItemModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <EditGeneralItemModal\r\n                                    stockAlert={editStockAlert}\r\n                                    setStockAlert={setEditStockAlert}\r\n                                    stockAlertQuantity={editStockAlertQuantity}\r\n                                    setStockAlertQuantity={setEditStockAlertQuantity}\r\n                                    name={editName}\r\n                                    save={updateGeneralItem}\r\n                                    setName={setEditName}\r\n                                    currentStock={editCurrentStock}\r\n                                    setCurrentStock={setEditCurrentStock}\r\n                                    unitList={unitList}\r\n                                    unitName={editUnit}\r\n                                    setUnit={changeEditUnit}\r\n                                    closeModal={closeEditGeneralItemModal}/>\r\n                              </Modal>\r\n                            {/* increase product raw material */}\r\n                            <Modal\r\n                                  open={increaseGeneralItemOpenModal} \r\n                                  onClose={closeIncreaseGeneralItemModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <IncreaseGeneralItemQuantityModal\r\n                                    quantity={generalItemToBeIncreasedQuantity}\r\n                                    setQuantity={setGeneralItemToBeIncreasedQuantity}\r\n                                    save={addStock}\r\n                                    closeModal={closeIncreaseGeneralItemModal}/>\r\n                              </Modal>\r\n                        </Menu>\r\n                  \r\n                </Grid>\r\n                {/* Only admin can add product raw material */}\r\n                {localStorage.getItem(\"role\").toLowerCase()===\"admin\" ? (\r\n                  <Grid item lg={3} md={3}>\r\n                  <Button\r\n                      fullWidth\r\n                      onClick={openAddBrandModal}\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<AddBoxIcon/>}\r\n                      >\r\n                          Add\r\n                      </Button>\r\n                  \r\n                  {/* add product variation modal */}\r\n                  <Modal\r\n                        open={addBrandOpenModal}\r\n                        onClose={closeAddBrandModal}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                        <AddGeneralItemModal\r\n                          stockAlert={stockAlert}\r\n                          setStockAlert={setStockAlert}\r\n                          stockAlertQuantity={stockAlertQuantity}\r\n                          setStockAlertQuantity={setStockAlertQuantity}\r\n                          isError={error}\r\n                          errorMessage={errorMessage} \r\n                          name={name}\r\n                          save={postGeneralItem}\r\n                          setName={setName}\r\n                          currentStock={currentStock}\r\n                          setCurrentStock={setCurrentStock}\r\n                          unitList={unitList}\r\n                          unitName={unit}\r\n                          setUnit={changeUnit}\r\n                          closeModal={closeAddBrandModal}/>\r\n                    </Modal>\r\n                </Grid>\r\n                ):(<></>)}\r\n\r\n                </>):(<></>)}\r\n                {isToPrint === true?(\r\n                <Grid item lg={3} md={3}>\r\n                  <Button\r\n                      fullWidth\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      onClick={()=>setIsToPrint(false)}\r\n                      variant=\"contained\"\r\n                      >\r\n                          Table View\r\n                      </Button>\r\n                </Grid>):(\r\n                  <>\r\n                    <Grid item lg={3} md={3}>\r\n                      <Button\r\n                          fullWidth\r\n                          aria-controls=\"simple-menu\" \r\n                          aria-haspopup=\"true\"\r\n                          color=\"success\" \r\n                          variant=\"contained\"\r\n                          onClick={()=>setIsToPrint(true)}\r\n                          >\r\n                              Print Raw Material Stock\r\n                          </Button>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3}>\r\n                      <TextField\r\n                      label=\"Search General Items\"\r\n                      fullWidth\r\n                      value = {searchQuery}\r\n                      onChange={(event)=>{searchGeneralItems(event.target.value)}}\r\n                      variant=\"outlined\"/>\r\n                    </Grid>\r\n                  </>)}\r\n\r\n                  {isToPrint === true? \r\n                  (<Grid item lg={12} md={12}><PrintGeneralItemsStock data = {filteredGeneralItemList}/></Grid>) \r\n                  : generalItemList.length>0 ? (\r\n                  <Grid item lg={12} md={12}>\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                            <DataGrid\r\n                                  rows={filteredGeneralItemList}\r\n                                  columns={columns}\r\n                                  pageSize={5}\r\n                                  checkboxSelection\r\n                                  onRowSelected={onSelect}\r\n                              />\r\n                          </div>\r\n                  </Grid>):(<></>)}\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default GeneralItems;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport getUrl from '../../../HTTP/url';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst AddRawMaterialAdjustmentForm = ()=>{\r\n    const [rawMaterialList,setRawMaterialList] = useState([]);\r\n    const getRawMaterialList = async()=>{\r\n        const response = await axios.get(`${getUrl()}/raw-material/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n            setRawMaterialList(response.data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getRawMaterialList();\r\n    },[])\r\n    const [isError,setIsError] = useState(false);\r\n    const [errorMsg,setErrorMsg] = useState(\"\");\r\n    const [date,setDate] = useState(\"\");\r\n    const [quantity,setQuantity] = useState(0);\r\n    const [rawMaterial,setRawMaterial] = useState(\"\");\r\n    const [rawMaterialId,setRawMaterialId] = useState(null);\r\n    const [reason,setReason] = useState(\"\");\r\n    const changeRawMaterial = (value)=>{\r\n        const rawMaterial = rawMaterialList.filter((rawMaterial)=>{return value === rawMaterial.name});\r\n        setRawMaterial(value);\r\n        setRawMaterialId(rawMaterial[0].id);\r\n    }\r\n    const resetData = ()=>{\r\n        setIsError(false);\r\n        setErrorMsg(\"\");\r\n        setDate(\"\");\r\n        setQuantity(0);\r\n        setRawMaterial(\"\");\r\n        setRawMaterialId(null);\r\n        setReason(\"\");\r\n    }\r\n    const saveStockAdjustment = async()=>{\r\n        if(date === \"\" ||reason === \"\" || \r\n        rawMaterialId === null){\r\n            setIsError(true);\r\n            setErrorMsg(\"Please Fill All The fields\");\r\n        }else{\r\n            const data = {\r\n                date: date,\r\n                reason: reason,\r\n                quantity: Number(quantity),\r\n                rawmaterial:Number(rawMaterialId)\r\n            }\r\n            try{\r\n                const response = await axios.post(`${getUrl()}/raw-material/adjust/stock`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n                \r\n                if(response.status === 201){\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Great...',\r\n                        text: `${response.data}`,\r\n                    });\r\n                    resetData();\r\n                }\r\n            }\r\n            catch(error){\r\n                MySwal.fire({\r\n                    icon: 'error',\r\n                    text: `${error.message}`,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    {isError && \r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <Alert\r\n                            severity=\"error\">{errorMsg}</Alert>\r\n                        </Grid>\r\n                    </Grid>}\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                type=\"date\"\r\n                                fullWidth\r\n                                value={date}\r\n                                onChange={(event)=>setDate(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Date\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"number\"\r\n                                value={quantity}\r\n                                onChange={(event)=>setQuantity(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Total Quantity\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <FormControl \r\n                            variant=\"outlined\" \r\n                            fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Select Raw Material</InputLabel>\r\n                                <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"Select Raw Material\"\r\n                                value={rawMaterial}\r\n                                onChange={(event)=>changeRawMaterial(event.target.value)}\r\n                                >\r\n                                    {\r\n                                        rawMaterialList.map((rawMaterial)=>{\r\n                                            return (<MenuItem value={rawMaterial.name}>{rawMaterial.name}</MenuItem>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Divider/>\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                multiline\r\n                                rows={6}\r\n                                value={reason}\r\n                                onChange={(event)=>setReason(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Additional Reasons\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={saveStockAdjustment}\r\n                            variant=\"contained\">Save</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddRawMaterialAdjustmentForm;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddRawMaterialAdjustmentForm from \"../Components/AddRawMaterialStockAdjustment\";\r\nconst RawMaterialStockAdjustment = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Raw Material Stock Adjustment</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid item lg={12} md={12}>\r\n                    <AddRawMaterialAdjustmentForm/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RawMaterialStockAdjustment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport getUrl from '../../../HTTP/url';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst AddGeneralItemStockAdjustmentForm = ()=>{\r\n    const [generalItemList,setGeneralItemList] = useState([]);\r\n    const getGeneralItemList = async()=>{\r\n        const response = await axios.get(`${getUrl()}/general-item/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status === 200){\r\n            setGeneralItemList(response.data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getGeneralItemList();\r\n    },[])\r\n    const [isError,setIsError] = useState(false);\r\n    const [errorMsg,setErrorMsg] = useState(\"\");\r\n    const [date,setDate] = useState(\"\");\r\n    const [quantity,setQuantity] = useState(0);\r\n    const [generalItem,setGeneralItem] = useState(\"\");\r\n    const [generalItemId,setGeneralItemId] = useState(null);\r\n    const [reason,setReason] = useState(\"\");\r\n    const changeGeneralItem = (value)=>{\r\n        const generalItem = generalItemList.filter((generalItem)=>{return value === generalItem.name});\r\n        setGeneralItem(value);\r\n        setGeneralItemId(generalItem[0].id);\r\n    }\r\n    const resetData = ()=>{\r\n        setIsError(false);\r\n        setErrorMsg(\"\");\r\n        setDate(\"\");\r\n        setQuantity(0);\r\n        setGeneralItem(\"\");\r\n        setGeneralItemId(null);\r\n        setReason(\"\");\r\n    }\r\n    const saveStockAdjustment = async()=>{\r\n        if(date === \"\" ||reason === \"\" || \r\n        generalItemId === null){\r\n            setIsError(true);\r\n            setErrorMsg(\"Please Fill All The fields\");\r\n        }else{\r\n            const data = {\r\n                date: date,\r\n                reason: reason,\r\n                quantity: Number(quantity),\r\n                generalitem:Number(generalItemId)\r\n            }\r\n            try{\r\n                const response = await axios.post(`${getUrl()}/general-item/adjust/stock`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n                \r\n                if(response.status === 201){\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Great...',\r\n                        text: `${response.data}`,\r\n                    });\r\n                    resetData();\r\n                }\r\n            }\r\n            catch(error){\r\n                MySwal.fire({\r\n                    icon: 'error',\r\n                    text: `${error.message}`,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    {isError && \r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <Alert\r\n                            severity=\"error\">{errorMsg}</Alert>\r\n                        </Grid>\r\n                    </Grid>}\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                type=\"date\"\r\n                                fullWidth\r\n                                value={date}\r\n                                onChange={(event)=>setDate(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Date\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"number\"\r\n                                value={quantity}\r\n                                onChange={(event)=>setQuantity(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Total Quantity\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={4} md={4}>\r\n                            <FormControl \r\n                            variant=\"outlined\" \r\n                            fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Select General Item</InputLabel>\r\n                                <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"Select General Item\"\r\n                                value={generalItem}\r\n                                onChange={(event)=>changeGeneralItem(event.target.value)}\r\n                                >\r\n                                    {\r\n                                        generalItemList.map((generalItem)=>{\r\n                                            return (<MenuItem value={generalItem.name}>{generalItem.name}</MenuItem>)\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Divider/>\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                multiline\r\n                                rows={6}\r\n                                value={reason}\r\n                                onChange={(event)=>setReason(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Additional Reasons\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={saveStockAdjustment}\r\n                            variant=\"contained\">Save</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddGeneralItemStockAdjustmentForm;","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddGeneralItemStockAdjustmentForm from \"../Components/AddGeneralItemStockAdjustment\";\r\nconst GeneralItemStockAdjustment = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>General Item Stock Adjustment</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                <Grid item lg={12} md={12}>\r\n                    <AddGeneralItemStockAdjustmentForm/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default GeneralItemStockAdjustment;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nconst RawMaterialStockAdjustmentTable = () => {\r\n    const [stockAdjustmentList,setStockAdjustmentList] = useState([]);\r\n    const getStockAdjustmentList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/raw-material/stock/adjustment`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setStockAdjustmentList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getStockAdjustmentList();\r\n    },[]);\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'date',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'rawmaterial',\r\n        headerName: 'Raw Material',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'quantity',\r\n        headerName: 'Quantity',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'reason',\r\n        headerName: 'Reason',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>Raw Material Stock Adjustment</h2>\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={stockAdjustmentList}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        checkboxSelection\r\n                        onRowSelected={onSelect}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default RawMaterialStockAdjustmentTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport RawMaterialStockAdjustmentTable from \"../Components/Raw Material/RawMaterialStockAdjustment\";\r\n\r\nconst RawMaterialStockAdjustmentReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={12} md={12}>\r\n                    <RawMaterialStockAdjustmentTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RawMaterialStockAdjustmentReport;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nconst RawMaterialStockIncreaseReportTable = () => {\r\n    const [stockIncreaseReportList,setStockIncreaseReportList] = useState([]);\r\n    const getStockIncreaseReportList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/raw-material/add/stock/report`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setStockIncreaseReportList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getStockIncreaseReportList();\r\n    },[])\r\n    const columns = [\r\n      {\r\n        field: 'addingdate',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'rawmaterial',\r\n        headerName: 'Raw Material',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'quantity',\r\n        headerName: 'Added Quantity',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'previousStock',\r\n        headerName: 'Quantity Before Add',\r\n        width: 250,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'currentStock',\r\n        headerName: 'Quantity After Add',\r\n        width: 250,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      }\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>Raw Material Add Stock Report</h2>\r\n            </Grid>\r\n            {stockIncreaseReportList.length>0 && \r\n                <Grid item lg={12} md={12}>\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            rows={stockIncreaseReportList}\r\n                            columns={columns}\r\n                            pageSize={5}\r\n                            checkboxSelection\r\n                            onRowSelected={onSelect}\r\n                        />\r\n                    </div>\r\n                </Grid>}\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default RawMaterialStockIncreaseReportTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport RawMaterialStockIncreaseReportTable from \"../Components/Raw Material/RawMaterialIncreaseStockTable\";\r\n\r\nconst RawMaterialIncreaseStockReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={12} md={12}>\r\n                    <RawMaterialStockIncreaseReportTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RawMaterialIncreaseStockReport;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nconst GeneralItemStockAdjustmentTable = () => {\r\n    const [stockAdjustmentList,setStockAdjustmentList] = useState([]);\r\n    const getStockAdjustmentList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/general-item/stock/adjustment`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setStockAdjustmentList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getStockAdjustmentList();\r\n    },[])\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 120 },\r\n      {\r\n        field: 'date',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'rawmaterial',\r\n        headerName: 'Raw Material',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'quantity',\r\n        headerName: 'Quantity',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'reason',\r\n        headerName: 'Reason',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>General Item Stock Adjustment</h2>\r\n            </Grid>\r\n            {stockAdjustmentList.length>0 && \r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={stockAdjustmentList}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        checkboxSelection\r\n                        onRowSelected={onSelect}\r\n                    />\r\n                </div>\r\n            </Grid>}\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default GeneralItemStockAdjustmentTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport GeneralItemStockAdjustmentTable from \"../Components/GeneralItem/GeneralItemStockAdjustmentTable\";\r\n\r\nconst GeneralItemStockAdjustmentReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={12} md={12}>\r\n                    <GeneralItemStockAdjustmentTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default GeneralItemStockAdjustmentReport;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nconst GeneralItemStockIncreaseReportTable = () => {\r\n    const [stockIncreaseReportList,setStockIncreaseReportList] = useState([]);\r\n    const getStockIncreaseReportList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/general-item/add/stock/report`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setStockIncreaseReportList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getStockIncreaseReportList();\r\n    },[])\r\n    const columns = [\r\n      {\r\n        field: 'addingdate',\r\n        headerName: 'Date',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'generalitem',\r\n        headerName: 'General Item',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'previousStock',\r\n        headerName: 'Quantity Before Add',\r\n        width: 250,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'addedquantity',\r\n        headerName: 'Added Quantity',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'currentStock',\r\n        headerName: 'Quantity After Add',\r\n        width: 250,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      }\r\n    ];\r\n  const onSelect = (event)=>{\r\n    const {data} = event;\r\n    const {id} = data;\r\n    setSelectedId(id);\r\n  }\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  return (\r\n        <Card>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid \r\n            style={{ marginBottom: \"15px\" }}\r\n            item \r\n            lg={12} md={12}>\r\n                <h2>General Item Add Stock Report</h2>\r\n            </Grid>\r\n            {stockIncreaseReportList.length>0 && \r\n                <Grid item lg={12} md={12}>\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            rows={stockIncreaseReportList}\r\n                            columns={columns}\r\n                            pageSize={5}\r\n                            checkboxSelection\r\n                            onRowSelected={onSelect}\r\n                        />\r\n                    </div>\r\n                </Grid>}\r\n        </Grid>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default GeneralItemStockIncreaseReportTable;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport GeneralItemStockIncreaseReportTable from \"../Components/GeneralItem/GeneralItemIncreaseStockReportTable\";\r\n\r\nconst GeneralItemIncreaseStockAdjustmentReport = () => {\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={12} md={12}>\r\n                    <GeneralItemStockIncreaseReportTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default GeneralItemIncreaseStockAdjustmentReport;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {Card,CardContent,Divider,Grid, Button,Avatar } from \"@material-ui/core\";\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nconst MySwal = withReactContent(Swal);\r\nconst SalesDetails = () => {\r\n    const navigate = useNavigate();\r\n    const componentRef = useRef();\r\n    const {id} = useParams();\r\n    const [order,setOrder] = useState([]);\r\n    const getOrderDetails = async()=>{\r\n        try{\r\n            const response = await axios.get(`${getUrl()}/order/detail/${id}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n            if(response.status===200){\r\n                const {data} = response;\r\n                setOrder(data);\r\n            }\r\n        }\r\n        catch(error){   \r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Opps...',\r\n                text: `Sorry something occured!`,\r\n              });\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getOrderDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n    const goBack = async()=>{\r\n        navigate(`/report/sales`);\r\n    }\r\n  return (\r\n        <>\r\n            {order && order.length===0 ?(<></>):( \r\n            <Grid container style={{ height: \"100vh\",overflowY:\"auto\" }}>\r\n            <Grid item lg={12} md={12}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid \r\n                      container\r\n                      direction=\"row\"\r\n                      alignItems=\"center\" \r\n                      spacing=\"2\">\r\n                      <Grid item lg={3} md={3}>\r\n                        <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={goBack}\r\n                        fullWidth>Return</Button>\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6}>\r\n                        <h1>Order Details</h1>\r\n                      </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider/>\r\n                <CardContent \r\n                ref={componentRef} \r\n                style={{ fontSize:\"10px\",margin:\"0 auto\",width:\"60mm\" }}>\r\n                    <div><Avatar \r\n                          style={{ margin:\"0 auto\",width:\"20mm\",height:\"10mm\",\r\n                          backgroundPosition:\"center\",backgroundRepeat:\"no-repeat\",\r\n                          backgroundSize:\"cover\" }} \r\n                          src=\"https://res.cloudinary.com/chiranswe/image/upload/v1633716259/desha_logo-removebg-preview_xf8sec.png\"/>\r\n                    </div>\r\n                    <div>\r\n                          <div style={{ textAlign:\"center\" }}>\r\n                              <span>DESHA Tower, Upazila Moor</span><br />\r\n                              <span>Kushtia-Jhenaidah Highway, Kushtia</span><br />\r\n                              <span>Mobile No: 01720510368,01720510311</span><br />\r\n                              <span>Mushak: 6.3</span><br />\r\n                              <span>Bin :002535974-0903</span>\r\n                          </div>\r\n                        <div style={{ display:\"flex\" }}>\r\n                            <span style={{ width:\"30%\",height:\"2mm\",alignItem:\"center\",background:\"rgba(0,0,0,0.1)\" }}></span>\r\n                            <span style={{ width:\"40%\",textAlign:\"center\"}}>\r\n                              Order Bill\r\n                            </span>\r\n                            <span style={{ width:\"30%\",height:\"2mm\",alignItem:\"center\",background:\"rgba(0,0,0,0.1)\" }}></span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Table: {order.table}</span><br />\r\n                            <span>Waiter: {order.waiter}</span><br />\r\n                            <span>Customer: {order.customer}</span><br />\r\n                            <span>Phone: {order.customerPhone}</span>\r\n                        </div>\r\n                        <div style={{ display:\"flex\",marginTop:\"0\" }}>\r\n                            <div style={{ width:\"70%\"}}>\r\n                              <span>Date: {order.orderDate}</span><br />\r\n                              <span>Number Of Guests: {order.guestNumber}</span><br />\r\n                              <span>Chalan No: 1776</span><br />\r\n                              <span>NRB Invoice No: 002121XMYVETY086</span><br />\r\n                              <span style={{ fontSize:\"13px\" }}><strong>{order.paymentStatus}</strong></span>\r\n                            </div>\r\n                            <div style={{ width:\"30%\",float:\"right\"}}>\r\n                                <span>Time: {order.orderTime}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\",\r\n                    borderTop:\"2px dotted rgba(0,0,0,0.3)\", borderBottom:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                          <span style={{ width:\"40%\" }}>Item Name</span><br />\r\n                          <span style={{ width:\"20%\" }}>-Qty</span><br />\r\n                          <span style={{ width:\"20%\" }}>Price</span><br />\r\n                          <span style={{ width:\"20%\" }}>T.Price</span>\r\n                    </div>\r\n                    <div style={{borderBottom:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                        {order.items.map((item)=>{\r\n                            return (\r\n                                <div style={{ display:\"flex\" }}>\r\n                                      <span style={{ width:\"40%\" }}>{item.product}</span><br />\r\n                                      <span style={{ width:\"20%\" }}>-{item.quantity}</span><br />\r\n                                      <span style={{ width:\"20%\" }}>{item.price}</span><br />\r\n                                      <span style={{ width:\"20%\" }}>{item.subtotal}</span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                      <div style={{ display: \"flex\",margin:\"1px 0\",\r\n                      borderBottom:\"2px dotted rgba(0,0,0,0.3)\",borderTop:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                          <span style={{ width:\"80%\" }}><strong>Gross Total</strong></span>\r\n                          <span style={{ width:\"20%\" }}>{order.grossTotal}</span>\r\n                      </div>\r\n                      <div style={{margin:\"1px 0\",\r\n                      borderBottom:\"2px dotted rgba(0,0,0,0.3)\",borderTop:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                          <div style={{ display:\"flex\" }}>\r\n                              <span style={{ width:\"80%\" }}><strong>-Vat({order.vat}%)</strong></span>\r\n                              <span style={{ width:\"20%\" }}>{order.vatAmount}</span>\r\n                          </div>\r\n                      </div>\r\n                      <div style={{margin:\"1px 0\",\r\n                      borderBottom:\"2px dotted rgba(0,0,0,0.3)\",borderTop:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                          <div style={{ display:\"flex\" }}>\r\n                              <span style={{ width:\"80%\" }}><strong>NET TOTAL</strong></span>\r\n                              <span style={{ width:\"20%\" }}>{order.grandTotal}</span>\r\n                          </div>\r\n                          <div style={{ display:\"flex\" }}>\r\n                              <span style={{ width:\"80%\" }}><strong>TOTAL PAID</strong></span>\r\n                              <span style={{ width:\"20%\" }}>{order.paidAmount}</span>\r\n                          </div>\r\n                          <div style={{ display:\"flex\" }}>\r\n                              <span style={{ width:\"80%\" }}><strong>REMAINING AMOUNT</strong></span>\r\n                              <span style={{ width:\"20%\" }}>{order.dueAmount}</span>\r\n                          </div>\r\n                      </div>\r\n                    <div style={{ margin:\"1px 0\",borderTop:\"2px dotted rgba(0,0,0,0.3)\" }}>\r\n                        <p>THANK YOU, COME AGAIN</p>\r\n                        <p>Powered by: somikoron it services, www.somikoronits.com</p>\r\n                    </div>\r\n                </CardContent>\r\n                <Divider/>\r\n                <CardContent>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\" \r\n                    spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <ReactToPrint\r\n                            trigger={() => <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                endIcon={<SaveOutlinedIcon/>}\r\n                              >\r\n                                Print\r\n                              </Button>}\r\n                            content={() => componentRef.current}\r\n                        />\r\n                          \r\n                      </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n            </Grid>\r\n          </Grid>)}\r\n        </>\r\n  );\r\n};\r\n\r\nexport default SalesDetails;\r\n","import { Card,Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst ItemsReportFilter = ({getItemListByMonth,getItemListByDate,getItemListByYear})=>{\r\n    const [month,setMonth] = useState(\"\");\r\n    const [year,setYear] = useState(\"\");\r\n    const changeMonth = async(event)=>{\r\n        const {value} = event.target;\r\n        const values = value.split(\"-\");\r\n        setMonth(value);\r\n        const monthName = months[values[1]-1];\r\n        setYear(\"\");\r\n        setDate(\"\");\r\n        getItemListByMonth(monthName,values[0]);\r\n    }\r\n    const changeYear = async(event)=>{\r\n        const {value} = event.target;\r\n        setYear(value);\r\n        setMonth(\"\");\r\n        setDate(\"\");\r\n        getItemListByYear(value);\r\n    }\r\n    const [date,setDate] = useState(\"\");\r\n    const getRecordByDate = (value)=>{\r\n        setDate(value);\r\n        const dates = value.split(\"-\");\r\n        setMonth(\"\");\r\n        setYear(\"\");\r\n        getItemListByDate(months[dates[1]-1],dates[0],dates[2]);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                year={year}\r\n                                onChange={changeYear}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Year\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"1\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"month\"\r\n                                    value={month}\r\n                                    onChange={changeMonth}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Month\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"date\"\r\n                                    value={date}\r\n                                    onChange={(event)=>getRecordByDate(event.target.value)}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Date\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsReportFilter;","import React from \"react\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nconst ItemsReportTable = ({data}) => {\r\n    const columns = [\r\n      {\r\n        field: 'totalquantitysold',\r\n        headerName: 'Total Item Sold',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'totalamount',\r\n        headerName: 'Total Sold Amount(BDT)',\r\n        width: 250,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Product Name',\r\n        width: 220,\r\n        editable: true,\r\n      },\r\n    ];\r\n  return (\r\n      <Card>\r\n          <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: \"100%\",overflowX:\"auto\",marginTop:\"15px\" }}>\r\n                    <DataGrid\r\n                        rows={data}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default ItemsReportTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {  Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport ItemsReportFilter from \"../Components/Items Report/ItemsReportFilter\";\r\nimport ItemsReportTable from \"../Components/Items Report/ItemsReportTable\";\r\nconst ItemsReport = () => {\r\n    const [itemList,setItemList] = useState([]);\r\n    const getItemListByMonth = async(month=\"\",year=\"\")=>{\r\n      const response = await axios.get(`${getUrl()}/order/items/by/month?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setItemList(data);\r\n      }\r\n    }\r\n    const getItemListByDate = async(month,year,day)=>{\r\n        const response = await axios.get(`${getUrl()}/order/items/by/date?month=${month}&year=${year}&day=${day}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setItemList(data);\r\n        }\r\n    }\r\n    const getItemListByYear = async(year)=>{\r\n        if(year === \"\") year = new Date().getFullYear();\r\n        const response = await axios.get(`${getUrl()}/order/items/by/year?year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setItemList(data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getItemListByMonth();\r\n    },[]);\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Items Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <ItemsReportFilter \r\n                        getItemListByYear = {getItemListByYear}\r\n                        getItemListByDate={getItemListByDate}\r\n                        getItemListByMonth = {getItemListByMonth}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    {itemList.length>0 ?\r\n                    (<ItemsReportTable\r\n                    data={itemList}/>):(<p>Sorry! There is no data</p>)}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ItemsReport;\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, FormControl, InputLabel, Select,MenuItem, Alert } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst AddProductBrandModal = ({closeModal,unitList,setUnit,\r\n                              unitName,name,setName,currentStock,\r\n                              setCurrentStock,save,isError,\r\n                              errorMessage,stockAlert,\r\n                              setStockAlert,\r\n                              stockAlertQuantity,\r\n                              setStockAlertQuantity}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Add Product Raw Materials</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  {isError?\r\n                    (<Grid item lg={12} md={12} style={{ marginBottom:\"15px\" }}>\r\n                          <Alert severity=\"warning\" variant=\"filled\">\r\n                              {errorMessage}\r\n                          </Alert>\r\n                      </Grid>):(<></>)}\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={name}\r\n                            onChange={(event)=>setName(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Unit</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            value={unitName}\r\n                            onChange={setUnit}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem> */}\r\n                            {unitList.map((unit)=>{\r\n                              return (<MenuItem key={unit.id} value={unit.name}>{unit.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={currentStock}\r\n                            onChange={(event)=>setCurrentStock(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Current Stock\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Stock Alert</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={stockAlert}\r\n                            onChange={(event)=>setStockAlert(event.target.value)}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"No\">No</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={stockAlertQuantity}\r\n                            onChange={(event)=>setStockAlertQuantity(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Stock Alert Quantity\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddProductBrandModal);\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button, FormControl, InputLabel, Select,MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst EditRawMaterialModal = ({closeModal,unitList,setUnit,\r\n                              unitName,name,setName,currentStock,\r\n                              setCurrentStock,save,stockAlert,\r\n                              setStockAlert,\r\n                              stockAlertQuantity,\r\n                              setStockAlertQuantity}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Edit Product Raw Materials</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={name}\r\n                            onChange={(event)=>setName(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Name\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Select Unit</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={unitName}\r\n                            onChange={setUnit}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem> */}\r\n                            {unitList.map((unit)=>{\r\n                              return (<MenuItem key={unit.key} value={unit.name}>{unit.name}</MenuItem>)\r\n                            })}\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={currentStock}\r\n                            onChange={(event)=>setCurrentStock(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Current Stock\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <FormControl \r\n                        fullWidth\r\n                        variant=\"outlined\">\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Stock Alert</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={stockAlert}\r\n                            onChange={(event)=>setStockAlert(event.target.value)}\r\n                            label=\"Select Unit\"\r\n                          >\r\n                            <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"No\">No</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                     </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                      <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            value={stockAlertQuantity}\r\n                            onChange={(event)=>setStockAlertQuantity(event.target.value)}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            label=\"Stock Alert Quantity\"\r\n                            />\r\n                     </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditRawMaterialModal);\r\n","import React from \"react\";\r\nimport {Card,CardContent,Divider,Grid,TextField, Button} from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nconst IncreaseRawMaterialQuantityModal = ({closeModal,quantity,setQuantity,save}) => {\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item lg={3} md={3}/>\r\n        <Grid item lg={6} md={6}>\r\n        <Card>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                  <Grid item lg={6} md={6}>\r\n                    <h1>Increase Product Raw Materials</h1>\r\n                  </Grid>\r\n                  <Grid item lg={3} md={3}/>\r\n                  <Grid item lg={2} md={2}/>\r\n                  <Grid item lg={1} md={1}>\r\n                    <h5><CloseIcon color=\"error\" onClick={closeModal} style={{cursor:\"pointer\"}}/></h5>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\" \r\n                  spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={quantity}\r\n                            type=\"number\"\r\n                            onChange={(event)=>setQuantity(event.target.value)}\r\n                            variant=\"outlined\"\r\n                            label=\"Add Quantity\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardContent>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                  <Grid item lg={12} md={12}>\r\n                      <Button\r\n                        onClick={save}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        endIcon={<SaveOutlinedIcon/>}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={3}/>\r\n      </Grid>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default React.memo(IncreaseRawMaterialQuantityModal);\r\n","import React, { useRef } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst PrintRawMaterialStock = ({data}) => {\r\n    const componentRef = useRef();\r\n  return (\r\n      <Card>\r\n        <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid item lg={6} md={6}>\r\n            <CSVLink data={data} style={{ textDecoration:\"none\" }}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    // onClick={exportToExcel}\r\n                    >\r\n                        Download as excel\r\n                    </Button>\r\n            </CSVLink>\r\n            </Grid>\r\n            <Grid item lg={6} md={6}>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        // endIcon={<SaveOutlinedIcon/>}\r\n                        >\r\n                        Print\r\n                        </Button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n            </Grid>\r\n            <Grid \r\n            item lg={12} md={12}>\r\n                <Grid \r\n                style={{ marginTop: \"15px\" }}\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <div ref={componentRef}>\r\n                            <table border=\"1px\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Serial</td>\r\n                                        <td>Raw Material</td>\r\n                                        <td>Current Stock</td>\r\n                                        <td>Unit</td>\r\n                                    </tr>\r\n                                    {data.map((rawmaterial,index)=>{\r\n                                        return (\r\n                                        <tr key={rawmaterial.id}>\r\n                                            <td>{Number(index)+1}</td>\r\n                                            <td>{rawmaterial.name}</td>\r\n                                            <td>{rawmaterial.instock}</td>\r\n                                            <td>{rawmaterial.unit}</td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default PrintRawMaterialStock;\r\n","import React,{useCallback, useEffect, useState} from \"react\";\r\nimport { Grid,Button,MenuItem,Menu, TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Modal } from \"@material-ui/core\";\r\nimport AddProductBrandModal from \"../Components/Sub-Components/AddProductBrandModal\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport EditRawMaterialModal from \"../Components/Sub-Components/Edit.Raw.Material.Modal\";\r\nimport IncreaseRawMaterialQuantityModal from \"../Components/Sub-Components/IncreaseRawMaterialQuantityModal\";\r\nimport { useNavigate } from \"react-router\";\r\nimport PrintRawMaterialStock from \"../Components/Sub-Components/PrintRawMaterialStock\";\r\nconst MySwal = withReactContent(Swal)\r\nconst RawMaterials = () => {\r\n    const columns = [\r\n      {\r\n        field: 'name',\r\n        headerName: 'Raw Material',\r\n        width: 180,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'instock',\r\n        headerName: 'Current Stock',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n      {\r\n        field: 'unit',\r\n        headerName: 'Unit',\r\n        width: 190,\r\n        editable: true,\r\n      },\r\n    ];\r\n    const [rawMaterialList,setRawMaterialList] = useState([]);\r\n    const [filteredRawMaterialList,setFilteredRawMaterialList] = useState([]);\r\n    const [unitList,setUnitList] = useState([]);\r\n    const getProductRawMaterialList = async()=>{\r\n      const response = await axios.get(`${getUrl()}/raw-material/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setRawMaterialList(data);\r\n        setFilteredRawMaterialList(data);\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      getProductRawMaterialList();\r\n      getUnitList();\r\n    },[])\r\n  const onSelect = (event)=>{\r\n      const {data} = event;\r\n      const {id} = data;\r\n      setSelectedId(id);\r\n  }\r\n  const [selectedId,setSelectedId] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const [addBrandOpenModal,setAddBrandOpenModal] = useState(false);\r\n  const getUnitList = async()=>{\r\n    const response = await axios.get(`${getUrl()}/unit/list`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status===200){\r\n        const {data} = response;\r\n        setUnitList(data);\r\n      }\r\n  }\r\n  const openAddBrandModal = async()=>{\r\n    setAddBrandOpenModal(true);\r\n    setError(false);\r\n    setUnit(\"\");\r\n    setName(\"\");\r\n    setCurrentStock(0);\r\n    setStockAlert(\"\")\r\n    setStockAlertQuantity(0);\r\n  }\r\n  const closeAddBrandModal = useCallback(()=>{\r\n    setAddBrandOpenModal(false);\r\n  },[]);\r\n  const [unit,setUnit] = useState(\"\");\r\n  const [unitId,setUnitId] = useState(null);\r\n  const [name,setName] = useState(\"\");\r\n  const [currentStock,setCurrentStock] = useState(0);\r\n  const [stockAlert,setStockAlert] = useState(\"\");\r\n  const [stockAlertQuantity,setStockAlertQuantity] = useState(0);\r\n  const changeUnit = useCallback((event)=>{\r\n    const value = event.target.value;\r\n    const unitId = unitList.filter((unit)=>{return value === unit.name});\r\n    setUnitId(unitId[0].id);\r\n    setUnit(value);\r\n  },[unitList]);\r\n  const [error,setError] = useState(false);\r\n  const [errorMessage,setErrorMessage] = useState(\"\");\r\n  const postRawMaterial = async ()=>{\r\n    if(unitId === null || name === \"\" || currentStock === 0 ){\r\n      setError(true);\r\n      setErrorMessage('Please Fill All The fields');\r\n    }\r\n    else{\r\n      setError(false);\r\n      const isStockAlert = stockAlert === \"\" ? false : stockAlert === \"Yes\" ? true : false;\r\n      const data = {\r\n          name: name,\r\n          unit: Number(unitId),\r\n          currentstock:Number(currentStock),\r\n          stockalert: Boolean(isStockAlert),\r\n          stockalertquantity:Number(stockAlertQuantity)\r\n      }\r\n      const response = await axios.post(`${getUrl()}/raw-material`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 201){\r\n        closeAddBrandModal();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n        setUnit(\"\");\r\n        setName(\"\");\r\n        setUnitId(null);\r\n        setCurrentStock(0);\r\n        setStockAlert(\"\")\r\n        setStockAlertQuantity(0);\r\n        getProductRawMaterialList();\r\n        closeAddBrandModal();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  };\r\n  const [editUnit,setEditUnit] = useState(\"\");\r\n  const [editUnitId,setEditUnitId] = useState(null);\r\n  const [editName,setEditName] = useState(\"\");\r\n  const [editCurrentStock,setEditCurrentStock] = useState(0);\r\n  const [editStockAlert,setEditStockAlert] = useState(\"\");\r\n  const [editStockAlertQuantity,setEditStockAlertQuantity] = useState(0);\r\n  const changeEditUnit = useCallback((event)=>{\r\n    const value = event.target.value;\r\n    const unitId = unitList.filter((unit)=>{return value === unit.name});\r\n    setEditUnitId(unitId[0].id);\r\n    setEditUnit(value);\r\n  },[unitList]);\r\n  const [editRawMaterialOpenModal,setEditRawMaterialOpenModal] = useState(false);\r\n  const openEditRawMaterialModal = async()=>{\r\n      setEditRawMaterialOpenModal(true);\r\n  }\r\n  const closeEditRawMaterialModal = useCallback(()=>{\r\n    setEditRawMaterialOpenModal(false);\r\n  },[]);\r\n  const getRawMaterial = async()=>{\r\n    if(!selectedId){}\r\n    else{\r\n      handleMenuClose();\r\n      const response = await axios.get(`${getUrl()}/raw-material/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      \r\n      if(response.status === 200){\r\n        const data = response.data;\r\n        const unitId = unitList.filter((unit)=>{return data[0].unit === unit.name});\r\n        const stockAlert = data[0].stockalert ? \"Yes\" : \"No\";\r\n        openEditRawMaterialModal();\r\n        setEditUnitId(unitId[0].id);\r\n        setEditUnit(data[0].unit);\r\n        setEditName(data[0].rawmaterial);\r\n        setEditCurrentStock(data[0].instock);\r\n        setEditStockAlert(stockAlert);\r\n        setEditStockAlertQuantity(data[0].stockalertquantity);\r\n        // setEditVatPercentage(Number(data.value));\r\n      }\r\n    }\r\n  }\r\n    const updateRawMaterial = useCallback(async()=>{\r\n      const stockAlert = editStockAlert === \"Yes\" ? true : false;\r\n      const data = {\r\n        name: editName,\r\n        unit: Number(editUnitId),\r\n        currentstock: Number(editCurrentStock),\r\n        stockalert:Boolean(stockAlert),\r\n        stockalertquantity:Number(editStockAlertQuantity)\r\n      }\r\n      const response = await axios.patch(`${getUrl()}/raw-material/${selectedId}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n      if(response.status === 200){\r\n        closeEditRawMaterialModal();\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Great...',\r\n          text: `${response.data}`,\r\n        });\r\n        getProductRawMaterialList();\r\n      }\r\n    },[selectedId,editName,editUnitId,editCurrentStock,closeEditRawMaterialModal,editStockAlert,editStockAlertQuantity])\r\n    const removeRawMaterial = useCallback(async()=>{\r\n      handleMenuClose();\r\n      if(selectedId.length === 0) {\r\n        MySwal.fire({\r\n          icon:'error',\r\n          title:'Sorry!',\r\n          text: 'Maybe you forgot to select item'\r\n        })\r\n      }else{\r\n        MySwal.fire({\r\n          title: 'Do you want to remove?',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Remove',\r\n          cancelButtonText: `Keep`,\r\n        }).then(async(result) => {\r\n          if (result.isConfirmed) {\r\n            const response = await axios.delete(`${getUrl()}/raw-material/${selectedId}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n  \r\n            if(response.status === 200){\r\n              MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Great...',\r\n                text: `${response.data}`,\r\n              });\r\n              getProductRawMaterialList();\r\n            }\r\n          } else if (result.isDenied) {}\r\n        })\r\n      }\r\n    },[selectedId]);\r\n    const [rawMaterialToBeIncreasedQuantity,setRawMaterialToBeIncreasedQuantity] = useState(0);\r\n    const [increaseRawMaterialOpenModal,setIncreaseRawMaterialOpenModal] = useState(false);\r\n    const openIncreaseRawMaterialModal = async()=>{\r\n        handleMenuClose();\r\n        setRawMaterialToBeIncreasedQuantity(0);\r\n        setIncreaseRawMaterialOpenModal(true);\r\n    }\r\n    const closeIncreaseRawMaterialModal = useCallback(()=>{\r\n      setIncreaseRawMaterialOpenModal(false);\r\n    },[]);\r\n    const addStock = useCallback(async()=>{\r\n      if(selectedId.length === 0) {\r\n        MySwal.fire({\r\n          icon:'error',\r\n          title:'Sorry!',\r\n          text: 'Maybe you forgot to select item'\r\n        })\r\n      }else{\r\n        closeIncreaseRawMaterialModal();\r\n        if(rawMaterialToBeIncreasedQuantity === 0){\r\n          MySwal.fire({\r\n            icon:'error',\r\n            title:'Sorry!',\r\n            text: 'Quantity must be more than 0'\r\n          })\r\n        }\r\n        else{\r\n          MySwal.fire({\r\n            title: 'Do you want to increase stock?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Increase',\r\n            cancelButtonText: `Keep`,\r\n          }).then(async(result) => {\r\n            if (result.isConfirmed) {\r\n              const data = {\r\n                reference: Number(selectedId),\r\n                quantity: Number(rawMaterialToBeIncreasedQuantity)\r\n              }\r\n              const response = await axios.post(`${getUrl()}/raw-material/add/stock`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n              \r\n              if(response.status === 201){\r\n                MySwal.fire({\r\n                  icon: 'success',\r\n                  title: 'Great...',\r\n                  text: `${response.data}`,\r\n                });\r\n                getProductRawMaterialList();\r\n              }\r\n            } else if (result.isDenied) {}\r\n          })\r\n        }\r\n      }\r\n    },[selectedId,rawMaterialToBeIncreasedQuantity,closeIncreaseRawMaterialModal]);\r\n    const navigate = useNavigate();\r\n    const goToStockAdjustment = async()=>{\r\n      navigate('/stock-adjustment/raw-material');\r\n    }\r\n    const [searchQuery,setSearchQuery] = useState(\"\");\r\n    const [isToPrint,setIsToPrint] = useState(false);\r\n    const searchRawMaterials = async(query)=>{\r\n      if(query === \"\" || query.length === 0){\r\n        setFilteredRawMaterialList(rawMaterialList);\r\n        setSearchQuery(\"\");\r\n      }else{\r\n        const reg = new RegExp(query.split('').join('.*'), 'i');\r\n        const filteredRawMaterials = rawMaterialList.filter((rawmaterial)=>rawmaterial.name.toLowerCase().match(reg));\r\n        setFilteredRawMaterialList(filteredRawMaterials);\r\n        setSearchQuery(query);\r\n      }\r\n    } \r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Product Raw Materials</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            spacing=\"2\">\r\n                {isToPrint === true?(<></>): localStorage.getItem(\"role\").toLowerCase() === \"admin\" || \r\n                localStorage.getItem(\"role\").toLowerCase() === \"accountant\" ?\r\n                (<>\r\n                  <Grid  item lg={3} md={3}>\r\n                    <Button\r\n                    aria-controls=\"simple-menu\" \r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMenu}\r\n                    fullWidth\r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    startIcon={<EditIcon/>}\r\n                    >\r\n                        Actions\r\n                    </Button>\r\n                        <Menu\r\n                            // style={{ width: \"550px\" }}\r\n                            id=\"dd-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleMenuClose}\r\n                            anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n                            transformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n                            >\r\n                            {/* Only admin can edit or remove raw material information */}\r\n                            {localStorage.getItem(\"role\").toLowerCase() === \"admin\" ? (\r\n                              <div>\r\n                                <MenuItem onClick={getRawMaterial}>Edit</MenuItem>\r\n                                <MenuItem onClick={removeRawMaterial}>Delete</MenuItem>\r\n                              </div>):(<div></div>)}\r\n\r\n                              {/* Only admin and accountant is allowed to increase or adjust stock */}\r\n                              {localStorage.getItem(\"role\").toLowerCase() === \"admin\" || \r\n                              localStorage.getItem(\"role\").toLowerCase() === \"accountant\"? (\r\n                              <div>\r\n                                <MenuItem onClick={openIncreaseRawMaterialModal}>Increase Stock</MenuItem>\r\n                                <MenuItem onClick={goToStockAdjustment}>Stock Adjustment</MenuItem>\r\n                              </div>):(<div></div>)}\r\n                            {/* edit product raw material */}\r\n                            <Modal\r\n                                  open={editRawMaterialOpenModal} \r\n                                  onClose={closeEditRawMaterialModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <EditRawMaterialModal\r\n                                    stockAlert={editStockAlert}\r\n                                    setStockAlert={setEditStockAlert}\r\n                                    stockAlertQuantity={editStockAlertQuantity}\r\n                                    setStockAlertQuantity={setEditStockAlertQuantity}\r\n                                    name={editName}\r\n                                    save={updateRawMaterial}\r\n                                    setName={setEditName}\r\n                                    currentStock={editCurrentStock}\r\n                                    setCurrentStock={setEditCurrentStock}\r\n                                    unitList={unitList}\r\n                                    unitName={editUnit}\r\n                                    setUnit={changeEditUnit}\r\n                                    closeModal={closeEditRawMaterialModal}/>\r\n                              </Modal>\r\n                            {/* increase product raw material */}\r\n                            <Modal\r\n                                  open={increaseRawMaterialOpenModal} \r\n                                  onClose={closeIncreaseRawMaterialModal}\r\n                                  aria-labelledby=\"simple-modal-title\"\r\n                                  aria-describedby=\"simple-modal-description\"\r\n                                  >\r\n                                  <IncreaseRawMaterialQuantityModal\r\n                                    quantity={rawMaterialToBeIncreasedQuantity}\r\n                                    setQuantity={setRawMaterialToBeIncreasedQuantity}\r\n                                    save={addStock}\r\n                                    closeModal={closeIncreaseRawMaterialModal}/>\r\n                              </Modal>\r\n                        </Menu>\r\n                  \r\n                </Grid>\r\n                {/* Only admin can add product raw material */}\r\n                {localStorage.getItem(\"role\").toLowerCase()===\"admin\" ? (\r\n                <Grid item lg={3} md={3}>\r\n                  <Button\r\n                      fullWidth\r\n                      onClick={openAddBrandModal}\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      variant=\"contained\"\r\n                      startIcon={<AddBoxIcon/>}\r\n                      >\r\n                          Add\r\n                      </Button>\r\n                  \r\n                  {/* add product variation modal */}\r\n                  <Modal\r\n                        open={addBrandOpenModal}\r\n                        onClose={closeAddBrandModal}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        >\r\n                        <AddProductBrandModal\r\n                          stockAlert={stockAlert}\r\n                          setStockAlert={setStockAlert}\r\n                          stockAlertQuantity={stockAlertQuantity}\r\n                          setStockAlertQuantity={setStockAlertQuantity}\r\n                          isError={error}\r\n                          errorMessage={errorMessage} \r\n                          name={name}\r\n                          save={postRawMaterial}\r\n                          setName={setName}\r\n                          currentStock={currentStock}\r\n                          setCurrentStock={setCurrentStock}\r\n                          unitList={unitList}\r\n                          unitName={unit}\r\n                          setUnit={changeUnit}\r\n                          closeModal={closeAddBrandModal}/>\r\n                    </Modal>\r\n                </Grid>):(<></>)}\r\n                </>):(<></>)}\r\n                {isToPrint === true?(\r\n                <Grid item lg={3} md={3}>\r\n                  <Button\r\n                      fullWidth\r\n                      aria-controls=\"simple-menu\" \r\n                      aria-haspopup=\"true\"\r\n                      color=\"success\" \r\n                      onClick={()=>setIsToPrint(false)}\r\n                      variant=\"contained\"\r\n                      >\r\n                          Table View\r\n                      </Button>\r\n                </Grid>):(\r\n                  <>\r\n                    <Grid item lg={3} md={3}>\r\n                      <Button\r\n                          fullWidth\r\n                          aria-controls=\"simple-menu\" \r\n                          aria-haspopup=\"true\"\r\n                          color=\"success\" \r\n                          variant=\"contained\"\r\n                          onClick={()=>setIsToPrint(true)}\r\n                          >\r\n                              Print Raw Material Stock\r\n                          </Button>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3}>\r\n                      <TextField\r\n                      label=\"Search Raw Material\"\r\n                      fullWidth\r\n                      value = {searchQuery}\r\n                      onChange={(event)=>{searchRawMaterials(event.target.value)}}\r\n                      variant=\"outlined\"/>\r\n                    </Grid>\r\n                  </>)}\r\n                \r\n            </Grid>\r\n        </Grid>\r\n        {isToPrint === true? (\r\n        <Grid item lg={12} md={12}><PrintRawMaterialStock data = {filteredRawMaterialList}/></Grid>) \r\n        : rawMaterialList.length>0 ? (<Grid item lg={12} md={12}>\r\n           <div style={{ height: 400, width: '100%' }}>\r\n                   <DataGrid\r\n                        rows={filteredRawMaterialList}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        checkboxSelection\r\n                        onRowSelected={onSelect}\r\n                    />\r\n                </div>\r\n            </Grid>):(<></>)}\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default RawMaterials;\r\n","import { Card, InputLabel, Select, Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst SalesReportListFilter = ({getOrderList,getOrderListByDate,getOrderListByYear,filterByPayment,filterToken})=>{\r\n    const d = new Date();\r\n    const [paymentType,setPaymentType] = useState(\"Cash\");\r\n    const [month,setMonth] = useState(\"\");\r\n    const [year,setYear] = useState(d.getFullYear());\r\n    const changePaymentType = async(event)=>{\r\n        const {value} = event.target;\r\n        setPaymentType(value);\r\n        filterByPayment(value);\r\n    }\r\n    const changeMonth = async(event)=>{\r\n        const {value} = event.target;\r\n        const values = value.split(\"-\");\r\n        setYear(values[0]);\r\n        setMonth(value);\r\n        const monthName = months[values[1]-1];\r\n        getOrderList(monthName,values[0],paymentType);\r\n    }\r\n    const changeYear = async(event)=>{\r\n        const {value} = event.target;\r\n        setYear(value);\r\n        getOrderListByYear(value);\r\n    }\r\n    const [date,setDate] = useState(null);\r\n    const getRecordByDate = (value)=>{\r\n        setDate(value);\r\n        const dates = value.split(\"-\");\r\n        getOrderListByDate(months[dates[1]-1],dates[0],dates[2]);\r\n    }\r\n    const [token,setToken] = useState(\"\");\r\n    const searchToken = async(value)=>{\r\n        setToken(value);\r\n        filterToken(value);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                year={year}\r\n                                onChange={changeYear}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Year\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3}>\r\n                            <FormControl \r\n                                    fullWidth \r\n                                    variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">Payment Types</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        value={paymentType}\r\n                                        onChange={changePaymentType}\r\n                                        label=\"Payment Types\"\r\n                                    >\r\n                                    <MenuItem value=\"All\">All</MenuItem>\r\n                                    <MenuItem value=\"Cash\">Cash</MenuItem>\r\n                                    <MenuItem value=\"Card\">Credit Card</MenuItem>\r\n                                    <MenuItem value=\"House\">House</MenuItem>\r\n                                    <MenuItem value=\"Complimentary\">Complimentary</MenuItem>\r\n                                    <MenuItem value=\"Due\">Due</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"1\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"month\"\r\n                                    value={month}\r\n                                    onChange={changeMonth}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Month\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"date\"\r\n                                    value={date}\r\n                                    onChange={(event)=>getRecordByDate(event.target.value)}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Date\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item lg={12} md={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={token}\r\n                                onChange={(event)=>searchToken(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Search Token\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesReportListFilter;","import React, { useState } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst MySwal = withReactContent(Swal);\r\nconst SalesReportListTable = ({ data }) => {\r\n  const navigate = useNavigate();\r\n  const columns = [\r\n    { field: \"token\", headerName: \"Token Number\", width: 180 },\r\n    {\r\n      field: \"vatamount\",\r\n      headerName: \"Vat Amount\",\r\n      width: 190,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"grossamount\",\r\n      headerName: \"Gross Amount\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"grandtotal\",\r\n      headerName: \"Grand Total\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"totalitem\",\r\n      headerName: \"Total Ordered\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"table\",\r\n      headerName: \"Table\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"waiter\",\r\n      headerName: \"Waiter Name\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"orderingtime\",\r\n      headerName: \"Order Time\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"orderdate\",\r\n      headerName: \"Date\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"customer\",\r\n      headerName: \"Customer\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"customerphone\",\r\n      headerName: \"Customer Phone\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"guestnumber\",\r\n      headerName: \"Total Guest\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"paymentType\",\r\n      headerName: \"Payment Type\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"paymentStatus\",\r\n      headerName: \"Payment Status\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"paidAmount\",\r\n      headerName: \"Paid Amount\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"complimentaryOfDueFor\",\r\n      headerName: \"Complimentart / House / Due Bill For\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"billprintby\",\r\n      headerName: \"Cashier / Bill Print By\",\r\n      width: 220,\r\n      editable: true,\r\n    },\r\n  ];\r\n  const onSelect = (event) => {\r\n    const { data } = event;\r\n    const { id } = data;\r\n    setSelectedId(id);\r\n  };\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const checkItems = async () => {\r\n    if (!selectedId) {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Opps...\",\r\n        text: `You might have forget to select and order!`,\r\n      });\r\n    } else {\r\n      navigate(`/report/sales/order/items/${selectedId}`);\r\n    }\r\n  };\r\n  const getDetails = async () => {\r\n    if (!selectedId) {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Opps...\",\r\n        text: `You might have forget to select and order!`,\r\n      });\r\n    } else {\r\n      navigate(`/report/sales/details/${selectedId}`);\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing=\"1\"\r\n      >\r\n        <Grid item lg={12} md={12}>\r\n          <Grid container direction=\"row\" spacing=\"1\">\r\n            <Grid item lg={3} md={3}>\r\n              <Button\r\n                color=\"success\"\r\n                variant=\"contained\"\r\n                onClick={checkItems}\r\n                fullWidth\r\n              >\r\n                Order Items\r\n              </Button>\r\n            </Grid>\r\n            <Grid item lg={3} md={3}>\r\n              <Button\r\n                color=\"success\"\r\n                variant=\"contained\"\r\n                onClick={getDetails}\r\n                fullWidth\r\n              >\r\n                Bill Details\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item lg={12} md={12}>\r\n          <div\r\n            style={{\r\n              height: 400,\r\n              width: \"100%\",\r\n              overflowX: \"auto\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            <DataGrid\r\n              rows={data}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onRowSelected={onSelect}\r\n              disableSelectionOnClick\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesReportListTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SalesReportListFilter from \"../Components/Sales Report/SalesReportListFilter\";\r\nimport SalesReportListTable from \"../Components/Sales Report/SalesReportListTable\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nconst SalesReportList = () => {\r\n  const [orderList, setOrderList] = useState([]);\r\n  const [allOrderList, setAllOrderList] = useState([]);\r\n  const getOrderList = async (month = \"\", year = \"\") => {\r\n    const response = await axios.get(\r\n      `${getUrl()}/order/sales/report/list?month=${month}&year=${year}`,\r\n      { headers: { Authorization: `Bearer ${getAccessToken()}` } }\r\n    );\r\n    if (response.status === 200) {\r\n      const { data } = response;\r\n      setOrderList(data);\r\n      setAllOrderList(data);\r\n    }\r\n  };\r\n  const getOrderListByDate = async (month, year, day) => {\r\n    const response = await axios.get(\r\n      `${getUrl()}/order/sales/report/list/by/date?month=${month}&year=${year}&day=${day}`,\r\n      { headers: { Authorization: `Bearer ${getAccessToken()}` } }\r\n    );\r\n    if (response.status === 200) {\r\n      const { data } = response;\r\n      setOrderList(data);\r\n      setAllOrderList(data);\r\n    }\r\n  };\r\n  const getOrderListByYear = async (year) => {\r\n    const response = await axios.get(\r\n      `${getUrl()}/order/sales/report/list/by/year?year=${year}`,\r\n      { headers: { Authorization: `Bearer ${getAccessToken()}` } }\r\n    );\r\n    if (response.status === 200) {\r\n      const { data } = response;\r\n      setOrderList(data);\r\n      setAllOrderList(data);\r\n    }\r\n  };\r\n  const filterPaymentTypes = async (type) => {\r\n    if (type === \"All\") {\r\n      setOrderList(allOrderList);\r\n    } else {\r\n      const filteredData = allOrderList.filter((order) => {\r\n        return order.paymentType === type;\r\n      });\r\n      setOrderList(filteredData);\r\n    }\r\n  };\r\n  const filterToken = async (query) => {\r\n    if (query === \"\") {\r\n      setOrderList(allOrderList);\r\n    } else {\r\n      const reg = new RegExp(query.split(\"\").join(\".*\"), \"i\");\r\n      const filteredData = allOrderList.filter((order) =>\r\n        order.token.toLowerCase().match(reg)\r\n      );\r\n      setOrderList(filteredData);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getOrderList();\r\n  }, []);\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      spacing=\"1\"\r\n    >\r\n      <Grid style={{ marginBottom: \"15px\" }} item lg={12} md={12}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item lg={6} md={6}>\r\n            <h2>Sales Report List</h2>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item lg={12} md={12}>\r\n            <SalesReportListFilter\r\n              filterToken={filterToken}\r\n              filterByPayment={filterPaymentTypes}\r\n              getOrderListByYear={getOrderListByYear}\r\n              getOrderListByDate={getOrderListByDate}\r\n              getOrderList={getOrderList}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item lg={12} md={12}>\r\n            {orderList.length > 0 && <SalesReportListTable data={orderList} />}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SalesReportList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Card, Table, TableHead, TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../../HTTP/token\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nconst MySwal = withReactContent(Swal);\r\nconst SalesItemsList = () => {\r\n    const {orderid} = useParams();\r\n    const [items,setItems] = useState([]);\r\n    const getOrderItems = async()=>{\r\n        try{\r\n            const response = await axios.get(`${getUrl()}/order/items/${orderid}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n            if(response.status===200){\r\n                const {data} = response;\r\n                setItems(data);\r\n            }\r\n        }\r\n        catch(error){   \r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Opps...',\r\n                text: `Sorry something occured!`,\r\n              });\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getOrderItems();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n  return (\r\n      <Card>\r\n          <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid item lg={12} md={12}>\r\n                  <Grid \r\n                  container\r\n                  direction=\"row\"\r\n                  spacing=\"1\">\r\n                      <h3>Sales Item</h3>\r\n                  </Grid>\r\n              </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <div style={{ height: 400, width: \"100%\",overflowX:\"auto\",marginTop:\"15px\" }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Product Name</TableCell>\r\n                                <TableCell>Total Quantity</TableCell>\r\n                                <TableCell>Sub Total</TableCell>\r\n                            </TableRow>\r\n                            {items.map((item)=>{\r\n                                return (\r\n                                    <TableRow>\r\n                                        <TableCell>{item.product}</TableCell>\r\n                                        <TableCell>{item.quantity}</TableCell>\r\n                                        <TableCell>{item.subtotal}</TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableHead>\r\n                    </Table>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default SalesItemsList;\r\n","import React, { useRef } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst SalesReportBook = ({ data, date }) => {\r\n  const componentRef = useRef();\r\n  const reports = data.reports;\r\n  return (\r\n    <Card>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing=\"1\"\r\n      >\r\n        <Grid item lg={6} md={6}>\r\n          <CSVLink data={reports} style={{ textDecoration: \"none\" }}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              // onClick={exportToExcel}\r\n            >\r\n              Download as excel\r\n            </Button>\r\n          </CSVLink>\r\n        </Grid>\r\n        <Grid item lg={6} md={6}>\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                // endIcon={<SaveOutlinedIcon/>}\r\n              >\r\n                Print\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={12} md={12}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing=\"1\"\r\n          >\r\n            <Grid item lg={12} md={12}>\r\n              <div ref={componentRef}>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <p style={{ width: \"40%\" }}>\r\n                    <strong>Month / Date: </strong> {date}\r\n                  </p>\r\n                  <h3 style={{ width: \"60%\" }}>Monthly / Daily Sales Report</h3>\r\n                </div>\r\n                <table border=\"1px\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Serial No</td>\r\n                      <td>Order Id</td>\r\n                      <td>Date</td>\r\n                      <td>Guest Name</td>\r\n                      <td>Cell No</td>\r\n                      <td>Gross Amount</td>\r\n                      <td>Vat Amount</td>\r\n                      <td>Grand Total</td>\r\n                      <td>Cash</td>\r\n                      <td>Card</td>\r\n                      <td>Company Due</td>\r\n                      <td>Complimentary</td>\r\n                      <td>Complimentary / Due For</td>\r\n                      <td>Cashier Name / Bill Print By</td>\r\n                    </tr>\r\n                    {data.reports.map((order, index) => {\r\n                      return (\r\n                        <tr key={order.id}>\r\n                          <td>{Number(index) + 1}</td>\r\n                          <td>\r\n                            {!order.token ? (\r\n                              <span></span>\r\n                            ) : (\r\n                              <span>{order.token}</span>\r\n                            )}\r\n                          </td>\r\n                          <td>{order.orderdate}</td>\r\n                          <td>{order.customer}</td>\r\n                          <td>{order.customerPhone}</td>\r\n                          <td>{order.grossamount}</td>\r\n                          <td>{order.vatamount}</td>\r\n                          <td>{order.grandtotal}</td>\r\n                          <td>\r\n                            {!order.cash ? (\r\n                              <span></span>\r\n                            ) : (\r\n                              <span>{order.cash}</span>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {!order.card ? (\r\n                              <span></span>\r\n                            ) : (\r\n                              <span>{order.card}</span>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {!order.due ? (\r\n                              <span></span>\r\n                            ) : (\r\n                              <span>{order.due}</span>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {!order.complimentary ? (\r\n                              <span></span>\r\n                            ) : (\r\n                              <span>{order.complimentary}</span>\r\n                            )}\r\n                          </td>\r\n                          <td>{order.complimentaryOrDueFor}</td>\r\n                          <td>{order.billprintby}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total Gross Amount: {data.totalGross}</td>\r\n                      <td>Total Vat Amount: {data.totalVat}</td>\r\n                      <td>Total Grand Amount: {data.totalSale}</td>\r\n                      <td>Total Cash Amount: {data.totalCash}</td>\r\n                      <td>Total Card Amount: {data.totalCard}</td>\r\n                      <td>Total Due Amount: {data.totalDue}</td>\r\n                      <td>\r\n                        Total Complimentary Amount: {data.totalComplimentary}\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n                <br />\r\n                <table border=\"1px\">\r\n                  <tr>\r\n                    <th>Cash</th>\r\n                    <td>{data.totalCash}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Card</th>\r\n                    <td>{data.totalCard}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Due</th>\r\n                    <td>{data.totalDue}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Complimentary</th>\r\n                    <td>{data.totalComplimentary}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Total Sell</th>\r\n                    <td>{data.totalSale}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesReportBook;\r\n","import { Card, Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst SalesReportFilter = ({getReportByDate,getReportByMonth})=>{\r\n    const [month,setMonth] = useState(\"\");\r\n    const [date,setDate] = useState(null);\r\n    const changeMonth = async(event)=>{\r\n        const {value} = event.target;\r\n        const values = value.split(\"-\");\r\n        setMonth(value);\r\n        setDate(\"\");\r\n        const monthName = months[values[1]-1];\r\n        getReportByMonth(monthName,values[0]);\r\n    }\r\n    const getReportWithDate = (value)=>{\r\n        setMonth(\"\");\r\n        setDate(value);\r\n        const dates = value.split(\"-\");\r\n        getReportByDate(months[dates[1]-1],dates[0],dates[2]);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"1\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"month\"\r\n                                    value={month}\r\n                                    onChange={changeMonth}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Month\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"date\"\r\n                                    value={date}\r\n                                    onChange={(event)=>getReportWithDate(event.target.value)}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Date\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesReportFilter;","import React, { useEffect, useState } from \"react\";\r\nimport {  Grid } from \"@material-ui/core\";\r\n// import SalesReportFilter from \"../Components/Sales Report/SalesReportFilterList\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport SalesReportBook from \"../Components/Sales Report/SalesReportBook\";\r\nimport SalesReportFilter from \"../Components/Sales Report/SalesReportFilter\";\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst SalesReport = () => {\r\n    const d = new Date();\r\n    const [selectedDate,setSelectedDate] = useState(`${d.getDate()}-${Number(d.getMonth())+1}-${d.getFullYear()}`);\r\n    const [reportList,setReportList] = useState();\r\n    const getReportByDate = async(month=\"\",year=\"\",day=\"\")=>{\r\n        if(month===\"\" && year === \"\" && day ===\"\") setSelectedDate(`${d.getDate()}-${months[Number(d.getMonth())]}-${d.getFullYear()}`);\r\n        else setSelectedDate(`${day}-${month}-${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/daily/sales/report?month=${month}&year=${year}&day=${day}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n            const {data} = response;\r\n            setReportList(data);\r\n        }\r\n    }\r\n    const getReportByMonth = async(month,year)=>{\r\n        if(month===\"\" && year === \"\" ) setSelectedDate(`${months[Number(d.getMonth())]}-${d.getFullYear()}`);\r\n        else setSelectedDate(`${month}-${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/monthly/sales/report?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setReportList(data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getReportByDate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Sales Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <SalesReportFilter \r\n                    getReportByDate={getReportByDate}\r\n                    getReportByMonth={getReportByMonth}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    {reportList && \r\n                    <SalesReportBook \r\n                    date={selectedDate}\r\n                    data={reportList}/>}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default SalesReport;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Card, Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst ProfitReportFilter = ({getProfitByYear,getProfitByMonth})=>{\r\n    const [month,setMonth] = useState(\"\");\r\n    const [year,setYear] = useState(null);\r\n    const changeMonth = async(event)=>{\r\n        const {value} = event.target;\r\n        const values = value.split(\"-\");\r\n        setMonth(value);\r\n        setYear(\"\");\r\n        const monthName = months[values[1]-1];\r\n        getProfitByMonth(monthName,values[0]);\r\n    }\r\n    const getProfitWithYear = (value)=>{\r\n        setMonth(\"\");\r\n        setYear(value);\r\n        getProfitByYear(value);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"1\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"month\"\r\n                                    value={month}\r\n                                    onChange={changeMonth}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Month\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                                {/* <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    value={year}\r\n                                    onChange={(event)=>getProfitWithYear(event.target.value)}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Year\" \r\n                                    variant=\"outlined\" />\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfitReportFilter;","import React, { useRef } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\n// import { CSVLink } from \"react-csv\";\r\nconst ProfitReportTable = ({data,date}) => {\r\n    const componentRef = useRef();\r\n    // const reports = data.reports;\r\n  return (\r\n      <Card>\r\n        <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            {/* <Grid item lg={6} md={6}>\r\n            <CSVLink data={reports} style={{ textDecoration:\"none\" }}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    // onClick={exportToExcel}\r\n                    >\r\n                        Download as excel\r\n                    </Button>\r\n            </CSVLink>\r\n            </Grid> */}\r\n            <Grid item lg={6} md={6}>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        // endIcon={<SaveOutlinedIcon/>}\r\n                        >\r\n                        Print\r\n                        </Button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <div ref={componentRef}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <p style={{ width:\"40%\" }}><strong>Month / Year: </strong> {date}</p>\r\n                                <h3 style={{ width:\"60%\" }}>Monthly / Yearly Profit Report</h3>\r\n                            </div>\r\n                            <table border=\"1px\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Serial No</td>\r\n                                        <td>Year</td>\r\n                                        <td>Month</td>\r\n                                        <td>Profit Including Complimentary / Due</td>\r\n                                        <td>Loss Including Complimentary / Due</td>\r\n                                        <td>Profit Excluding Complimentary / Due</td>\r\n                                        <td>Loss Excluding Complimentary / Due</td>\r\n                                        <td>Total Purchase</td>\r\n                                        <td>Total Expense</td>\r\n                                        <td>Total Purchase And Expense</td>\r\n                                    </tr>\r\n                                    {data.map((profit,index)=>{\r\n                                        return (\r\n                                        <tr key={index}>\r\n                                            <td>{Number(index)+1}</td>\r\n                                            <td>{profit.year}</td>\r\n                                            <td>{profit.month}</td>\r\n                                            <td>{profit.profitIncludingDueOrComplimentary > 0 ? (<span>{profit.profitIncludingDueOrComplimentary}</span>): (<span></span>)}</td>\r\n                                            <td>{profit.profitIncludingDueOrComplimentary < 0 ? (<span>{profit.profitIncludingDueOrComplimentary}</span>): (<span></span>)}</td>\r\n                                            <td>{profit.profitExcludingDueOrComplimentary > 0 ? (<span>{profit.profitExcludingDueOrComplimentary}</span>): (<span></span>)}</td>\r\n                                            <td>{profit.profitExcludingDueOrComplimentary < 0 ? (<span>{profit.profitExcludingDueOrComplimentary}</span>): (<span></span>)}</td>\r\n                                            <td>{profit.totalPurchase}</td>\r\n                                            <td>{profit.totalExpense}</td>\r\n                                            <td>{profit.totalPurchaseExpense}</td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default ProfitReportTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {  Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport ProfitReportFilter from \"../Components/Profit/ProfitReportFilter\";\r\nimport ProfitReportTable from \"../Components/Profit/ProfitReportTable\";\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst ProfitReport = () => {\r\n    const d = new Date();\r\n    const [selectedDate,setSelectedDate] = useState(`${d.getDate()}-${Number(d.getMonth())+1}-${d.getFullYear()}`);\r\n    const [profitList,setProfitList] = useState();\r\n    const getProfitByYear = async(year=\"\")=>{\r\n        if(year === \"\" ) setSelectedDate(`${d.getFullYear()}`);\r\n        else setSelectedDate(`${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/daily/sales/profit?&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n            const {data} = response;\r\n            setProfitList(data);\r\n        }\r\n    }\r\n    const getProfitByMonth = async(month=\"\",year=\"\")=>{\r\n        if(month===\"\" && year === \"\" ) setSelectedDate(`${months[Number(d.getMonth())]}-${d.getFullYear()}`);\r\n        else setSelectedDate(`${month}-${year}`);\r\n        const response = await axios.get(`${getUrl()}/report/monthly/profit?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setProfitList(data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getProfitByMonth();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Profit Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <ProfitReportFilter \r\n                    getProfitByYear={getProfitByYear}\r\n                    getProfitByMonth={getProfitByMonth}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    {profitList && \r\n                    <ProfitReportTable \r\n                    date={selectedDate}\r\n                    data={profitList}/>}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfitReport;\r\n","import { Card,Typography } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst ItemSalesReportFilter = ({getItemListByMonth,getItemListByDate,getItemListByYear})=>{\r\n    const [month,setMonth] = useState(\"\");\r\n    const [year,setYear] = useState(\"\");\r\n    const changeMonth = async(event)=>{\r\n        const {value} = event.target;\r\n        const values = value.split(\"-\");\r\n        setMonth(value);\r\n        const monthName = months[values[1]-1];\r\n        setYear(\"\");\r\n        setDate(\"\");\r\n        getItemListByMonth(monthName,values[0]);\r\n    }\r\n    const changeYear = async(event)=>{\r\n        const {value} = event.target;\r\n        setYear(value);\r\n        setMonth(\"\");\r\n        setDate(\"\");\r\n        getItemListByYear(value);\r\n    }\r\n    const [date,setDate] = useState(\"\");\r\n    const getRecordByDate = (value)=>{\r\n        setDate(value);\r\n        const dates = value.split(\"-\");\r\n        setMonth(\"\");\r\n        setYear(\"\");\r\n        getItemListByDate(months[dates[1]-1],dates[0],dates[2]);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\">Filters</Typography>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={3} md={3}>\r\n                            <TextField \r\n                                fullWidth\r\n                                year={year}\r\n                                onChange={changeYear}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Year\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            spacing=\"1\">\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"month\"\r\n                                    value={month}\r\n                                    onChange={changeMonth}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Month\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                                <Grid item lg={6} md={6}>\r\n                                    <TextField \r\n                                    fullWidth\r\n                                    type=\"date\"\r\n                                    value={date}\r\n                                    onChange={(event)=>getRecordByDate(event.target.value)}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Select Date\" \r\n                                    variant=\"filled\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemSalesReportFilter;","import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nconst MySwal = withReactContent(Swal);\r\nconst UserCreateForm = () => {\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const resetData = () => {\r\n    setIsError(false);\r\n    setErrorMsg(\"\");\r\n    setUsername(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setRole(\"\");\r\n  };\r\n  const createUser = async () => {\r\n    if (username === \"\" || email === \"\" || password === \"\" || role === 0) {\r\n      setIsError(true);\r\n      setErrorMsg(\"Please Fill All The fields\");\r\n    } else {\r\n      if (password.length < 8) {\r\n        setIsError(true);\r\n        setErrorMsg(\"User password must be minimum least 8 characters\");\r\n      } else {\r\n        const data = {\r\n          username,\r\n          email,\r\n          role,\r\n          password,\r\n        };\r\n        try {\r\n          const response = await axios.post(`${getUrl()}/user/create`, data, {\r\n            headers: { Authorization: `Bearer ${getAccessToken()}` },\r\n          });\r\n\r\n          if (response.status === 201) {\r\n            MySwal.fire({\r\n              icon: \"success\",\r\n              title: \"Great...\",\r\n              text: `${response.data}`,\r\n            });\r\n            resetData();\r\n          }\r\n        } catch (error) {\r\n          MySwal.fire({\r\n            icon: \"error\",\r\n            text: `${error.message}`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          {isError && (\r\n            <Grid container direction=\"row\" spacing=\"2\">\r\n              <Grid item lg={12} md={12}>\r\n                <Alert severity=\"error\">{errorMsg}</Alert>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <br />\r\n          <Grid container direction=\"row\" spacing=\"2\">\r\n            <Grid item lg={6} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                value={username}\r\n                onChange={(event) =>\r\n                  setUsername(event.target.value.toLowerCase())\r\n                }\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Divider />\r\n          <br />\r\n          <Grid container direction=\"row\" spacing=\"2\">\r\n            <Grid item lg={6} md={6}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  User Role\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={role}\r\n                  onChange={(event) => setRole(event.target.value)}\r\n                  label=\"User Role\"\r\n                >\r\n                  <MenuItem value=\"Cashier\">Cashier</MenuItem>\r\n                  <MenuItem value=\"Waiter\">Waiter</MenuItem>\r\n                  <MenuItem value=\"Accountant\">Accountant</MenuItem>\r\n                  <MenuItem value=\"StockManager\">Stock Manager</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item lg={6} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                id=\"outlined-basic\"\r\n                label=\"User Password\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Divider />\r\n          <br />\r\n          <Grid container>\r\n            <Grid item lg={12} md={12}>\r\n              <Button\r\n                fullWidth\r\n                color=\"success\"\r\n                onClick={createUser}\r\n                variant=\"contained\"\r\n              >\r\n                Create User\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCreateForm;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport getUrl from '../../../HTTP/url';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { useNavigate, useParams } from 'react-router';\r\nconst MySwal = withReactContent(Swal)\r\nconst UserDetails = ()=>{\r\n    const {id} = useParams();\r\n    const [username,setUsername] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [role,setRole] = useState(\"\");\r\n    \r\n    const getUser = async()=>{\r\n        try{\r\n            const response = await axios.get(`${getUrl()}/user/${id}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n            \r\n            if(response.status === 200){\r\n                const {data} = response;\r\n                setUsername(data[0].username);\r\n                setEmail(data[0].email);\r\n                setRole(data[0].role);\r\n            }\r\n        }\r\n        catch(error){\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                text: `${error.message}`,\r\n            });\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getUser();\r\n    },[]);\r\n    const navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={()=>{navigate('/user-list')}}\r\n                            variant=\"contained\">\r\n                                Go Back\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={username}\r\n                                disabled\r\n                                id=\"outlined-basic\" \r\n                                label=\"Username\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={email}\r\n                                disabled\r\n                                id=\"outlined-basic\" \r\n                                label=\"Email\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <FormControl \r\n                            fullWidth\r\n                            variant=\"outlined\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">User Role</InputLabel>\r\n                                <Select\r\n                                disabled\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={role}\r\n                                label=\"User Role\"\r\n                                >\r\n                                <MenuItem value=\"Cashier\">Cashier</MenuItem>\r\n                                <MenuItem value=\"Waiter\">Waiter</MenuItem>\r\n                                <MenuItem value=\"Accountant\">Acountant</MenuItem>\r\n                                <MenuItem value=\"Stock Manager\">Stock Manager</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { getAccessToken } from '../../../HTTP/token';\r\nimport getUrl from '../../../HTTP/url';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst UserEditForm = ()=>{\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n    const [username,setUsername] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [role,setRole] = useState(\"\");\r\n    const getUser = async()=>{\r\n        try{\r\n            const response = await axios.get(`${getUrl()}/user/${id}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n            \r\n            if(response.status === 200){\r\n                const {data} = response;\r\n                setUsername(data[0].username);\r\n                setEmail(data[0].email);\r\n                setRole(data[0].role);\r\n            }\r\n        }\r\n        catch(error){\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                text: `${error.message}`,\r\n            });\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getUser();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const resetData = ()=>{\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setRole(\"\");\r\n    }\r\n    const editUser = async()=>{\r\n        MySwal.fire({\r\n            title: 'Are you sure to update information?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Update',\r\n            cancelButtonText: `Keep`,\r\n          }).then(async(result) => {\r\n            if (result.isConfirmed) {\r\n                const data = {\r\n                    username,\r\n                    email,\r\n                    role,\r\n                    password,\r\n                }\r\n                try{\r\n                    const response = await axios.patch(`${getUrl()}/user/${id}`,data,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n                    \r\n                    if(response.status === 200){\r\n                        MySwal.fire({\r\n                            icon: 'success',\r\n                            title: 'Great...',\r\n                            text: `${response.data}`,\r\n                        });\r\n                        setPassword(\"\");\r\n                    }\r\n                }\r\n                catch(error){\r\n                    MySwal.fire({\r\n                        icon: 'error',\r\n                        text: `${error.message}`,\r\n                    });\r\n                }\r\n            } else if (result.isDenied) {}\r\n          })\r\n        \r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={()=>{navigate('/user-list')}}\r\n                            variant=\"contained\">\r\n                                Go Back\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={12} md={12}>\r\n                            <h2>Edit User Credetials</h2>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={username}\r\n                                onChange={(event)=>setUsername(event.target.value.toLowerCase())}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Username\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                value={email}\r\n                                onChange={(event)=>setEmail(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"Email\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing=\"2\">\r\n                        <Grid item lg={6} md={6}>\r\n                            <FormControl \r\n                            fullWidth\r\n                            variant=\"outlined\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">User Role</InputLabel>\r\n                                <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={role}\r\n                                onChange={(event)=>setRole(event.target.value)}\r\n                                label=\"User Role\"\r\n                                >\r\n                                <MenuItem value=\"Cashier\">Cashier</MenuItem>\r\n                                <MenuItem value=\"Waiter\">Waiter</MenuItem>\r\n                                <MenuItem value=\"Accountant\">Acountant</MenuItem>\r\n                                <MenuItem value=\"StockManager\">Stock Manager</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6}>\r\n                            <TextField \r\n                                fullWidth\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(event)=>setPassword(event.target.value)}\r\n                                id=\"outlined-basic\" \r\n                                label=\"User Password\" \r\n                                variant=\"outlined\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Divider/>\r\n                    <br />\r\n                    <Grid container>\r\n                        <Grid item lg={12} md={12}>\r\n                            <Button\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            onClick={editUser}\r\n                            variant=\"contained\">Save</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditForm;","import React, { useRef } from \"react\";\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst ItemSalesReportTable = ({data,date}) => {\r\n    const componentRef = useRef();\r\n    const headers = [\r\n        {label: \"Product\",key:\"name\"},\r\n        {label: \"Total Item Sold\",key:\"totalquantitysold\"},\r\n        {label: \"Total Amount Recieved\",key:\"totalamount\"},\r\n    ]\r\n  return (\r\n      <Card>\r\n        <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\" \r\n            spacing=\"1\">\r\n            <Grid item lg={6} md={6}>\r\n            <CSVLink \r\n            data={data} \r\n            headers={headers}\r\n            style={{ textDecoration:\"none\" }}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    // onClick={exportToExcel}\r\n                    >\r\n                        Download as excel\r\n                    </Button>\r\n            </CSVLink>\r\n            </Grid>\r\n            <Grid item lg={6} md={6}>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        // endIcon={<SaveOutlinedIcon/>}\r\n                        >\r\n                        Print\r\n                        </Button>}\r\n                    content={() => componentRef.current}\r\n                />\r\n            </Grid>\r\n            <Grid item lg={12} md={12}>\r\n                <Grid \r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\" \r\n                spacing=\"1\">\r\n                    <Grid item lg={12} md={12}>\r\n                        <div ref={componentRef}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <p style={{ width:\"40%\" }}><strong>Month / Date: </strong> {date}</p>\r\n                                <h3 style={{ width:\"60%\" }}>Monthly / Daily Sales Report</h3>\r\n                            </div>\r\n                            <table border=\"1px\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>Product</td>\r\n                                        <td>Total Item Sold</td>\r\n                                        <td>Total Amount Recieved</td>\r\n                                    </tr>\r\n                                    {data.map((item)=>{\r\n                                        return (\r\n                                        <tr key={item.id}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.totalquantitysold}</td>\r\n                                            <td>{item.totalamount}</td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default ItemSalesReportTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {  Grid } from \"@material-ui/core\";\r\n// import SalesReportFilter from \"../Components/Sales Report/SalesReportFilterList\";\r\nimport axios from \"axios\";\r\nimport getUrl from \"../../../HTTP/url\";\r\nimport { getAccessToken } from \"../../../HTTP/token\";\r\nimport ItemSalesReportFilter from \"../Components/Item Sales Report/ItemSalesReportFilter\";\r\nimport ItemSalesReportTable from \"../Components/Item Sales Report/ItemSalesReportTable\";\r\nconst months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\nconst ItemSalesReport = () => {\r\n    const d = new Date();\r\n    const [selectedDate,setSelectedDate] = useState(`${d.getDate()}-${Number(d.getMonth())+1}-${d.getFullYear()}`);\r\n    const [reportList,setReportList] = useState([]);\r\n    const getReportByDate = async(month=\"\",year=\"\",day=\"\")=>{\r\n        if(month===\"\" && year === \"\" && day ===\"\") setSelectedDate(`${d.getDate()}-${months[Number(d.getMonth())]}-${d.getFullYear()}`);\r\n        else setSelectedDate(`${day}-${month}-${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/items/by/date?month=${month}&year=${year}&day=${day}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n            const {data} = response;\r\n            setReportList(data);\r\n        }\r\n    }\r\n    const getReportByMonth = async(month=\"\",year=\"\")=>{\r\n        if(month===\"\" && year === \"\" ) setSelectedDate(`${months[Number(d.getMonth())]}-${d.getFullYear()}`);\r\n        else setSelectedDate(`${month}-${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/items/by/month?month=${month}&year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setReportList(data);\r\n        }\r\n    }\r\n    const getReportByYear = async(year=\"\")=>{\r\n        if(year === \"\" ) setSelectedDate(`${d.getFullYear()}`);\r\n        else setSelectedDate(`${year}`);\r\n        const response = await axios.get(`${getUrl()}/order/items/by/year?year=${year}`,{headers: {Authorization: `Bearer ${getAccessToken()}`}});\r\n        if(response.status===200){\r\n          const {data} = response;\r\n          setReportList(data);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getReportByMonth();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n  return (\r\n      <Grid \r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" \r\n        spacing=\"1\">\r\n        <Grid \r\n        style={{ marginBottom: \"15px\" }}\r\n        item \r\n        lg={12} md={12}>\r\n            <Grid \r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\">\r\n                <Grid item lg={6} md={6}>\r\n                    <h2>Sales Report</h2>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    <ItemSalesReportFilter \r\n                    getItemListByDate={getReportByDate}\r\n                    getItemListByYear={getReportByYear}\r\n                    getItemListByMonth={getReportByMonth}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12}>\r\n                    {reportList.length> 0 && \r\n                    <ItemSalesReportTable \r\n                    date={selectedDate}\r\n                    data={reportList}/>}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default ItemSalesReport;\r\n","\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport getUrl from '../../HTTP/url';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"http://somikoronits.com/\">\r\n                Somikoron It Services\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: '64px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: '8px',\r\n        backgroundColor: '#f48fb1',\r\n        width: \"260px !important\",\r\n        height: \"260px !important\"\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: '8px',\r\n    },\r\n    submit: {\r\n        margin: '24px 0px 16px',\r\n    },\r\n}));\r\n\r\nexport default function Register() {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    // const url = `${getUrl()}/user/signin`;\r\n    const url = `https://immense-badlands-33128.herokuapp.com/api/admin/signup`;\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [contactNumber, setContactNumber] = useState(\"\");\r\n\r\n\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const signIn = async () => {\r\n        const data = {\r\n            firstName,\r\n            lastName,\r\n            contactNumber,\r\n            email,\r\n            password\r\n        }\r\n\r\n        const response = await axios.post(url, data);\r\n        console.log('response', response)\r\n        if (response.status === 201) {\r\n            navigate(\"/login\")\r\n\r\n        } else {\r\n            console.log('response', response)\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Opps...',\r\n                text: `${response?.message}`,\r\n            });\r\n            // alert(\"please fill up all the fields\")\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    const checkRoleAndRedirect = async (role) => {\r\n        if (role.toLowerCase() === 'admin' || role.toLowerCase() === 'cashier' || role.toLowerCase() === \"accountant\"\r\n            || role.toLowerCase() === \"stockmanager\") {\r\n            navigate('/dashboards/home');\r\n        } else if (role.toLowerCase() === 'waiter') {\r\n            navigate('/pos');\r\n        }\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper} style={{ marginTop: '200px' }}>\r\n                {/* <Avatar \r\n        className={classes.avatar}>\r\n          <img src=\"https://res.cloudinary.com/chiranswe/image/upload/v1633716259/desha_logo-removebg-preview_xf8sec.png\" alt=\"\" />\r\n        </Avatar> */}\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register Page\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <div className='name'>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"First Name\"\r\n                            autoFocus\r\n                            value={firstName}\r\n                            onChange={(event) => setFirstName(event.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Last Name\"\r\n                            autoFocus\r\n                            value={lastName}\r\n                            onChange={(event) => setLastName(event.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        autoFocus\r\n                        value={contactNumber}\r\n                        onChange={(event) => setContactNumber(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        autoFocus\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={signIn}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#/login\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign In\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { lazy } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n// import Customers from \"../views/Contacts/Customers.jsx\";\r\n// import Suppliers from \"../views/Contacts/Suppliers.jsx\";\r\n// import ViewCustomer from \"../views/Contacts/ViewCustomer.jsx\";\r\n// import ViewSupplier from \"../views/Contacts/ViewSupplier.jsx\";\r\nimport Dashboard from \"../views/Dashboard/Views/Dashboard.jsx\";\r\n// import ExpenseAdd from \"../views/Expense/Views/ExpenseAdd.jsx\";\r\n// import ExpenseList from \"../views/Expense/Views/ExpenseList.jsx\";\r\nimport AddProduct from \"../views/Inventory/Views/ProductAdd.jsx\";\r\nimport ProductCategories from \"../views/Inventory/Views/ProductCategories.jsx\";\r\nimport ProductList from \"../views/Inventory/Views/ProductList.jsx\";\r\n// import ProductUnits from \"../views/Inventory/Views/Units.jsx\";\r\nimport ProductWarrantyList from \"../views/Inventory/Views/WarrantyList.jsx\";\r\n// import PaymentAccountBalanceSheet from \"../views/Payment Accounts/Views/PaymentAccountBalanceSheet.jsx\";\r\n// import PaymentAccountCashFlow from \"../views/Payment Accounts/Views/PaymentAccountCashFlow.jsx\";\r\n// import PaymentAccountList from \"../views/Payment Accounts/Views/PaymentAccountList.jsx\";\r\n// import PaymentAccountReport from \"../views/Payment Accounts/Views/PaymentAccountReport.jsx\";\r\n// import PaymentAccountTrialBalance from \"../views/Payment Accounts/Views/PaymentAccountTrialBalance.jsx\";\r\n// import POS from \"../views/POS/pos.jsx\";\r\nimport AddPurchase from \"../views/Purchases/Views/AddPurchase.jsx\";\r\nimport AddPurchaseReturn from \"../views/Purchases/Views/AddPurchaseReturn.jsx\";\r\nimport PurchaseList from \"../views/Purchases/Views/PurchaseList.jsx\";\r\nimport PurchaseReturn from \"../views/Purchases/Views/PurchaseReturn.jsx\";\r\n// import RecentTransactions from \"../views/RecentTransactions/RecentTransactions.jsx\";\r\nimport ActivityLogReport from \"../views/Reports/Views/ActivityLogReport.jsx\";\r\nimport ExpenseReport from \"../views/Reports/Views/ExpenseReport.jsx\";\r\nimport StockAdjustmentReport from \"../views/Reports/Views/StockAdjustmentReport.jsx\";\r\n// import AddDraft from \"../views/Sales/Views/AddDraft.jsx\";\r\n// import AddQuotation from \"../views/Sales/Views/AddQuotation.jsx\";\r\n// import AddSale from \"../views/Sales/Views/AddSale.jsx\";\r\n// import Discounts from \"../views/Sales/Views/Discounts.jsx\";\r\n// import DraftList from \"../views/Sales/Views/DraftList.jsx\";\r\n// import PosList from \"../views/Sales/Views/PostList.jsx\";\r\n// import QuotationList from \"../views/Sales/Views/QuotationList.jsx\";\r\n// import SellReturnList from \"../views/Sales/Views/SellReturnList.jsx\";\r\n// import Sells from \"../views/Sales/Views/Sells.jsx\";\r\n// import Shipments from \"../views/Sales/Views/Shipments.jsx\";\r\n// import StockAdjustmentAdd from \"../views/Stock-Adjustment/Views/StockAdjustmentAdd.jsx\";\r\n// import StockAdjustmentList from \"../views/Stock-Adjustment/Views/StockAdjustmentList.jsx\";\r\n// import StockTransferAdd from \"../views/Stock-Transfers/Views/StockTransferAdd.jsx\";\r\n// import StockTransferList from \"../views/Stock-Transfers/Views/StockTransferList.jsx\";\r\n// import UserList from \"../views/User Management/UserList.jsx\";\r\nimport Login from \"../views/Login/login\";\r\nimport AddPurchaseCategory from \"../views/Purchases/Views/AddPurchaseCategory.jsx\";\r\n// import AddExpenseCategory from \"../views/Expense/Views/AddExpenseCategory.jsx\";\r\nimport GeneralItems from \"../views/Inventory/Views/GeneralItems.jsx\";\r\nimport RawMaterialStockAdjustment from \"../views/Stock-Adjustment/Views/RawMaterialStockAdjustment.jsx\";\r\nimport GeneralItemStockAdjustment from \"../views/Stock-Adjustment/Views/GeneralItemStockAdjustment.jsx\";\r\nimport RawMaterialStockAdjustmentReport from \"../views/Reports/Views/RawMaterialStockAdjustmentReport.jsx\";\r\nimport RawMaterialIncreaseStockReport from \"../views/Reports/Views/RawMaterialIncreaseStockReport.jsx\";\r\nimport GeneralItemStockAdjustmentReport from \"../views/Reports/Views/GeneralItemStockAdjustmentReport.jsx\";\r\nimport GeneralItemIncreaseStockAdjustmentReport from \"../views/Reports/Views/GeneralItemIncreaseStockReport.jsx\";\r\nimport SalesDetails from \"../views/Reports/Components/Sales Report/SalesDetails.jsx\";\r\nimport ItemsReport from \"../views/Reports/Views/ItemsReport.jsx\";\r\nimport RawMaterials from \"../views/Inventory/Views/RawMaterial.jsx\";\r\nimport SalesReportList from \"../views/Reports/Views/SalesReportList.jsx\";\r\nimport SalesItemsList from \"../views/Reports/Components/Sales Report/SalesItemsList.jsx\";\r\nimport SalesReport from \"../views/Reports/Views/SalesReport.jsx\";\r\nimport ProfitReport from \"../views/Reports/Views/ProfitReport.jsx\";\r\n// import EditSupplierForm from \"../views/Contacts/Components/EditSupplierForm.jsx\";\r\nimport UserCreate from \"../views/User Management/UserCreate.jsx\";\r\nimport UserDetails from \"../views/User Management/Components/UserDetails.jsx\";\r\nimport UserEditForm from \"../views/User Management/Components/UserEditForm.jsx\";\r\nimport ItemSalesReport from \"../views/Reports/Views/ItemSalesReport.jsx\";\r\nimport Register from \"../views/Register/Register.js\";\r\n\r\n/****Layouts*****/\r\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout/FullLayout.js\"));\r\n/****End Layouts*****/\r\n\r\n/*****Routes******/\r\n\r\nconst ThemeRoutes = [\r\n  {\r\n    path: \"/\",\r\n    element: <FullLayout />,\r\n    children: [\r\n      { path: \"/\", element: <Navigate to=\"/login\" /> },\r\n      { path: \"dashboards/home\", exact: true, element: <Dashboard /> },\r\n      // { path: \"pos\", exact: true, element: <POS /> },\r\n      // { path: \"pos/list\", exact: true, element: <PosList /> },\r\n      { path: \"product/create\", exact: true, element: <AddProduct /> },\r\n      { path: \"product/list\", exact: true, element: <ProductList /> },\r\n\r\n      // { path: \"product/units\", exact: true, element: <ProductUnits /> },\r\n      {\r\n        path: \"product/categories\",\r\n        exact: true,\r\n        element: <ProductCategories />,\r\n      },\r\n      { path: \"rawmaterial/create\", exact: true, element: <RawMaterials /> },\r\n      {\r\n        path: \"product/warranties\",\r\n        exact: true,\r\n        element: <ProductWarrantyList />,\r\n      },\r\n      { path: \"purchase/list\", exact: true, element: <PurchaseList /> },\r\n      { path: \"purchase/create\", exact: true, element: <AddPurchase /> },\r\n      { path: \"purchase/return\", exact: true, element: <PurchaseReturn /> },\r\n      {\r\n        path: \"purchase/return/create\",\r\n        exact: true,\r\n        element: <AddPurchaseReturn />,\r\n      },\r\n      {\r\n        path: \"purchase/category\",\r\n        exact: true,\r\n        element: <AddPurchaseCategory />,\r\n      },\r\n      // { path: \"sell/list\", exact: true, element: <Sells /> },\r\n      // { path: \"sell/return/list\", exact: true, element: <SellReturnList /> },\r\n      // { path: \"sell/create\", exact: true, element: <AddSale /> },\r\n      // { path: \"draft/create\", exact: true, element: <AddDraft /> },\r\n      // { path: \"draft/list\", exact: true, element: <DraftList /> },\r\n      // { path: \"quotation/create\", exact: true, element: <AddQuotation /> },\r\n      // { path: \"quotation/list\", exact: true, element: <QuotationList /> },\r\n\r\n\r\n\r\n      // delete\r\n      // {\r\n      //   path: \"stock-transfer/create\",\r\n      //   exact: true,\r\n      //   element: <StockTransferAdd />,\r\n      // },\r\n      // {\r\n      //   path: \"stock-adjustment/create\",\r\n      //   exact: true,\r\n      //   element: <StockAdjustmentAdd />,\r\n      // },\r\n      // {\r\n      //   path: \"stock-adjustment/list\",\r\n      //   exact: true,\r\n      //   element: <StockAdjustmentList />,\r\n      // },\r\n      // { path: \"shipments\", exact: true, element: <Shipments /> },\r\n      // { path: \"discounts\", exact: true, element: <Discounts /> },\r\n      // {\r\n      //   path: \"recent-transactions\",\r\n      //   exact: true,\r\n      //   element: <RecentTransactions />,\r\n      // },\r\n\r\n\r\n\r\n\r\n\r\n      // { path: \"user-list\", exact: true, element: <UserList /> },\r\n      // { path: \"user/create\", exact: true, element: <UserCreate /> },\r\n      // { path: \"user/:id\", exact: true, element: <UserDetails /> },\r\n      // { path: \"user/edit/:id\", exact: true, element: <UserEditForm /> },\r\n      // { path: \"customers\", exact: true, element: <Customers /> },\r\n      // { path: \"customer/:id\", exact: true, element: <ViewCustomer /> },\r\n      // { path: \"suppliers\", exact: true, element: <Suppliers /> },\r\n      // { path: \"supplier/:id\", exact: true, element: <ViewSupplier /> },\r\n      // { path: \"supplier/edit/:id\", exact: true, element: <EditSupplierForm /> },\r\n      // { path: \"supplier/create\", exact: true, element: <AddSupplier /> },\r\n      // { path: \"expense/list\", exact: true, element: <ExpenseList /> },\r\n      // { path: \"expense/create\", exact: true, element: <ExpenseAdd /> },\r\n      // {\r\n      //   path: \"expense/categories\",\r\n      //   exact: true,\r\n      //   element: <AddExpenseCategory />,\r\n      // },\r\n      // {\r\n      //   path: \"paymentaccount/list\",\r\n      //   exact: true,\r\n      //   element: <PaymentAccountList />,\r\n      // },\r\n      // {\r\n      //   path: \"paymentaccount/balancesheet\",\r\n      //   exact: true,\r\n      //   element: <PaymentAccountBalanceSheet />,\r\n      // },\r\n      // {\r\n      //   path: \"paymentaccount/trialbalance\",\r\n      //   exact: true,\r\n      //   element: <PaymentAccountTrialBalance />,\r\n      // },\r\n      // {\r\n      //   path: \"paymentaccount/cashflow\",\r\n      //   exact: true,\r\n      //   element: <PaymentAccountCashFlow />,\r\n      // },\r\n      // {\r\n      //   path: \"paymentaccount/report\",\r\n      //   exact: true,\r\n      //   element: <PaymentAccountReport />,\r\n      // },\r\n\r\n\r\n      { path: \"report/expense\", exact: true, element: <ExpenseReport /> },\r\n      {\r\n        path: \"report/stock-adjustment\",\r\n        exact: true,\r\n        element: <StockAdjustmentReport />,\r\n      },\r\n      {\r\n        path: \"report/activity-log\",\r\n        exact: true,\r\n        element: <ActivityLogReport />,\r\n      },\r\n      {\r\n        path: \"report/raw-material/stock/adjustment\",\r\n        exact: true,\r\n        element: <RawMaterialStockAdjustmentReport />,\r\n      },\r\n      {\r\n        path: \"report/raw-material/increase\",\r\n        exact: true,\r\n        element: <RawMaterialIncreaseStockReport />,\r\n      },\r\n      {\r\n        path: \"report/general-item/stock/adjustment\",\r\n        exact: true,\r\n        element: <GeneralItemStockAdjustmentReport />,\r\n      },\r\n      {\r\n        path: \"report/general-item/increase\",\r\n        exact: true,\r\n        element: <GeneralItemIncreaseStockAdjustmentReport />,\r\n      },\r\n      { path: \"report/sales/list\", exact: true, element: <SalesReportList /> },\r\n      { path: \"report/daily/sales\", exact: true, element: <SalesReport /> },\r\n      {\r\n        path: \"report/sales/order/items/:orderid\",\r\n        exact: true,\r\n        element: <SalesItemsList />,\r\n      },\r\n      {\r\n        path: \"report/sales/details/:id\",\r\n        exact: true,\r\n        element: <SalesDetails />,\r\n      },\r\n      { path: \"report/item/sales/list\", exact: true, element: <ItemsReport /> },\r\n      { path: \"report/item/sales\", exact: true, element: <ItemSalesReport /> },\r\n      { path: \"generalitems/create\", exact: true, element: <GeneralItems /> },\r\n      { path: \"report/profit\", exact: true, element: <ProfitReport /> },\r\n      {\r\n        path: \"stock-adjustment/raw-material\",\r\n        exact: true,\r\n        element: <RawMaterialStockAdjustment />,\r\n      },\r\n      {\r\n        path: \"stock-adjustment/general-item\",\r\n        exact: true,\r\n        element: <GeneralItemStockAdjustment />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    element: <Login />,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    element: <Register />,\r\n  },\r\n];\r\n\r\nexport default ThemeRoutes;\r\n","import React from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport {baseTheme} from './assets/global/Theme-variable'\r\nimport Themeroutes from \"./routes/Router\";\r\nimport './app.css';\r\nrequire('dotenv').config();\r\nconst App = () => {\r\n  const routing = useRoutes(Themeroutes);\r\n  const theme = baseTheme;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"fallback-spinner\">\r\n      <div className=\"loading component-loader\">\r\n        <div className=\"effect-1 effects\"></div>\r\n        <div className=\"effect-2 effects\"></div>\r\n        <div className=\"effect-3 effects\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\nimport Spinner from \"./views/Spinner/Spinner\";\r\nReactDOM.render(\r\n  \r\n    <Suspense fallback={<Spinner />}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Suspense>,\r\n  document.getElementById(\"root\") \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}